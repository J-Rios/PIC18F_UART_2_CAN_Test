

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Oct 03 09:36:50 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38  0000                     
    39                           ; Version 1.44
    40                           ; Generated 14/09/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F26K83 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	mediumconst
    75  00FE48                     __pmediumconst:
    76                           	opt stack 0
    77  00FE48  00                 	db	0
    78  00FE49                     _dpowers:
    79                           	opt stack 0
    80  00FE49  0001               	dw	1
    81  00FE4B  000A               	dw	10
    82  00FE4D  0064               	dw	100
    83  00FE4F  03E8               	dw	1000
    84  00FE51  2710               	dw	10000
    85  00FE53                     __end_of_dpowers:
    86                           	opt stack 0
    87  0000                     _RXB1D7	set	14333
    88  0000                     _RXB1D6	set	14332
    89  0000                     _RXB1D5	set	14331
    90  0000                     _RXB1D4	set	14330
    91  0000                     _RXB1D3	set	14329
    92  0000                     _RXB1D2	set	14328
    93  0000                     _RXB1D1	set	14327
    94  0000                     _RXB1D0	set	14326
    95  0000                     _RXB1DLC	set	14325
    96  0000                     _RXB1SIDH	set	14321
    97  0000                     _RXB1EIDL	set	14324
    98  0000                     _RXB1EIDH	set	14323
    99  0000                     _RXB1SIDL	set	14322
   100  0000                     _RXB1CONbits	set	14320
   101  0000                     _TXB2D7	set	14285
   102  0000                     _TXB2D6	set	14284
   103  0000                     _TXB2D5	set	14283
   104  0000                     _TXB2D4	set	14282
   105  0000                     _TXB2D3	set	14281
   106  0000                     _TXB2D2	set	14280
   107  0000                     _TXB2D1	set	14279
   108  0000                     _TXB2D0	set	14278
   109  0000                     _TXB2DLC	set	14277
   110  0000                     _TXB2SIDL	set	14274
   111  0000                     _TXB2SIDH	set	14273
   112  0000                     _TXB2EIDL	set	14276
   113  0000                     _TXB2EIDH	set	14275
   114  0000                     _TXB2CONbits	set	14272
   115  0000                     _TXB1D7	set	14301
   116  0000                     _TXB1D6	set	14300
   117  0000                     _TXB1D5	set	14299
   118  0000                     _TXB1D4	set	14298
   119  0000                     _TXB1D3	set	14297
   120  0000                     _TXB1D2	set	14296
   121  0000                     _TXB1D1	set	14295
   122  0000                     _TXB1D0	set	14294
   123  0000                     _TXB1DLC	set	14293
   124  0000                     _TXB1SIDL	set	14290
   125  0000                     _TXB1SIDH	set	14289
   126  0000                     _TXB1EIDL	set	14292
   127  0000                     _TXB1EIDH	set	14291
   128  0000                     _TXB1CONbits	set	14288
   129  0000                     _TXB0D7	set	14317
   130  0000                     _TXB0D6	set	14316
   131  0000                     _TXB0D5	set	14315
   132  0000                     _TXB0D4	set	14314
   133  0000                     _TXB0D3	set	14313
   134  0000                     _TXB0D2	set	14312
   135  0000                     _TXB0D1	set	14311
   136  0000                     _TXB0D0	set	14310
   137  0000                     _TXB0DLC	set	14309
   138  0000                     _TXB0SIDL	set	14306
   139  0000                     _TXB0SIDH	set	14305
   140  0000                     _TXB0EIDL	set	14308
   141  0000                     _TXB0EIDH	set	14307
   142  0000                     _TXB0CONbits	set	14304
   143  0000                     _BRGCON3	set	14085
   144  0000                     _BRGCON2	set	14084
   145  0000                     _BRGCON1	set	14083
   146  0000                     _RXF5SIDL	set	14261
   147  0000                     _RXF5SIDH	set	14260
   148  0000                     _RXF5EIDL	set	14263
   149  0000                     _RXF5EIDH	set	14262
   150  0000                     _RXF4SIDL	set	14257
   151  0000                     _RXF4SIDH	set	14256
   152  0000                     _RXF4EIDL	set	14259
   153  0000                     _RXF4EIDH	set	14258
   154  0000                     _RXF3SIDL	set	14253
   155  0000                     _RXF3SIDH	set	14252
   156  0000                     _RXF3EIDL	set	14255
   157  0000                     _RXF3EIDH	set	14254
   158  0000                     _RXF2SIDL	set	14249
   159  0000                     _RXF2SIDH	set	14248
   160  0000                     _RXF2EIDL	set	14251
   161  0000                     _RXF2EIDH	set	14250
   162  0000                     _RXF1SIDL	set	14245
   163  0000                     _RXF1SIDH	set	14244
   164  0000                     _RXF1EIDL	set	14247
   165  0000                     _RXF1EIDH	set	14246
   166  0000                     _RXF0SIDL	set	14241
   167  0000                     _RXF0SIDH	set	14240
   168  0000                     _RXF0EIDL	set	14243
   169  0000                     _RXF0EIDH	set	14242
   170  0000                     _RXM1SIDL	set	14269
   171  0000                     _RXM1SIDH	set	14268
   172  0000                     _RXM1EIDL	set	14271
   173  0000                     _RXM1EIDH	set	14270
   174  0000                     _RXM0SIDL	set	14265
   175  0000                     _RXM0SIDH	set	14264
   176  0000                     _RXM0EIDL	set	14267
   177  0000                     _RXM0EIDH	set	14266
   178  0000                     _CIOCON	set	14080
   179  0000                     _PIR7bits	set	14759
   180  0000                     _PMD7	set	14791
   181  0000                     _PMD6	set	14790
   182  0000                     _PMD5	set	14789
   183  0000                     _PMD4	set	14788
   184  0000                     _PMD3	set	14787
   185  0000                     _PMD2	set	14786
   186  0000                     _PMD1	set	14785
   187  0000                     _PMD0	set	14784
   188  0000                     _OSCTUNE	set	14814
   189  0000                     _OSCFRQ	set	14815
   190  0000                     _OSCEN	set	14813
   191  0000                     _OSCCON3	set	14811
   192  0000                     _OSCCON1	set	14809
   193  0000                     _PIR3bits	set	14755
   194  0000                     _PIE5bits	set	14741
   195  0000                     _PIR5bits	set	14757
   196  0000                     _WPUAbits	set	14913
   197  0000                     _U1RXPPS	set	15079
   198  0000                     _RC6PPS	set	14870
   199  0000                     _RB4PPS	set	14860
   200  0000                     _CANRXPPS	set	15085
   201  0000                     _RB0PPS	set	14856
   202  0000                     _U2RXPPS	set	15082
   203  0000                     _SLRCONC	set	14947
   204  0000                     _SLRCONB	set	14931
   205  0000                     _SLRCONA	set	14915
   206  0000                     _ODCONC	set	14946
   207  0000                     _ODCONB	set	14930
   208  0000                     _ODCONA	set	14914
   209  0000                     _WPUC	set	14945
   210  0000                     _WPUA	set	14913
   211  0000                     _WPUB	set	14929
   212  0000                     _WPUE	set	14977
   213  0000                     _ANSELA	set	14912
   214  0000                     _ANSELB	set	14928
   215  0000                     _ANSELC	set	14944
   216  0000                     _U2TXB	set	15826
   217  0000                     _U2RXB	set	15824
   218  0000                     _U2CON1bits	set	15835
   219  0000                     _U2ERRIRbits	set	15841
   220  0000                     _U2CON0bits	set	15834
   221  0000                     _U2ERRIE	set	15842
   222  0000                     _U2ERRIR	set	15841
   223  0000                     _U2UIR	set	15840
   224  0000                     _U2FIFO	set	15839
   225  0000                     _U2BRGH	set	15838
   226  0000                     _U2BRGL	set	15837
   227  0000                     _U2CON2	set	15836
   228  0000                     _U2CON1	set	15835
   229  0000                     _U2CON0	set	15834
   230  0000                     _U2P3H	set	15833
   231  0000                     _U2P3L	set	15832
   232  0000                     _U2P2H	set	15831
   233  0000                     _U2P2L	set	15830
   234  0000                     _U2P1H	set	15829
   235  0000                     _U2P1L	set	15828
   236  0000                     _U1TXB	set	15850
   237  0000                     _U1RXB	set	15848
   238  0000                     _U1CON1bits	set	15859
   239  0000                     _U1ERRIRbits	set	15865
   240  0000                     _U1CON0bits	set	15858
   241  0000                     _U1ERRIE	set	15866
   242  0000                     _U1ERRIR	set	15865
   243  0000                     _U1UIR	set	15864
   244  0000                     _U1FIFO	set	15863
   245  0000                     _U1BRGH	set	15862
   246  0000                     _U1BRGL	set	15861
   247  0000                     _U1CON2	set	15860
   248  0000                     _U1CON1	set	15859
   249  0000                     _U1CON0	set	15858
   250  0000                     _U1P3H	set	15857
   251  0000                     _U1P3L	set	15856
   252  0000                     _U1P2H	set	15855
   253  0000                     _U1P2L	set	15854
   254  0000                     _U1P1H	set	15853
   255  0000                     _U1P1L	set	15852
   256  0000                     _PORTAbits	set	16330
   257  0000                     _LATAbits	set	16314
   258  0000                     _TRISAbits	set	16322
   259  0000                     _COMSTATbits	set	16272
   260  0000                     _RXB0D7	set	16269
   261  0000                     _RXB0D6	set	16268
   262  0000                     _RXB0D5	set	16267
   263  0000                     _RXB0D4	set	16266
   264  0000                     _RXB0D3	set	16265
   265  0000                     _RXB0D2	set	16264
   266  0000                     _RXB0D1	set	16263
   267  0000                     _RXB0D0	set	16262
   268  0000                     _RXB0DLC	set	16261
   269  0000                     _RXB0SIDH	set	16257
   270  0000                     _RXB0EIDL	set	16260
   271  0000                     _RXB0EIDH	set	16259
   272  0000                     _RXB0SIDL	set	16258
   273  0000                     _RXB0CONbits	set	16256
   274  0000                     _ECANCON	set	16273
   275  0000                     _CANSTAT	set	16270
   276  0000                     _CANCON	set	16271
   277  0000                     _TRISC	set	16324
   278  0000                     _TRISB	set	16323
   279  0000                     _TRISA	set	16322
   280  0000                     _LATC	set	16316
   281  0000                     _LATB	set	16315
   282  0000                     _LATA	set	16314
   283  00FE53                     STR_4:
   284  00FE53  53                 	db	83	;'S'
   285  00FE54  65                 	db	101	;'e'
   286  00FE55  6E                 	db	110	;'n'
   287  00FE56  64                 	db	100	;'d'
   288  00FE57  20                 	db	32
   289  00FE58  31                 	db	49	;'1'
   290  00FE59  34                 	db	52	;'4'
   291  00FE5A  20                 	db	32
   292  00FE5B  62                 	db	98	;'b'
   293  00FE5C  79                 	db	121	;'y'
   294  00FE5D  74                 	db	116	;'t'
   295  00FE5E  65                 	db	101	;'e'
   296  00FE5F  73                 	db	115	;'s'
   297  00FE60  20                 	db	32
   298  00FE61  63                 	db	99	;'c'
   299  00FE62  6F                 	db	111	;'o'
   300  00FE63  72                 	db	114	;'r'
   301  00FE64  72                 	db	114	;'r'
   302  00FE65  65                 	db	101	;'e'
   303  00FE66  73                 	db	115	;'s'
   304  00FE67  70                 	db	112	;'p'
   305  00FE68  6F                 	db	111	;'o'
   306  00FE69  6E                 	db	110	;'n'
   307  00FE6A  64                 	db	100	;'d'
   308  00FE6B  69                 	db	105	;'i'
   309  00FE6C  6E                 	db	110	;'n'
   310  00FE6D  67                 	db	103	;'g'
   311  00FE6E  20                 	db	32
   312  00FE6F  74                 	db	116	;'t'
   313  00FE70  6F                 	db	111	;'o'
   314  00FE71  20                 	db	32
   315  00FE72  43                 	db	67	;'C'
   316  00FE73  41                 	db	65	;'A'
   317  00FE74  4E                 	db	78	;'N'
   318  00FE75  20                 	db	32
   319  00FE76  6D                 	db	109	;'m'
   320  00FE77  73                 	db	115	;'s'
   321  00FE78  67                 	db	103	;'g'
   322  00FE79  20                 	db	32
   323  00FE7A  66                 	db	102	;'f'
   324  00FE7B  72                 	db	114	;'r'
   325  00FE7C  61                 	db	97	;'a'
   326  00FE7D  6D                 	db	109	;'m'
   327  00FE7E  65                 	db	101	;'e'
   328  00FE7F  20                 	db	32
   329  00FE80  74                 	db	116	;'t'
   330  00FE81  68                 	db	104	;'h'
   331  00FE82  61                 	db	97	;'a'
   332  00FE83  74                 	db	116	;'t'
   333  00FE84  20                 	db	32
   334  00FE85  67                 	db	103	;'g'
   335  00FE86  6F                 	db	111	;'o'
   336  00FE87  69                 	db	105	;'i'
   337  00FE88  6E                 	db	110	;'n'
   338  00FE89  67                 	db	103	;'g'
   339  00FE8A  20                 	db	32
   340  00FE8B  74                 	db	116	;'t'
   341  00FE8C  6F                 	db	111	;'o'
   342  00FE8D  20                 	db	32
   343  00FE8E  62                 	db	98	;'b'
   344  00FE8F  65                 	db	101	;'e'
   345  00FE90  20                 	db	32
   346  00FE91  73                 	db	115	;'s'
   347  00FE92  65                 	db	101	;'e'
   348  00FE93  6E                 	db	110	;'n'
   349  00FE94  74                 	db	116	;'t'
   350  00FE95  20                 	db	32
   351  00FE96  74                 	db	116	;'t'
   352  00FE97  6F                 	db	111	;'o'
   353  00FE98  20                 	db	32
   354  00FE99  74                 	db	116	;'t'
   355  00FE9A  68                 	db	104	;'h'
   356  00FE9B  65                 	db	101	;'e'
   357  00FE9C  20                 	db	32
   358  00FE9D  43                 	db	67	;'C'
   359  00FE9E  41                 	db	65	;'A'
   360  00FE9F  4E                 	db	78	;'N'
   361  00FEA0  20                 	db	32
   362  00FEA1  62                 	db	98	;'b'
   363  00FEA2  75                 	db	117	;'u'
   364  00FEA3  73                 	db	115	;'s'
   365  00FEA4  2E                 	db	46
   366  00FEA5  0A                 	db	10
   367  00FEA6  00                 	db	0
   368  00FEA7                     STR_7:
   369  00FEA7  43                 	db	67	;'C'
   370  00FEA8  41                 	db	65	;'A'
   371  00FEA9  4E                 	db	78	;'N'
   372  00FEAA  20                 	db	32
   373  00FEAB  6D                 	db	109	;'m'
   374  00FEAC  65                 	db	101	;'e'
   375  00FEAD  73                 	db	115	;'s'
   376  00FEAE  73                 	db	115	;'s'
   377  00FEAF  61                 	db	97	;'a'
   378  00FEB0  67                 	db	103	;'g'
   379  00FEB1  65                 	db	101	;'e'
   380  00FEB2  20                 	db	32
   381  00FEB3  63                 	db	99	;'c'
   382  00FEB4  61                 	db	97	;'a'
   383  00FEB5  6E                 	db	110	;'n'
   384  00FEB6  6E                 	db	110	;'n'
   385  00FEB7  6F                 	db	111	;'o'
   386  00FEB8  74                 	db	116	;'t'
   387  00FEB9  20                 	db	32
   388  00FEBA  62                 	db	98	;'b'
   389  00FEBB  65                 	db	101	;'e'
   390  00FEBC  20                 	db	32
   391  00FEBD  73                 	db	115	;'s'
   392  00FEBE  65                 	db	101	;'e'
   393  00FEBF  6E                 	db	110	;'n'
   394  00FEC0  74                 	db	116	;'t'
   395  00FEC1  20                 	db	32
   396  00FEC2  28                 	db	40
   397  00FEC3  66                 	db	102	;'f'
   398  00FEC4  75                 	db	117	;'u'
   399  00FEC5  6C                 	db	108	;'l'
   400  00FEC6  6C                 	db	108	;'l'
   401  00FEC7  20                 	db	32
   402  00FEC8  54                 	db	84	;'T'
   403  00FEC9  78                 	db	120	;'x'
   404  00FECA  20                 	db	32
   405  00FECB  42                 	db	66	;'B'
   406  00FECC  75                 	db	117	;'u'
   407  00FECD  66                 	db	102	;'f'
   408  00FECE  66                 	db	102	;'f'
   409  00FECF  65                 	db	101	;'e'
   410  00FED0  72                 	db	114	;'r'
   411  00FED1  2F                 	db	47
   412  00FED2  73                 	db	115	;'s'
   413  00FED3  29                 	db	41
   414  00FED4  2E                 	db	46
   415  00FED5  0A                 	db	10
   416  00FED6  00                 	db	0
   417  00FED7                     STR_9:
   418  00FED7  43                 	db	67	;'C'
   419  00FED8  41                 	db	65	;'A'
   420  00FED9  4E                 	db	78	;'N'
   421  00FEDA  20                 	db	32
   422  00FEDB  6D                 	db	109	;'m'
   423  00FEDC  65                 	db	101	;'e'
   424  00FEDD  73                 	db	115	;'s'
   425  00FEDE  73                 	db	115	;'s'
   426  00FEDF  61                 	db	97	;'a'
   427  00FEE0  67                 	db	103	;'g'
   428  00FEE1  65                 	db	101	;'e'
   429  00FEE2  20                 	db	32
   430  00FEE3  72                 	db	114	;'r'
   431  00FEE4  65                 	db	101	;'e'
   432  00FEE5  63                 	db	99	;'c'
   433  00FEE6  65                 	db	101	;'e'
   434  00FEE7  69                 	db	105	;'i'
   435  00FEE8  76                 	db	118	;'v'
   436  00FEE9  65                 	db	101	;'e'
   437  00FEEA  64                 	db	100	;'d'
   438  00FEEB  20                 	db	32
   439  00FEEC  6F                 	db	111	;'o'
   440  00FEED  66                 	db	102	;'f'
   441  00FEEE  20                 	db	32
   442  00FEEF  74                 	db	116	;'t'
   443  00FEF0  79                 	db	121	;'y'
   444  00FEF1  70                 	db	112	;'p'
   445  00FEF2  65                 	db	101	;'e'
   446  00FEF3  3A                 	db	58	;':'
   447  00FEF4  20                 	db	32
   448  00FEF5  25                 	db	37
   449  00FEF6  64                 	db	100	;'d'
   450  00FEF7  0A                 	db	10
   451  00FEF8  00                 	db	0
   452  00FEF9                     STR_12:
   453  00FEF9  43                 	db	67	;'C'
   454  00FEFA  41                 	db	65	;'A'
   455  00FEFB  4E                 	db	78	;'N'
   456  00FEFC  20                 	db	32
   457  00FEFD  6D                 	db	109	;'m'
   458  00FEFE  65                 	db	101	;'e'
   459  00FEFF  73                 	db	115	;'s'
   460  00FF00  73                 	db	115	;'s'
   461  00FF01  61                 	db	97	;'a'
   462  00FF02  67                 	db	103	;'g'
   463  00FF03  65                 	db	101	;'e'
   464  00FF04  20                 	db	32
   465  00FF05  72                 	db	114	;'r'
   466  00FF06  65                 	db	101	;'e'
   467  00FF07  63                 	db	99	;'c'
   468  00FF08  65                 	db	101	;'e'
   469  00FF09  69                 	db	105	;'i'
   470  00FF0A  76                 	db	118	;'v'
   471  00FF0B  65                 	db	101	;'e'
   472  00FF0C  64                 	db	100	;'d'
   473  00FF0D  20                 	db	32
   474  00FF0E  65                 	db	101	;'e'
   475  00FF0F  78                 	db	120	;'x'
   476  00FF10  74                 	db	116	;'t'
   477  00FF11  65                 	db	101	;'e'
   478  00FF12  6E                 	db	110	;'n'
   479  00FF13  64                 	db	100	;'d'
   480  00FF14  65                 	db	101	;'e'
   481  00FF15  64                 	db	100	;'d'
   482  00FF16  2E                 	db	46
   483  00FF17  0A                 	db	10
   484  00FF18  00                 	db	0
   485  00FF19                     STR_10:
   486  00FF19  43                 	db	67	;'C'
   487  00FF1A  41                 	db	65	;'A'
   488  00FF1B  4E                 	db	78	;'N'
   489  00FF1C  20                 	db	32
   490  00FF1D  6D                 	db	109	;'m'
   491  00FF1E  65                 	db	101	;'e'
   492  00FF1F  73                 	db	115	;'s'
   493  00FF20  73                 	db	115	;'s'
   494  00FF21  61                 	db	97	;'a'
   495  00FF22  67                 	db	103	;'g'
   496  00FF23  65                 	db	101	;'e'
   497  00FF24  20                 	db	32
   498  00FF25  72                 	db	114	;'r'
   499  00FF26  65                 	db	101	;'e'
   500  00FF27  63                 	db	99	;'c'
   501  00FF28  65                 	db	101	;'e'
   502  00FF29  69                 	db	105	;'i'
   503  00FF2A  76                 	db	118	;'v'
   504  00FF2B  65                 	db	101	;'e'
   505  00FF2C  64                 	db	100	;'d'
   506  00FF2D  20                 	db	32
   507  00FF2E  73                 	db	115	;'s'
   508  00FF2F  74                 	db	116	;'t'
   509  00FF30  61                 	db	97	;'a'
   510  00FF31  6E                 	db	110	;'n'
   511  00FF32  64                 	db	100	;'d'
   512  00FF33  61                 	db	97	;'a'
   513  00FF34  72                 	db	114	;'r'
   514  00FF35  64                 	db	100	;'d'
   515  00FF36  2E                 	db	46
   516  00FF37  0A                 	db	10
   517  00FF38  00                 	db	0
   518  00FF39                     STR_6:
   519  00FF39  43                 	db	67	;'C'
   520  00FF3A  41                 	db	65	;'A'
   521  00FF3B  4E                 	db	78	;'N'
   522  00FF3C  20                 	db	32
   523  00FF3D  6D                 	db	109	;'m'
   524  00FF3E  65                 	db	101	;'e'
   525  00FF3F  73                 	db	115	;'s'
   526  00FF40  73                 	db	115	;'s'
   527  00FF41  61                 	db	97	;'a'
   528  00FF42  67                 	db	103	;'g'
   529  00FF43  65                 	db	101	;'e'
   530  00FF44  20                 	db	32
   531  00FF45  73                 	db	115	;'s'
   532  00FF46  75                 	db	117	;'u'
   533  00FF47  63                 	db	99	;'c'
   534  00FF48  63                 	db	99	;'c'
   535  00FF49  65                 	db	101	;'e'
   536  00FF4A  73                 	db	115	;'s'
   537  00FF4B  73                 	db	115	;'s'
   538  00FF4C  66                 	db	102	;'f'
   539  00FF4D  75                 	db	117	;'u'
   540  00FF4E  6C                 	db	108	;'l'
   541  00FF4F  6C                 	db	108	;'l'
   542  00FF50  79                 	db	121	;'y'
   543  00FF51  20                 	db	32
   544  00FF52  73                 	db	115	;'s'
   545  00FF53  65                 	db	101	;'e'
   546  00FF54  6E                 	db	110	;'n'
   547  00FF55  74                 	db	116	;'t'
   548  00FF56  2E                 	db	46
   549  00FF57  0A                 	db	10
   550  00FF58  00                 	db	0
   551  00FF59                     STR_13:
   552  00FF59  43                 	db	67	;'C'
   553  00FF5A  41                 	db	65	;'A'
   554  00FF5B  4E                 	db	78	;'N'
   555  00FF5C  20                 	db	32
   556  00FF5D  6D                 	db	109	;'m'
   557  00FF5E  65                 	db	101	;'e'
   558  00FF5F  73                 	db	115	;'s'
   559  00FF60  73                 	db	115	;'s'
   560  00FF61  61                 	db	97	;'a'
   561  00FF62  67                 	db	103	;'g'
   562  00FF63  65                 	db	101	;'e'
   563  00FF64  20                 	db	32
   564  00FF65  72                 	db	114	;'r'
   565  00FF66  65                 	db	101	;'e'
   566  00FF67  63                 	db	99	;'c'
   567  00FF68  65                 	db	101	;'e'
   568  00FF69  69                 	db	105	;'i'
   569  00FF6A  76                 	db	118	;'v'
   570  00FF6B  65                 	db	101	;'e'
   571  00FF6C  64                 	db	100	;'d'
   572  00FF6D  20                 	db	32
   573  00FF6E  66                 	db	102	;'f'
   574  00FF6F  72                 	db	114	;'r'
   575  00FF70  61                 	db	97	;'a'
   576  00FF71  6D                 	db	109	;'m'
   577  00FF72  65                 	db	101	;'e'
   578  00FF73  3A                 	db	58	;':'
   579  00FF74  20                 	db	32
   580  00FF75  25                 	db	37
   581  00FF76  73                 	db	115	;'s'
   582  00FF77  0A                 	db	10
   583  00FF78  00                 	db	0
   584  00FF79                     STR_11:
   585  00FF79  43                 	db	67	;'C'
   586  00FF7A  41                 	db	65	;'A'
   587  00FF7B  4E                 	db	78	;'N'
   588  00FF7C  20                 	db	32
   589  00FF7D  6D                 	db	109	;'m'
   590  00FF7E  65                 	db	101	;'e'
   591  00FF7F  73                 	db	115	;'s'
   592  00FF80  73                 	db	115	;'s'
   593  00FF81  61                 	db	97	;'a'
   594  00FF82  67                 	db	103	;'g'
   595  00FF83  65                 	db	101	;'e'
   596  00FF84  20                 	db	32
   597  00FF85  72                 	db	114	;'r'
   598  00FF86  65                 	db	101	;'e'
   599  00FF87  63                 	db	99	;'c'
   600  00FF88  65                 	db	101	;'e'
   601  00FF89  69                 	db	105	;'i'
   602  00FF8A  76                 	db	118	;'v'
   603  00FF8B  65                 	db	101	;'e'
   604  00FF8C  64                 	db	100	;'d'
   605  00FF8D  20                 	db	32
   606  00FF8E  66                 	db	102	;'f'
   607  00FF8F  72                 	db	114	;'r'
   608  00FF90  61                 	db	97	;'a'
   609  00FF91  6D                 	db	109	;'m'
   610  00FF92  65                 	db	101	;'e'
   611  00FF93  3A                 	db	58	;':'
   612  00FF94  20                 	db	32
   613  00FF95  25                 	db	37
   614  00FF96  73                 	db	115	;'s'
   615  00FF97  00                 	db	0
   616  00FF98                     STR_5:
   617  00FF98  0A                 	db	10
   618  00FF99  53                 	db	83	;'S'
   619  00FF9A  65                 	db	101	;'e'
   620  00FF9B  6E                 	db	110	;'n'
   621  00FF9C  64                 	db	100	;'d'
   622  00FF9D  69                 	db	105	;'i'
   623  00FF9E  6E                 	db	110	;'n'
   624  00FF9F  67                 	db	103	;'g'
   625  00FFA0  20                 	db	32
   626  00FFA1  43                 	db	67	;'C'
   627  00FFA2  41                 	db	65	;'A'
   628  00FFA3  4E                 	db	78	;'N'
   629  00FFA4  20                 	db	32
   630  00FFA5  46                 	db	70	;'F'
   631  00FFA6  72                 	db	114	;'r'
   632  00FFA7  61                 	db	97	;'a'
   633  00FFA8  6D                 	db	109	;'m'
   634  00FFA9  65                 	db	101	;'e'
   635  00FFAA  3A                 	db	58	;':'
   636  00FFAB  20                 	db	32
   637  00FFAC  22                 	db	34
   638  00FFAD  25                 	db	37
   639  00FFAE  73                 	db	115	;'s'
   640  00FFAF  22                 	db	34
   641  00FFB0  0A                 	db	10
   642  00FFB1  00                 	db	0
   643  00FFB2                     STR_8:
   644  00FFB2  0A                 	db	10
   645  00FFB3  43                 	db	67	;'C'
   646  00FFB4  41                 	db	65	;'A'
   647  00FFB5  4E                 	db	78	;'N'
   648  00FFB6  20                 	db	32
   649  00FFB7  6D                 	db	109	;'m'
   650  00FFB8  65                 	db	101	;'e'
   651  00FFB9  73                 	db	115	;'s'
   652  00FFBA  73                 	db	115	;'s'
   653  00FFBB  61                 	db	97	;'a'
   654  00FFBC  67                 	db	103	;'g'
   655  00FFBD  65                 	db	101	;'e'
   656  00FFBE  20                 	db	32
   657  00FFBF  72                 	db	114	;'r'
   658  00FFC0  65                 	db	101	;'e'
   659  00FFC1  63                 	db	99	;'c'
   660  00FFC2  65                 	db	101	;'e'
   661  00FFC3  69                 	db	105	;'i'
   662  00FFC4  76                 	db	118	;'v'
   663  00FFC5  65                 	db	101	;'e'
   664  00FFC6  64                 	db	100	;'d'
   665  00FFC7  2E                 	db	46
   666  00FFC8  0A                 	db	10
   667  00FFC9  00                 	db	0
   668  00FFCA                     STR_3:
   669  00FFCA  2D                 	db	45
   670  00FFCB  2D                 	db	45
   671  00FFCC  2D                 	db	45
   672  00FFCD  2D                 	db	45
   673  00FFCE  2D                 	db	45
   674  00FFCF  2D                 	db	45
   675  00FFD0  2D                 	db	45
   676  00FFD1  2D                 	db	45
   677  00FFD2  2D                 	db	45
   678  00FFD3  2D                 	db	45
   679  00FFD4  2D                 	db	45
   680  00FFD5  2D                 	db	45
   681  00FFD6  2D                 	db	45
   682  00FFD7  2D                 	db	45
   683  00FFD8  2D                 	db	45
   684  00FFD9  2D                 	db	45
   685  00FFDA  2D                 	db	45
   686  00FFDB  2D                 	db	45
   687  00FFDC  0A                 	db	10
   688  00FFDD  00                 	db	0
   689  00FFDE                     STR_2:
   690  00FFDE  20                 	db	32
   691  00FFDF  55                 	db	85	;'U'
   692  00FFE0  41                 	db	65	;'A'
   693  00FFE1  52                 	db	82	;'R'
   694  00FFE2  54                 	db	84	;'T'
   695  00FFE3  20                 	db	32
   696  00FFE4  74                 	db	116	;'t'
   697  00FFE5  6F                 	db	111	;'o'
   698  00FFE6  20                 	db	32
   699  00FFE7  43                 	db	67	;'C'
   700  00FFE8  41                 	db	65	;'A'
   701  00FFE9  4E                 	db	78	;'N'
   702  00FFEA  20                 	db	32
   703  00FFEB  74                 	db	116	;'t'
   704  00FFEC  65                 	db	101	;'e'
   705  00FFED  73                 	db	115	;'s'
   706  00FFEE  74                 	db	116	;'t'
   707  00FFEF  0A                 	db	10
   708  00FFF0  00                 	db	0
   709  00FFF1                     STR_14:
   710  00FFF1  28                 	db	40
   711  00FFF2  6E                 	db	110	;'n'
   712  00FFF3  75                 	db	117	;'u'
   713  00FFF4  6C                 	db	108	;'l'
   714  00FFF5  6C                 	db	108	;'l'
   715  00FFF6  29                 	db	41
   716  00FFF7  00                 	db	0
   717  00FFF8                     STR_1:
   718  00FFF8  0A                 	db	10
   719  00FFF9  0A                 	db	10
   720  00FFFA  00                 	db	0
   721                           
   722                           ; #config settings
   723  00FFFB  00                 	db	0	; dummy byte at the end
   724  0000                     
   725                           	psect	cinit
   726  00EC20                     __pcinit:
   727                           	opt stack 0
   728  00EC20                     start_initialization:
   729                           	opt stack 0
   730  00EC20                     __initialization:
   731                           	opt stack 0
   732                           
   733                           ; Clear objects allocated to COMRAM (1 bytes)
   734  00EC20  6A52               	clrf	__pbssCOMRAM& (0+255),c
   735  00EC22                     end_of_initialization:
   736                           	opt stack 0
   737  00EC22                     __end_of__initialization:
   738                           	opt stack 0
   739  00EC22  0100               	movlb	0
   740  00EC24  EFA4  F078         	goto	_main	;jump to C main() function
   741                           
   742                           	psect	bssCOMRAM
   743  000052                     __pbssCOMRAM:
   744                           	opt stack 0
   745  000052                     uart_command_received@uart_read_byte:
   746                           	opt stack 0
   747  000052                     	ds	1
   748                           
   749                           	psect	cstackCOMRAM
   750  000001                     __pcstackCOMRAM:
   751                           	opt stack 0
   752  000001                     ??_led_toggle:
   753  000001                     ??_ECAN_Initialize:
   754  000001                     ?___lwdiv:
   755                           	opt stack 0
   756  000001                     ?_convertReg2ExtendedCANid:
   757                           	opt stack 0
   758  000001                     ?_convertReg2StandardCANid:
   759                           	opt stack 0
   760  000001                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   761                           	opt stack 0
   762  000001                     convertReg2StandardCANid@tempRXBn_SIDL:
   763                           	opt stack 0
   764  000001                     UART2_Write@txData:
   765                           	opt stack 0
   766  000001                     led_init@led_num:
   767                           	opt stack 0
   768  000001                     btn_init@btn_num:
   769                           	opt stack 0
   770  000001                     uart_command_received@command_read:
   771                           	opt stack 0
   772  000001                     ___lwdiv@dividend:
   773                           	opt stack 0
   774  000001                     memcpy@d1:
   775                           	opt stack 0
   776  000001                     memset@p1:
   777                           	opt stack 0
   778  000001                     convertCANid2Reg@tempPassedInID:
   779                           	opt stack 0
   780                           
   781                           ; 4 bytes @ 0x0
   782  000001                     	ds	1
   783  000002                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   784                           	opt stack 0
   785  000002                     putch@txData:
   786                           	opt stack 0
   787  000002                     led_toggle@led_num:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0x1
   791  000002                     	ds	1
   792  000003                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   793                           	opt stack 0
   794  000003                     uart_command_received@uart_char:
   795                           	opt stack 0
   796  000003                     ___lwdiv@divisor:
   797                           	opt stack 0
   798  000003                     memcpy@s1:
   799                           	opt stack 0
   800  000003                     memset@c:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x2
   804  000003                     	ds	1
   805  000004                     uart_command_received@i:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x3
   809  000004                     	ds	1
   810  000005                     ??_convertReg2ExtendedCANid:
   811  000005                     ??_convertReg2StandardCANid:
   812  000005                     convertCANid2Reg@canIdType:
   813                           	opt stack 0
   814  000005                     ___lwdiv@quotient:
   815                           	opt stack 0
   816  000005                     memcpy@n:
   817                           	opt stack 0
   818  000005                     memset@n:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x4
   822  000005                     	ds	1
   823  000006                     convertCANid2Reg@passedInEIDH:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x5
   827  000006                     	ds	1
   828  000007                     convertReg2StandardCANid@tempRXBn_SIDH:
   829                           	opt stack 0
   830  000007                     ___lwdiv@counter:
   831                           	opt stack 0
   832  000007                     memcpy@d:
   833                           	opt stack 0
   834  000007                     memset@p:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x6
   838  000007                     	ds	1
   839  000008                     ?___lwmod:
   840                           	opt stack 0
   841  000008                     convertCANid2Reg@passedInEIDL:
   842                           	opt stack 0
   843  000008                     ___lwmod@dividend:
   844                           	opt stack 0
   845  000008                     convertReg2StandardCANid@returnValue:
   846                           	opt stack 0
   847                           
   848                           ; 4 bytes @ 0x7
   849  000008                     	ds	1
   850  000009                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   851                           	opt stack 0
   852  000009                     memcpy@s:
   853                           	opt stack 0
   854                           
   855                           ; 2 bytes @ 0x8
   856  000009                     	ds	1
   857  00000A                     convertCANid2Reg@passedInSIDH:
   858                           	opt stack 0
   859  00000A                     ___lwmod@divisor:
   860                           	opt stack 0
   861  00000A                     convertReg2ExtendedCANid@returnValue:
   862                           	opt stack 0
   863                           
   864                           ; 4 bytes @ 0x9
   865  00000A                     	ds	1
   866  00000B                     memcpy@tmp:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0xA
   870  00000B                     	ds	1
   871  00000C                     ___lwmod@counter:
   872                           	opt stack 0
   873  00000C                     convertCANid2Reg@passedInSIDL:
   874                           	opt stack 0
   875  00000C                     convertReg2StandardCANid@ConvertedID:
   876                           	opt stack 0
   877                           
   878                           ; 4 bytes @ 0xB
   879  00000C                     	ds	1
   880  00000D                     ?_printf:
   881                           	opt stack 0
   882  00000D                     printf@f:
   883                           	opt stack 0
   884                           
   885                           ; 2 bytes @ 0xC
   886  00000D                     	ds	1
   887  00000E                     ??_convertCANid2Reg:
   888  00000E                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0xD
   892  00000E                     	ds	1
   893  00000F                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   894                           	opt stack 0
   895                           
   896                           ; 1 bytes @ 0xE
   897  00000F                     	ds	1
   898  000010                     convertReg2ExtendedCANid@ConvertedID:
   899                           	opt stack 0
   900                           
   901                           ; 4 bytes @ 0xF
   902  000010                     	ds	2
   903  000012                     convertCANid2Reg@wipSIDL:
   904                           	opt stack 0
   905                           
   906                           ; 1 bytes @ 0x11
   907  000012                     	ds	1
   908  000013                     CAN_transmit@tempCanMsg:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x12
   912  000013                     	ds	1
   913  000014                     CAN_receive@tempCanMsg:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x13
   917  000014                     	ds	1
   918  000015                     CAN_transmit@returnValue:
   919                           	opt stack 0
   920                           
   921                           ; 1 bytes @ 0x14
   922  000015                     	ds	1
   923  000016                     CAN_transmit@tempEIDH:
   924                           	opt stack 0
   925  000016                     CAN_receive@returnValue:
   926                           	opt stack 0
   927                           
   928                           ; 1 bytes @ 0x15
   929  000016                     	ds	1
   930  000017                     CAN_transmit@tempEIDL:
   931                           	opt stack 0
   932                           
   933                           ; 1 bytes @ 0x16
   934  000017                     	ds	1
   935  000018                     CAN_transmit@tempSIDH:
   936                           	opt stack 0
   937                           
   938                           ; 1 bytes @ 0x17
   939  000018                     	ds	1
   940  000019                     CAN_transmit@tempSIDL:
   941                           	opt stack 0
   942                           
   943                           ; 1 bytes @ 0x18
   944  000019                     	ds	4
   945  00001D                     ??_printf:
   946                           
   947                           ; 1 bytes @ 0x1C
   948  00001D                     	ds	1
   949  00001E                     printf@flag:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x1D
   953  00001E                     	ds	1
   954  00001F                     printf@prec:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x1E
   958  00001F                     	ds	1
   959  000020                     printf@ap:
   960                           	opt stack 0
   961                           
   962                           ; 2 bytes @ 0x1F
   963  000020                     	ds	2
   964  000022                     printf@cp:
   965                           	opt stack 0
   966                           
   967                           ; 2 bytes @ 0x21
   968  000022                     	ds	2
   969  000024                     printf@val:
   970                           	opt stack 0
   971                           
   972                           ; 2 bytes @ 0x23
   973  000024                     	ds	2
   974  000026                     printf@c:
   975                           	opt stack 0
   976                           
   977                           ; 1 bytes @ 0x25
   978  000026                     	ds	1
   979  000027                     main@uart_data_rx:
   980                           	opt stack 0
   981                           
   982                           ; 15 bytes @ 0x26
   983  000027                     	ds	15
   984  000036                     main@can_msg_tx:
   985                           	opt stack 0
   986                           
   987                           ; 14 bytes @ 0x35
   988  000036                     	ds	14
   989  000044                     main@can_msg_rx:
   990                           	opt stack 0
   991                           
   992                           ; 14 bytes @ 0x43
   993  000044                     	ds	14
   994                           
   995 ;;
   996 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   997 ;;
   998 ;; *************** function _main *****************
   999 ;; Defined at:
  1000 ;;		line 35 in file "main.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  uart_data_rx   15   38[COMRAM] unsigned char [15]
  1005 ;;  can_msg_rx     14   67[COMRAM] struct .
  1006 ;;  can_msg_tx     14   53[COMRAM] struct .
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Locals:        43       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Totals:        43       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;Total ram usage:       43 bytes
  1021 ;; Hardware stack levels required when called:    3
  1022 ;; This function calls:
  1023 ;;		_APP_Initialize
  1024 ;;		_CAN_receive
  1025 ;;		_CAN_transmit
  1026 ;;		_SYSTEM_Initialize
  1027 ;;		_led_toggle
  1028 ;;		_memcpy
  1029 ;;		_memset
  1030 ;;		_printf
  1031 ;;		_uart_command_received
  1032 ;; This function is called by:
  1033 ;;		Startup code after reset
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text0
  1038  00F148                     __ptext0:
  1039                           	opt stack 0
  1040  00F148                     _main:
  1041                           	opt stack 28
  1042                           
  1043                           ;main.c: 38: char uart_data_rx[15];
  1044                           ;main.c: 39: memset(uart_data_rx, '\0', 15);
  1045                           
  1046                           ;incstack = 0
  1047  00F148  0E27               	movlw	low main@uart_data_rx
  1048  00F14A  6E01               	movwf	memset@p1,c
  1049  00F14C  0E00               	movlw	high main@uart_data_rx
  1050  00F14E  6E02               	movwf	memset@p1+1,c
  1051  00F150  0E00               	movlw	0
  1052  00F152  6E04               	movwf	memset@c+1,c
  1053  00F154  0E00               	movlw	0
  1054  00F156  6E03               	movwf	memset@c,c
  1055  00F158  0E00               	movlw	0
  1056  00F15A  6E06               	movwf	memset@n+1,c
  1057  00F15C  0E0F               	movlw	15
  1058  00F15E  6E05               	movwf	memset@n,c
  1059  00F160  EC8A  F076         	call	_memset	;wreg free
  1060                           
  1061                           ;main.c: 42: uCAN_MSG can_msg_tx;
  1062                           ;main.c: 43: uCAN_MSG can_msg_rx;
  1063                           ;main.c: 46: SYSTEM_Initialize();
  1064  00F164  EC4B  F076         	call	_SYSTEM_Initialize	;wreg free
  1065                           
  1066                           ;main.c: 47: APP_Initialize();
  1067  00F168  EC3E  F076         	call	_APP_Initialize	;wreg free
  1068                           
  1069                           ;main.c: 62: printf("\n\n");
  1070  00F16C  0EF8               	movlw	low STR_1
  1071  00F16E  6E0D               	movwf	printf@f,c
  1072  00F170  0EFF               	movlw	high STR_1
  1073  00F172  6E0E               	movwf	printf@f+1,c
  1074  00F174  EC27  F07A         	call	_printf	;wreg free
  1075                           
  1076                           ;main.c: 63: printf(" UART to CAN test\n");
  1077  00F178  0EDE               	movlw	low STR_2
  1078  00F17A  6E0D               	movwf	printf@f,c
  1079  00F17C  0EFF               	movlw	high STR_2
  1080  00F17E  6E0E               	movwf	printf@f+1,c
  1081  00F180  EC27  F07A         	call	_printf	;wreg free
  1082                           
  1083                           ;main.c: 64: printf("------------------\n");
  1084  00F184  0ECA               	movlw	low STR_3
  1085  00F186  6E0D               	movwf	printf@f,c
  1086  00F188  0EFF               	movlw	high STR_3
  1087  00F18A  6E0E               	movwf	printf@f+1,c
  1088  00F18C  EC27  F07A         	call	_printf	;wreg free
  1089                           
  1090                           ;main.c: 65: printf("Send 14 bytes corresponding to CAN msg frame that going to be " "se
      +                          nt to the CAN bus.\n");
  1091  00F190  0E53               	movlw	low STR_4
  1092  00F192  6E0D               	movwf	printf@f,c
  1093  00F194  0EFE               	movlw	high STR_4
  1094  00F196  6E0E               	movwf	printf@f+1,c
  1095  00F198  EC27  F07A         	call	_printf	;wreg free
  1096  00F19C                     
  1097                           ;main.c: 69: {
  1098                           ;main.c: 71: if(uart_command_received(uart_data_rx))
  1099  00F19C  0E27               	movlw	low main@uart_data_rx
  1100  00F19E  6E01               	movwf	uart_command_received@command_read,c
  1101  00F1A0  0E00               	movlw	high main@uart_data_rx
  1102  00F1A2  6E02               	movwf	uart_command_received@command_read+1,c
  1103  00F1A4  ECB4  F077         	call	_uart_command_received	;wreg free
  1104  00F1A8  0900               	iorlw	0
  1105  00F1AA  B4D8               	btfsc	16344,2,c
  1106  00F1AC  D03F               	goto	l579
  1107                           
  1108                           ;main.c: 72: {
  1109                           ;main.c: 73: printf("\nSending CAN Frame: \"%s\"\n", uart_data_rx);
  1110  00F1AE  0E98               	movlw	low STR_5
  1111  00F1B0  6E0D               	movwf	printf@f,c
  1112  00F1B2  0EFF               	movlw	high STR_5
  1113  00F1B4  6E0E               	movwf	printf@f+1,c
  1114  00F1B6  0E27               	movlw	low main@uart_data_rx
  1115  00F1B8  6E0F               	movwf	?_printf+2,c
  1116  00F1BA  0E00               	movlw	high main@uart_data_rx
  1117  00F1BC  6E10               	movwf	?_printf+3,c
  1118  00F1BE  EC27  F07A         	call	_printf	;wreg free
  1119                           
  1120                           ;main.c: 76: memcpy(can_msg_tx.array, uart_data_rx, 14);
  1121  00F1C2  0E36               	movlw	low main@can_msg_tx
  1122  00F1C4  6E01               	movwf	memcpy@d1,c
  1123  00F1C6  0E00               	movlw	high main@can_msg_tx
  1124  00F1C8  6E02               	movwf	memcpy@d1+1,c
  1125  00F1CA  0E27               	movlw	low main@uart_data_rx
  1126  00F1CC  6E03               	movwf	memcpy@s1,c
  1127  00F1CE  0E00               	movlw	high main@uart_data_rx
  1128  00F1D0  6E04               	movwf	memcpy@s1+1,c
  1129  00F1D2  0E00               	movlw	0
  1130  00F1D4  6E06               	movwf	memcpy@n+1,c
  1131  00F1D6  0E0E               	movlw	14
  1132  00F1D8  6E05               	movwf	memcpy@n,c
  1133  00F1DA  EC2C  F077         	call	_memcpy	;wreg free
  1134                           
  1135                           ;main.c: 79: if(CAN_transmit(&can_msg_tx))
  1136  00F1DE  0E36               	movlw	low main@can_msg_tx
  1137  00F1E0  6E13               	movwf	CAN_transmit@tempCanMsg,c
  1138  00F1E2  0E00               	movlw	high main@can_msg_tx
  1139  00F1E4  6E14               	movwf	CAN_transmit@tempCanMsg+1,c
  1140  00F1E6  EC87  F07D         	call	_CAN_transmit	;wreg free
  1141  00F1EA  0900               	iorlw	0
  1142  00F1EC  B4D8               	btfsc	16344,2,c
  1143  00F1EE  D00A               	goto	l580
  1144                           
  1145                           ;main.c: 80: {
  1146                           ;main.c: 82: printf("CAN message successfully sent.\n");
  1147  00F1F0  0E39               	movlw	low STR_6
  1148  00F1F2  6E0D               	movwf	printf@f,c
  1149  00F1F4  0EFF               	movlw	high STR_6
  1150  00F1F6  6E0E               	movwf	printf@f+1,c
  1151  00F1F8  EC27  F07A         	call	_printf	;wreg free
  1152                           
  1153                           ;main.c: 83: led_toggle(0);
  1154  00F1FC  0E00               	movlw	0
  1155  00F1FE  EC08  F077         	call	_led_toggle
  1156                           
  1157                           ;main.c: 84: }
  1158  00F202  D006               	goto	l581
  1159  00F204                     l580:
  1160                           
  1161                           ;main.c: 85: else
  1162                           ;main.c: 86: printf("CAN message cannot be sent (full Tx Buffer/s).\n");
  1163  00F204  0EA7               	movlw	low STR_7
  1164  00F206  6E0D               	movwf	printf@f,c
  1165  00F208  0EFE               	movlw	high STR_7
  1166  00F20A  6E0E               	movwf	printf@f+1,c
  1167  00F20C  EC27  F07A         	call	_printf	;wreg free
  1168  00F210                     l581:
  1169                           
  1170                           ;main.c: 89: memset(uart_data_rx, '\0', 15);
  1171  00F210  0E27               	movlw	low main@uart_data_rx
  1172  00F212  6E01               	movwf	memset@p1,c
  1173  00F214  0E00               	movlw	high main@uart_data_rx
  1174  00F216  6E02               	movwf	memset@p1+1,c
  1175  00F218  0E00               	movlw	0
  1176  00F21A  6E04               	movwf	memset@c+1,c
  1177  00F21C  0E00               	movlw	0
  1178  00F21E  6E03               	movwf	memset@c,c
  1179  00F220  0E00               	movlw	0
  1180  00F222  6E06               	movwf	memset@n+1,c
  1181  00F224  0E0F               	movlw	15
  1182  00F226  6E05               	movwf	memset@n,c
  1183  00F228  EC8A  F076         	call	_memset	;wreg free
  1184  00F22C                     l579:
  1185                           
  1186                           ;main.c: 90: }
  1187                           ;main.c: 93: if(CAN_receive(&can_msg_rx))
  1188  00F22C  0E44               	movlw	low main@can_msg_rx
  1189  00F22E  6E14               	movwf	CAN_receive@tempCanMsg,c
  1190  00F230  0E00               	movlw	high main@can_msg_rx
  1191  00F232  6E15               	movwf	CAN_receive@tempCanMsg+1,c
  1192  00F234  EC40  F07C         	call	_CAN_receive	;wreg free
  1193  00F238  0900               	iorlw	0
  1194  00F23A  B4D8               	btfsc	16344,2,c
  1195  00F23C  D7AF               	goto	l578
  1196                           
  1197                           ;main.c: 94: {
  1198                           ;main.c: 95: printf("\nCAN message received.\n");
  1199  00F23E  0EB2               	movlw	low STR_8
  1200  00F240  6E0D               	movwf	printf@f,c
  1201  00F242  0EFF               	movlw	high STR_8
  1202  00F244  6E0E               	movwf	printf@f+1,c
  1203  00F246  EC27  F07A         	call	_printf	;wreg free
  1204                           
  1205                           ;main.c: 96: printf("CAN message received of type: %d\n",
  1206                           ;main.c: 97: can_msg_rx.frame.idType);
  1207  00F24A  0ED7               	movlw	low STR_9
  1208  00F24C  6E0D               	movwf	printf@f,c
  1209  00F24E  0EFE               	movlw	high STR_9
  1210  00F250  6E0E               	movwf	printf@f+1,c
  1211  00F252  0060  F110  F00F   	movff	main@can_msg_rx,?_printf+2
  1212  00F258  6A10               	clrf	?_printf+3,c
  1213  00F25A  EC27  F07A         	call	_printf	;wreg free
  1214                           
  1215                           ;main.c: 98: led_toggle(1);
  1216  00F25E  0E01               	movlw	1
  1217  00F260  EC08  F077         	call	_led_toggle
  1218                           
  1219                           ;main.c: 101: if (can_msg_rx.frame.idType == 1)
  1220  00F264  0444               	decf	main@can_msg_rx,w,c
  1221  00F266  A4D8               	btfss	16344,2,c
  1222  00F268  D017               	goto	l583
  1223                           
  1224                           ;main.c: 102: {
  1225                           ;main.c: 103: printf("CAN message received standard.\n");
  1226  00F26A  0E19               	movlw	low STR_10
  1227  00F26C  6E0D               	movwf	printf@f,c
  1228  00F26E  0EFF               	movlw	high STR_10
  1229  00F270  6E0E               	movwf	printf@f+1,c
  1230  00F272  EC27  F07A         	call	_printf	;wreg free
  1231                           
  1232                           ;main.c: 104: printf("CAN message received frame: %s", can_msg_rx);
  1233  00F276  0E79               	movlw	low STR_11
  1234  00F278  6E0D               	movwf	printf@f,c
  1235  00F27A  0EFF               	movlw	high STR_11
  1236  00F27C  6E0E               	movwf	printf@f+1,c
  1237  00F27E  EE20  F044         	lfsr	2,main@can_msg_rx
  1238  00F282  EE10  F00F         	lfsr	1,?_printf+2
  1239  00F286  0E0D               	movlw	13
  1240  00F288                     u1181:
  1241  00F288  006F FF6F FFE3     	movff	16347,16355
  1242  00F28E  06E8               	decf	16360,f,c
  1243  00F290  E2FB               	bc	u1181
  1244  00F292  EC27  F07A         	call	_printf	;wreg free
  1245                           
  1246                           ;main.c: 116: }
  1247  00F296  D782               	goto	l578
  1248  00F298                     l583:
  1249                           
  1250                           ;main.c: 117: else
  1251                           ;main.c: 118: {
  1252                           ;main.c: 119: printf("CAN message received extended.\n");
  1253  00F298  0EF9               	movlw	low STR_12
  1254  00F29A  6E0D               	movwf	printf@f,c
  1255  00F29C  0EFE               	movlw	high STR_12
  1256  00F29E  6E0E               	movwf	printf@f+1,c
  1257  00F2A0  EC27  F07A         	call	_printf	;wreg free
  1258                           
  1259                           ;main.c: 120: printf("CAN message received frame: %s\n", can_msg_rx);
  1260  00F2A4  0E59               	movlw	low STR_13
  1261  00F2A6  6E0D               	movwf	printf@f,c
  1262  00F2A8  0EFF               	movlw	high STR_13
  1263  00F2AA  6E0E               	movwf	printf@f+1,c
  1264  00F2AC  EE20  F044         	lfsr	2,main@can_msg_rx
  1265  00F2B0  EE10  F00F         	lfsr	1,?_printf+2
  1266  00F2B4  0E0D               	movlw	13
  1267  00F2B6                     u1191:
  1268  00F2B6  006F FF6F FFE3     	movff	16347,16355
  1269  00F2BC  06E8               	decf	16360,f,c
  1270  00F2BE  E2FB               	bc	u1191
  1271  00F2C0  EC27  F07A         	call	_printf	;wreg free
  1272  00F2C4  D76B               	goto	l578
  1273  00F2C6                     __end_of_main:
  1274                           	opt stack 0
  1275                           
  1276 ;; *************** function _uart_command_received *****************
  1277 ;; Defined at:
  1278 ;;		line 130 in file "main.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  command_read    2    0[COMRAM] PTR unsigned char 
  1281 ;;		 -> main@uart_data_rx(15), 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  i               1    3[COMRAM] unsigned char 
  1284 ;;  uart_char       1    2[COMRAM] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      unsigned char 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;Total ram usage:        4 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    1
  1301 ;; This function calls:
  1302 ;;		_UART2_Read
  1303 ;;		_UART2_is_rx_ready
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text1
  1310  00EF68                     __ptext1:
  1311                           	opt stack 0
  1312  00EF68                     _uart_command_received:
  1313                           	opt stack 29
  1314                           
  1315                           ;main.c: 132: static uint8_t uart_read_byte = 0;
  1316                           ;main.c: 133: char uart_char;
  1317                           ;main.c: 136: if(UART2_is_rx_ready())
  1318                           
  1319                           ;incstack = 0
  1320  00EF68  EC19  F076         	call	_UART2_is_rx_ready	;wreg free
  1321  00EF6C  0900               	iorlw	0
  1322  00EF6E  B4D8               	btfsc	16344,2,c
  1323  00EF70  D043               	goto	l599
  1324                           
  1325                           ;main.c: 137: {
  1326                           ;main.c: 139: uart_char = UART2_Read();
  1327  00EF72  EC28  F076         	call	_UART2_Read	;wreg free
  1328  00EF76  6E03               	movwf	uart_command_received@uart_char,c
  1329                           
  1330                           ;main.c: 141: if(uart_read_byte < 15)
  1331  00EF78  0E0F               	movlw	15
  1332  00EF7A  6052               	cpfslt	uart_command_received@uart_read_byte,c
  1333  00EF7C  D031               	goto	l593
  1334                           
  1335                           ;main.c: 142: {
  1336                           ;main.c: 144: if(uart_char == '\n')
  1337  00EF7E  0E0A               	movlw	10
  1338  00EF80  1803               	xorwf	uart_command_received@uart_char,w,c
  1339  00EF82  A4D8               	btfss	16344,2,c
  1340  00EF84  D01F               	goto	l594
  1341                           
  1342                           ;main.c: 145: {
  1343                           ;main.c: 147: for(uint8_t i = uart_read_byte; i < 14; i++)
  1344  00EF86  0060  F148  F004   	movff	uart_command_received@uart_read_byte,uart_command_received@i
  1345  00EF8C                     l2332:
  1346  00EF8C  0E0D               	movlw	13
  1347  00EF8E  6404               	cpfsgt	uart_command_received@i,c
  1348  00EF90  D001               	goto	l595
  1349  00EF92  D00C               	goto	u1120
  1350  00EF94                     l595:
  1351                           
  1352                           ;main.c: 148: command_read[uart_read_byte] = '0';
  1353  00EF94  5052               	movf	uart_command_received@uart_read_byte,w,c
  1354  00EF96  0D01               	mullw	1
  1355  00EF98  50F3               	movf	16371,w,c
  1356  00EF9A  2401               	addwf	uart_command_received@command_read,w,c
  1357  00EF9C  6ED9               	movwf	16345,c
  1358  00EF9E  50F4               	movf	16372,w,c
  1359  00EFA0  2002               	addwfc	uart_command_received@command_read+1,w,c
  1360  00EFA2  6EDA               	movwf	16346,c
  1361  00EFA4  0E30               	movlw	48
  1362  00EFA6  6EDF               	movwf	16351,c
  1363  00EFA8  2A04               	incf	uart_command_received@i,f,c
  1364  00EFAA  D7F0               	goto	l2332
  1365  00EFAC                     u1120:
  1366                           
  1367                           ;main.c: 149: command_read[14] = '\0';
  1368  00EFAC  EE20 F00E          	lfsr	2,14
  1369  00EFB0  5001               	movf	uart_command_received@command_read,w,c
  1370  00EFB2  26D9               	addwf	16345,f,c
  1371  00EFB4  5002               	movf	uart_command_received@command_read+1,w,c
  1372  00EFB6  22DA               	addwfc	16346,f,c
  1373  00EFB8  0E00               	movlw	0
  1374  00EFBA  6EDF               	movwf	16351,c
  1375                           
  1376                           ;main.c: 151: uart_read_byte = 0;
  1377  00EFBC  0E00               	movlw	0
  1378  00EFBE  6E52               	movwf	uart_command_received@uart_read_byte,c
  1379                           
  1380                           ;main.c: 152: return 1;
  1381  00EFC0  0E01               	movlw	1
  1382  00EFC2  0012               	return	
  1383  00EFC4                     l594:
  1384                           
  1385                           ;main.c: 154: else
  1386                           ;main.c: 155: {
  1387                           ;main.c: 156: command_read[uart_read_byte] = uart_char;
  1388  00EFC4  5052               	movf	uart_command_received@uart_read_byte,w,c
  1389  00EFC6  0D01               	mullw	1
  1390  00EFC8  50F3               	movf	16371,w,c
  1391  00EFCA  2401               	addwf	uart_command_received@command_read,w,c
  1392  00EFCC  6ED9               	movwf	16345,c
  1393  00EFCE  50F4               	movf	16372,w,c
  1394  00EFD0  2002               	addwfc	uart_command_received@command_read+1,w,c
  1395  00EFD2  6EDA               	movwf	16346,c
  1396  00EFD4  0060  F00F  FFDF   	movff	uart_command_received@uart_char,16351
  1397                           
  1398                           ;main.c: 157: uart_read_byte = uart_read_byte + 1;
  1399  00EFDA  2852               	incf	uart_command_received@uart_read_byte,w,c
  1400  00EFDC  6E52               	movwf	uart_command_received@uart_read_byte,c
  1401                           
  1402                           ;main.c: 158: }
  1403                           ;main.c: 159: }
  1404  00EFDE  D00C               	goto	l599
  1405  00EFE0                     l593:
  1406                           
  1407                           ;main.c: 160: else
  1408                           ;main.c: 161: {
  1409                           ;main.c: 162: command_read[14] = '\0';
  1410  00EFE0  EE20 F00E          	lfsr	2,14
  1411  00EFE4  5001               	movf	uart_command_received@command_read,w,c
  1412  00EFE6  26D9               	addwf	16345,f,c
  1413  00EFE8  5002               	movf	uart_command_received@command_read+1,w,c
  1414  00EFEA  22DA               	addwfc	16346,f,c
  1415  00EFEC  0E00               	movlw	0
  1416  00EFEE  6EDF               	movwf	16351,c
  1417                           
  1418                           ;main.c: 164: uart_read_byte = 0;
  1419  00EFF0  0E00               	movlw	0
  1420  00EFF2  6E52               	movwf	uart_command_received@uart_read_byte,c
  1421                           
  1422                           ;main.c: 165: return 1;
  1423  00EFF4  0E01               	movlw	1
  1424  00EFF6  0012               	return	
  1425  00EFF8                     l599:
  1426                           
  1427                           ;main.c: 166: }
  1428                           ;main.c: 167: }
  1429                           ;main.c: 169: return 0;
  1430  00EFF8  0E00               	movlw	0
  1431  00EFFA  0012               	return	
  1432  00EFFC                     __end_of_uart_command_received:
  1433                           	opt stack 0
  1434                           
  1435 ;; *************** function _UART2_is_rx_ready *****************
  1436 ;; Defined at:
  1437 ;;		line 112 in file "mcc_generated_files/uart2.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      unsigned char 
  1444 ;; Registers used:
  1445 ;;		wreg
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;Total ram usage:        0 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_uart_command_received
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text2
  1465  00EC32                     __ptext2:
  1466                           	opt stack 0
  1467  00EC32                     _UART2_is_rx_ready:
  1468                           	opt stack 29
  1469                           
  1470                           ;uart2.c: 114: return (PIR7bits.U2RXIF);
  1471                           
  1472                           ;incstack = 0
  1473  00EC32  0139               	movlb	57	; () banked
  1474  00EC34  A9A7               	btfss	167,4,b	;volatile
  1475  00EC36  D002               	goto	u90
  1476  00EC38  0E01               	movlw	1
  1477  00EC3A  0012               	return	
  1478  00EC3C                     u90:
  1479  00EC3C  0E00               	movlw	0
  1480  00EC3E  0012               	return	
  1481  00EC40                     __end_of_UART2_is_rx_ready:
  1482                           	opt stack 0
  1483                           
  1484 ;; *************** function _UART2_Read *****************
  1485 ;; Defined at:
  1486 ;;		line 127 in file "mcc_generated_files/uart2.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      unsigned char 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_uart_command_received
  1510 ;;		_getch
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text3
  1515  00EC50                     __ptext3:
  1516                           	opt stack 0
  1517  00EC50                     _UART2_Read:
  1518                           	opt stack 29
  1519                           
  1520                           ;uart2.c: 130: {
  1521                           
  1522                           ;uart2.c: 129: while(!PIR7bits.U2RXIF)
  1523                           
  1524                           ; BSR set to: 57
  1525                           ;incstack = 0
  1526  00EC50  0139               	movlb	57	; () banked
  1527  00EC52  A9A7               	btfss	167,4,b	;volatile
  1528  00EC54  D7FD               	goto	_UART2_Read
  1529                           
  1530                           ; BSR set to: 57
  1531                           ;uart2.c: 131: }
  1532                           ;uart2.c: 133: if(1 == U2ERRIRbits.FERIF)
  1533  00EC56  013D               	movlb	61	; () banked
  1534  00EC58  A7E1               	btfss	225,3,b	;volatile
  1535  00EC5A  D002               	goto	l525
  1536                           
  1537                           ; BSR set to: 61
  1538                           ;uart2.c: 134: {
  1539                           ;uart2.c: 137: U2CON1bits.ON = 0;
  1540  00EC5C  9FDB               	bcf	219,7,b	;volatile
  1541                           
  1542                           ;uart2.c: 138: U2CON1bits.ON = 1;
  1543  00EC5E  8FDB               	bsf	219,7,b	;volatile
  1544  00EC60                     l525:
  1545                           
  1546                           ; BSR set to: 61
  1547                           ;uart2.c: 139: }
  1548                           ;uart2.c: 141: return U2RXB;
  1549                           
  1550                           ; BSR set to: 61
  1551  00EC60  51D0               	movf	208,w,b	;volatile
  1552  00EC62  0012               	return	
  1553  00EC64                     __end_of_UART2_Read:
  1554                           	opt stack 0
  1555                           
  1556 ;; *************** function _printf *****************
  1557 ;; Defined at:
  1558 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  f               2   12[COMRAM] PTR const unsigned char 
  1561 ;;		 -> STR_13(32), STR_12(32), STR_11(31), STR_10(32), 
  1562 ;;		 -> STR_9(34), STR_8(24), STR_7(48), STR_6(32), 
  1563 ;;		 -> STR_5(26), STR_4(84), STR_3(20), STR_2(19), 
  1564 ;;		 -> STR_1(3), 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  tmpval          4    0        struct .
  1567 ;;  val             2   35[COMRAM] unsigned int 
  1568 ;;  cp              2   33[COMRAM] PTR const unsigned char 
  1569 ;;		 -> STR_14(7), main@uart_data_rx(15), 
  1570 ;;  ap              2   31[COMRAM] PTR void [1]
  1571 ;;		 -> ?_printf(2), 
  1572 ;;  len             2    0        unsigned int 
  1573 ;;  c               1   37[COMRAM] char 
  1574 ;;  prec            1   30[COMRAM] char 
  1575 ;;  flag            1   29[COMRAM] unsigned char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  2   12[COMRAM] int 
  1578 ;; Registers used:
  1579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1585 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;Total ram usage:       26 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; Hardware stack levels required when called:    2
  1592 ;; This function calls:
  1593 ;;		___lwdiv
  1594 ;;		___lwmod
  1595 ;;		_putch
  1596 ;; This function is called by:
  1597 ;;		_main
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text4
  1602  00F44E                     __ptext4:
  1603                           	opt stack 0
  1604  00F44E                     _printf:
  1605                           	opt stack 28
  1606                           
  1607                           ;doprnt.c: 466: va_list ap;
  1608                           ;doprnt.c: 499: signed char c;
  1609                           ;doprnt.c: 506: signed char prec;
  1610                           ;doprnt.c: 508: unsigned char flag;
  1611                           ;doprnt.c: 523: union {
  1612                           ;doprnt.c: 524: unsigned long vd;
  1613                           ;doprnt.c: 525: double integ;
  1614                           ;doprnt.c: 526: } tmpval;
  1615                           ;doprnt.c: 528: unsigned int val;
  1616                           ;doprnt.c: 529: unsigned len;
  1617                           ;doprnt.c: 530: const char * cp;
  1618                           ;doprnt.c: 533: *ap = __va_start();
  1619                           
  1620                           ; BSR set to: 61
  1621                           ;incstack = 0
  1622  00F44E  0E0F               	movlw	low (?_printf+2)
  1623  00F450  6E20               	movwf	printf@ap,c
  1624  00F452  0E00               	movlw	high (?_printf+2)
  1625  00F454  6E21               	movwf	printf@ap+1,c
  1626                           
  1627                           ;doprnt.c: 536: while(c = *f++) {
  1628  00F456  D0E3               	goto	u1060
  1629  00F458                     
  1630                           ;doprnt.c: 538: if(c != '%')
  1631  00F458  0E25               	movlw	37
  1632  00F45A  1826               	xorwf	printf@c,w,c
  1633  00F45C  B4D8               	btfsc	16344,2,c
  1634  00F45E  D004               	goto	l676
  1635                           
  1636                           ;doprnt.c: 540: {
  1637                           ;doprnt.c: 541: (putch(c) );
  1638  00F460  5026               	movf	printf@c,w,c
  1639  00F462  EC14  F076         	call	_putch
  1640                           
  1641                           ;doprnt.c: 542: continue;
  1642  00F466  D0DB               	goto	u1060
  1643  00F468                     l676:
  1644                           
  1645                           ;doprnt.c: 543: }
  1646                           ;doprnt.c: 548: flag = 0;
  1647  00F468  0E00               	movlw	0
  1648  00F46A  6E1E               	movwf	printf@flag,c
  1649                           
  1650                           ;doprnt.c: 635: switch(c = *f++) {
  1651  00F46C  D04B               	goto	l677
  1652  00F46E                     
  1653                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  1654  00F46E  0060  F083  FFD9   	movff	printf@ap,16345
  1655  00F474  0060  F087  FFDA   	movff	printf@ap+1,16346
  1656  00F47A  006F FF78  F022    	movff	16350,printf@cp
  1657  00F480  006F FF74  F023    	movff	16349,printf@cp+1
  1658  00F486  0E02               	movlw	2
  1659  00F488  2620               	addwf	printf@ap,f,c
  1660  00F48A  0E00               	movlw	0
  1661  00F48C  2221               	addwfc	printf@ap+1,f,c
  1662                           
  1663                           ;doprnt.c: 740: if(!cp)
  1664  00F48E  5022               	movf	printf@cp,w,c
  1665  00F490  1023               	iorwf	printf@cp+1,w,c
  1666  00F492  A4D8               	btfss	16344,2,c
  1667  00F494  D01E               	goto	l685
  1668                           
  1669                           ;doprnt.c: 741: cp = "(null)";
  1670  00F496  0EF1               	movlw	low STR_14
  1671  00F498  6E22               	movwf	printf@cp,c
  1672  00F49A  0EFF               	movlw	high STR_14
  1673  00F49C  6E23               	movwf	printf@cp+1,c
  1674                           
  1675                           ;doprnt.c: 777: while(*cp)
  1676  00F49E  D019               	goto	l685
  1677  00F4A0                     
  1678                           ;doprnt.c: 778: (putch(*cp++) );
  1679  00F4A0  0060  F08B  FFF6   	movff	printf@cp,16374
  1680  00F4A6  0060  F08F  FFF7   	movff	printf@cp+1,16375
  1681  00F4AC  0E00               	movlw	low (__mediumconst shr (0+16))
  1682  00F4AE  6EF8               	movwf	16376,c
  1683  00F4B0  0E0F               	movlw	(high __ramtop+-1)
  1684  00F4B2  64F7               	cpfsgt	16375,c
  1685  00F4B4  D003               	bra	u987
  1686  00F4B6  0008               	tblrd		*
  1687  00F4B8  50F5               	movf	16373,w,c
  1688  00F4BA  D007               	bra	u980
  1689  00F4BC                     u987:
  1690  00F4BC  006F FFDB FFE1     	movff	16374,16353
  1691  00F4C2  006F FFDF FFE2     	movff	16375,16354
  1692  00F4C8  50E7               	movf	16359,w,c
  1693  00F4CA                     u980:
  1694  00F4CA  EC14  F076         	call	_putch
  1695  00F4CE  4A22               	infsnz	printf@cp,f,c
  1696  00F4D0  2A23               	incf	printf@cp+1,f,c
  1697  00F4D2                     l685:
  1698  00F4D2  0060  F08B  FFF6   	movff	printf@cp,16374
  1699  00F4D8  0060  F08F  FFF7   	movff	printf@cp+1,16375
  1700  00F4DE  0E00               	movlw	low (__mediumconst shr (0+16))
  1701  00F4E0  6EF8               	movwf	16376,c
  1702  00F4E2  0E0F               	movlw	(high __ramtop+-1)
  1703  00F4E4  64F7               	cpfsgt	16375,c
  1704  00F4E6  D003               	bra	u997
  1705  00F4E8  0008               	tblrd		*
  1706  00F4EA  50F5               	movf	16373,w,c
  1707  00F4EC  D007               	bra	u990
  1708  00F4EE                     u997:
  1709  00F4EE  006F FFDB FFE1     	movff	16374,16353
  1710  00F4F4  006F FFDF FFE2     	movff	16375,16354
  1711  00F4FA  50E7               	movf	16359,w,c
  1712  00F4FC                     u990:
  1713  00F4FC  0900               	iorlw	0
  1714  00F4FE  B4D8               	btfsc	16344,2,c
  1715  00F500  D08E               	goto	u1060
  1716  00F502  D7CE               	goto	l686
  1717  00F504                     l677:
  1718  00F504  0060  F037  FFF6   	movff	printf@f,16374
  1719  00F50A  0060  F03B  FFF7   	movff	printf@f+1,16375
  1720  00F510  4A0D               	infsnz	printf@f,f,c
  1721  00F512  2A0E               	incf	printf@f+1,f,c
  1722  00F514                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1723  00F514  6AF8               	clrf	16376,c
  1724  00F516                     	endif
  1725  00F516                     	if	0	;tblptru may be non-zero
  1726  00F516                     	endif
  1727  00F516  0008               	tblrd		*
  1728  00F518  006F FFD4  F026    	movff	16373,printf@c
  1729  00F51E  5026               	movf	printf@c,w,c
  1730                           
  1731                           ; Switch size 1, requested type "space"
  1732                           ; Number of cases is 4, Range of values is 0 to 115
  1733                           ; switch strategies available:
  1734                           ; Name         Instructions Cycles
  1735                           ; simple_byte           13     7 (average)
  1736                           ;	Chosen strategy is simple_byte
  1737  00F520  0A00               	xorlw	0	; case 0
  1738  00F522  B4D8               	btfsc	16344,2,c
  1739  00F524  0012               	return	
  1740  00F526  0A64               	xorlw	100	; case 100
  1741  00F528  B4D8               	btfsc	16344,2,c
  1742  00F52A  D007               	goto	l682
  1743  00F52C  0A0D               	xorlw	13	; case 105
  1744  00F52E  B4D8               	btfsc	16344,2,c
  1745  00F530  D004               	goto	l682
  1746  00F532  0A1A               	xorlw	26	; case 115
  1747  00F534  B4D8               	btfsc	16344,2,c
  1748  00F536  D79B               	goto	l683
  1749  00F538  D072               	goto	u1060
  1750  00F53A                     l682:
  1751                           
  1752                           ;doprnt.c: 1253: {
  1753                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1754  00F53A  0060  F083  FFD9   	movff	printf@ap,16345
  1755  00F540  0060  F087  FFDA   	movff	printf@ap+1,16346
  1756  00F546  006F FF78  F024    	movff	16350,printf@val
  1757  00F54C  006F FF74  F025    	movff	16349,printf@val+1
  1758  00F552  0E02               	movlw	2
  1759  00F554  2620               	addwf	printf@ap,f,c
  1760  00F556  0E00               	movlw	0
  1761  00F558  2221               	addwfc	printf@ap+1,f,c
  1762                           
  1763                           ;doprnt.c: 1261: if((int)val < 0) {
  1764  00F55A  AE25               	btfss	printf@val+1,7,c
  1765  00F55C  D006               	goto	l689
  1766                           
  1767                           ;doprnt.c: 1262: flag |= 0x03;
  1768  00F55E  0E03               	movlw	3
  1769  00F560  121E               	iorwf	printf@flag,f,c
  1770                           
  1771                           ;doprnt.c: 1263: val = -val;
  1772  00F562  6C24               	negf	printf@val,c
  1773  00F564  1E25               	comf	printf@val+1,f,c
  1774  00F566  B0D8               	btfsc	16344,0,c
  1775  00F568  2A25               	incf	printf@val+1,f,c
  1776  00F56A                     l689:
  1777                           
  1778                           ;doprnt.c: 1264: }
  1779                           ;doprnt.c: 1266: }
  1780                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1781  00F56A  0E01               	movlw	1
  1782  00F56C  6E26               	movwf	printf@c,c
  1783  00F56E                     l2296:
  1784  00F56E  0E05               	movlw	5
  1785  00F570  1826               	xorwf	printf@c,w,c
  1786  00F572  B4D8               	btfsc	16344,2,c
  1787  00F574  D015               	goto	u1040
  1788                           
  1789                           ;doprnt.c: 1306: if(val < dpowers[c])
  1790  00F576  5026               	movf	printf@c,w,c
  1791  00F578  0D02               	mullw	2
  1792  00F57A  0E49               	movlw	low _dpowers
  1793  00F57C  24F3               	addwf	16371,w,c
  1794  00F57E  6EF6               	movwf	16374,c
  1795  00F580  0EFE               	movlw	high _dpowers
  1796  00F582  20F4               	addwfc	16372,w,c
  1797  00F584  6EF7               	movwf	16375,c
  1798  00F586                     	if	1	;There are 3 active tblptr bytes
  1799  00F586  6AF8               	clrf	16376,c
  1800  00F588  0E00               	movlw	low (__mediumconst shr (0+16))
  1801  00F58A  22F8               	addwfc	16376,f,c
  1802  00F58C                     	endif
  1803  00F58C  0009               	tblrd		*+
  1804  00F58E  50F5               	movf	16373,w,c
  1805  00F590  5C24               	subwf	printf@val,w,c
  1806  00F592  0009               	tblrd		*+
  1807  00F594  50F5               	movf	16373,w,c
  1808  00F596  5825               	subwfb	printf@val+1,w,c
  1809  00F598  A0D8               	btfss	16344,0,c
  1810  00F59A  D002               	goto	u1040
  1811                           
  1812                           ;doprnt.c: 1307: break;
  1813  00F59C  2A26               	incf	printf@c,f,c
  1814  00F59E  D7E7               	goto	l2296
  1815  00F5A0                     u1040:
  1816                           
  1817                           ;doprnt.c: 1422: {
  1818                           ;doprnt.c: 1438: if(flag & 0x03)
  1819  00F5A0  0060  F078  F01D   	movff	printf@flag,??_printf
  1820  00F5A6  0E03               	movlw	3
  1821  00F5A8  161D               	andwf	??_printf,f,c
  1822  00F5AA  B4D8               	btfsc	16344,2,c
  1823  00F5AC  D003               	goto	l693
  1824                           
  1825                           ;doprnt.c: 1439: (putch('-') );
  1826  00F5AE  0E2D               	movlw	45
  1827  00F5B0  EC14  F076         	call	_putch
  1828  00F5B4                     l693:
  1829                           
  1830                           ;doprnt.c: 1469: }
  1831                           ;doprnt.c: 1472: prec = c;
  1832  00F5B4  0060  F098  F01F   	movff	printf@c,printf@prec
  1833                           
  1834                           ;doprnt.c: 1474: while(prec--) {
  1835  00F5BA  D02D               	goto	l694
  1836  00F5BC                     
  1837                           ;doprnt.c: 1478: {
  1838                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1839  00F5BC  501F               	movf	printf@prec,w,c
  1840  00F5BE  0D02               	mullw	2
  1841  00F5C0  0E49               	movlw	low _dpowers
  1842  00F5C2  24F3               	addwf	16371,w,c
  1843  00F5C4  6EF6               	movwf	16374,c
  1844  00F5C6  0EFE               	movlw	high _dpowers
  1845  00F5C8  20F4               	addwfc	16372,w,c
  1846  00F5CA  6EF7               	movwf	16375,c
  1847  00F5CC                     	if	1	;There are 3 active tblptr bytes
  1848  00F5CC  6AF8               	clrf	16376,c
  1849  00F5CE  0E00               	movlw	low (__mediumconst shr (0+16))
  1850  00F5D0  22F8               	addwfc	16376,f,c
  1851  00F5D2                     	endif
  1852  00F5D2  0009               	tblrd		*+
  1853  00F5D4  006F FFD4  F003    	movff	16373,___lwdiv@divisor
  1854  00F5DA  000A               	tblrd		*-
  1855  00F5DC  006F FFD4  F004    	movff	16373,___lwdiv@divisor+1
  1856  00F5E2  0060  F090  F001   	movff	printf@val,___lwdiv@dividend
  1857  00F5E8  0060  F094  F002   	movff	printf@val+1,___lwdiv@dividend+1
  1858  00F5EE  EC57  F077         	call	___lwdiv	;wreg free
  1859  00F5F2  0060  F004  F008   	movff	?___lwdiv,___lwmod@dividend
  1860  00F5F8  0060  F008  F009   	movff	?___lwdiv+1,___lwmod@dividend+1
  1861  00F5FE  0E00               	movlw	0
  1862  00F600  6E0B               	movwf	___lwmod@divisor+1,c
  1863  00F602  0E0A               	movlw	10
  1864  00F604  6E0A               	movwf	___lwmod@divisor,c
  1865  00F606  ECE5  F076         	call	___lwmod	;wreg free
  1866  00F60A  5008               	movf	?___lwmod,w,c
  1867  00F60C  0F30               	addlw	48
  1868  00F60E  6E26               	movwf	printf@c,c
  1869                           
  1870                           ;doprnt.c: 1523: }
  1871                           ;doprnt.c: 1524: (putch(c) );
  1872  00F610  5026               	movf	printf@c,w,c
  1873  00F612  EC14  F076         	call	_putch
  1874  00F616                     l694:
  1875  00F616  061F               	decf	printf@prec,f,c
  1876  00F618  281F               	incf	printf@prec,w,c
  1877  00F61A  A4D8               	btfss	16344,2,c
  1878  00F61C  D7CF               	goto	l695
  1879  00F61E                     u1060:
  1880  00F61E  0060  F037  FFF6   	movff	printf@f,16374
  1881  00F624  0060  F03B  FFF7   	movff	printf@f+1,16375
  1882  00F62A  4A0D               	infsnz	printf@f,f,c
  1883  00F62C  2A0E               	incf	printf@f+1,f,c
  1884  00F62E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1885  00F62E  6AF8               	clrf	16376,c
  1886  00F630                     	endif
  1887  00F630                     	if	0	;tblptru may be non-zero
  1888  00F630                     	endif
  1889  00F630  0008               	tblrd		*
  1890  00F632  006F FFD4  F026    	movff	16373,printf@c
  1891  00F638  5026               	movf	printf@c,w,c
  1892  00F63A  B4D8               	btfsc	16344,2,c
  1893  00F63C  0012               	return	
  1894  00F63E  D70C               	goto	l675
  1895  00F640                     __end_of_printf:
  1896                           	opt stack 0
  1897                           
  1898 ;; *************** function _putch *****************
  1899 ;; Defined at:
  1900 ;;		line 158 in file "mcc_generated_files/uart2.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  txData          1    wreg     unsigned char 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  txData          1    1[COMRAM] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;Total ram usage:        1 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    1
  1921 ;; This function calls:
  1922 ;;		_UART2_Write
  1923 ;; This function is called by:
  1924 ;;		_printf
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text5
  1929  00EC28                     __ptext5:
  1930                           	opt stack 0
  1931  00EC28                     _putch:
  1932                           	opt stack 28
  1933                           
  1934                           ;incstack = 0
  1935                           ;putch@txData stored from wreg
  1936  00EC28  6E02               	movwf	putch@txData,c
  1937                           
  1938                           ;uart2.c: 160: UART2_Write(txData);
  1939  00EC2A  5002               	movf	putch@txData,w,c
  1940  00EC2C  EC20  F076         	call	_UART2_Write
  1941  00EC30  0012               	return		;funcret
  1942  00EC32                     __end_of_putch:
  1943                           	opt stack 0
  1944                           
  1945 ;; *************** function _UART2_Write *****************
  1946 ;; Defined at:
  1947 ;;		line 144 in file "mcc_generated_files/uart2.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  txData          1    wreg     unsigned char 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  txData          1    0[COMRAM] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;Total ram usage:        1 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_putch
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text6
  1975  00EC40                     __ptext6:
  1976                           	opt stack 0
  1977  00EC40                     _UART2_Write:
  1978                           	opt stack 28
  1979                           
  1980                           ;incstack = 0
  1981                           ;UART2_Write@txData stored from wreg
  1982  00EC40  6E01               	movwf	UART2_Write@txData,c
  1983  00EC42                     
  1984                           ;uart2.c: 147: {
  1985                           
  1986                           ;uart2.c: 146: while(0 == PIR7bits.U2TXIF)
  1987  00EC42  0139               	movlb	57	; () banked
  1988  00EC44  ABA7               	btfss	167,5,b	;volatile
  1989  00EC46  D7FD               	goto	l1332
  1990                           
  1991                           ; BSR set to: 57
  1992                           ;uart2.c: 148: }
  1993                           ;uart2.c: 150: U2TXB = txData;
  1994                           
  1995                           ; BSR set to: 57
  1996  00EC48  0060  F007  FDD2   	movff	UART2_Write@txData,15826	;volatile
  1997                           
  1998                           ; BSR set to: 57
  1999  00EC4E  0012               	return		;funcret
  2000  00EC50                     __end_of_UART2_Write:
  2001                           	opt stack 0
  2002                           
  2003 ;; *************** function ___lwmod *****************
  2004 ;; Defined at:
  2005 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  dividend        2    7[COMRAM] unsigned int 
  2008 ;;  divisor         2    9[COMRAM] unsigned int 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  counter         1   11[COMRAM] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  2    7[COMRAM] unsigned int 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2020 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;Total ram usage:        5 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_printf
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text7
  2034  00EDCA                     __ptext7:
  2035                           	opt stack 0
  2036  00EDCA                     ___lwmod:
  2037                           	opt stack 29
  2038                           
  2039                           ; BSR set to: 57
  2040                           ;incstack = 0
  2041  00EDCA  500A               	movf	___lwmod@divisor,w,c
  2042  00EDCC  100B               	iorwf	___lwmod@divisor+1,w,c
  2043  00EDCE  B4D8               	btfsc	16344,2,c
  2044  00EDD0  D018               	goto	l1117
  2045  00EDD2  0E01               	movlw	1
  2046  00EDD4  6E0C               	movwf	___lwmod@counter,c
  2047  00EDD6  D004               	goto	l1112
  2048  00EDD8  90D8               	bcf	16344,0,c
  2049  00EDDA  360A               	rlcf	___lwmod@divisor,f,c
  2050  00EDDC  360B               	rlcf	___lwmod@divisor+1,f,c
  2051  00EDDE  2A0C               	incf	___lwmod@counter,f,c
  2052  00EDE0                     l1112:
  2053  00EDE0  AE0B               	btfss	___lwmod@divisor+1,7,c
  2054  00EDE2  D7FA               	goto	l1113
  2055  00EDE4                     u860:
  2056  00EDE4  500A               	movf	___lwmod@divisor,w,c
  2057  00EDE6  5C08               	subwf	___lwmod@dividend,w,c
  2058  00EDE8  500B               	movf	___lwmod@divisor+1,w,c
  2059  00EDEA  5809               	subwfb	___lwmod@dividend+1,w,c
  2060  00EDEC  A0D8               	btfss	16344,0,c
  2061  00EDEE  D004               	goto	l1116
  2062  00EDF0  500A               	movf	___lwmod@divisor,w,c
  2063  00EDF2  5E08               	subwf	___lwmod@dividend,f,c
  2064  00EDF4  500B               	movf	___lwmod@divisor+1,w,c
  2065  00EDF6  5A09               	subwfb	___lwmod@dividend+1,f,c
  2066  00EDF8                     l1116:
  2067  00EDF8  90D8               	bcf	16344,0,c
  2068  00EDFA  320B               	rrcf	___lwmod@divisor+1,f,c
  2069  00EDFC  320A               	rrcf	___lwmod@divisor,f,c
  2070  00EDFE  2E0C               	decfsz	___lwmod@counter,f,c
  2071  00EE00  D7F1               	goto	u860
  2072  00EE02                     l1117:
  2073  00EE02  0060  F020  F008   	movff	___lwmod@dividend,?___lwmod
  2074  00EE08  0060  F024  F009   	movff	___lwmod@dividend+1,?___lwmod+1
  2075  00EE0E  0012               	return		;funcret
  2076  00EE10                     __end_of___lwmod:
  2077                           	opt stack 0
  2078                           
  2079 ;; *************** function ___lwdiv *****************
  2080 ;; Defined at:
  2081 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  dividend        2    0[COMRAM] unsigned int 
  2084 ;;  divisor         2    2[COMRAM] unsigned int 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  quotient        2    4[COMRAM] unsigned int 
  2087 ;;  counter         1    6[COMRAM] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  2    0[COMRAM] unsigned int 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2097 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;Total ram usage:        7 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_printf
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text8
  2111  00EEAE                     __ptext8:
  2112                           	opt stack 0
  2113  00EEAE                     ___lwdiv:
  2114                           	opt stack 29
  2115                           
  2116                           ;incstack = 0
  2117  00EEAE  0E00               	movlw	0
  2118  00EEB0  6E06               	movwf	___lwdiv@quotient+1,c
  2119  00EEB2  0E00               	movlw	0
  2120  00EEB4  6E05               	movwf	___lwdiv@quotient,c
  2121  00EEB6  5003               	movf	___lwdiv@divisor,w,c
  2122  00EEB8  1004               	iorwf	___lwdiv@divisor+1,w,c
  2123  00EEBA  B4D8               	btfsc	16344,2,c
  2124  00EEBC  D01C               	goto	l1107
  2125  00EEBE  0E01               	movlw	1
  2126  00EEC0  6E07               	movwf	___lwdiv@counter,c
  2127  00EEC2  D004               	goto	l1102
  2128  00EEC4  90D8               	bcf	16344,0,c
  2129  00EEC6  3603               	rlcf	___lwdiv@divisor,f,c
  2130  00EEC8  3604               	rlcf	___lwdiv@divisor+1,f,c
  2131  00EECA  2A07               	incf	___lwdiv@counter,f,c
  2132  00EECC                     l1102:
  2133  00EECC  AE04               	btfss	___lwdiv@divisor+1,7,c
  2134  00EECE  D7FA               	goto	l1103
  2135  00EED0                     u830:
  2136  00EED0  90D8               	bcf	16344,0,c
  2137  00EED2  3605               	rlcf	___lwdiv@quotient,f,c
  2138  00EED4  3606               	rlcf	___lwdiv@quotient+1,f,c
  2139  00EED6  5003               	movf	___lwdiv@divisor,w,c
  2140  00EED8  5C01               	subwf	___lwdiv@dividend,w,c
  2141  00EEDA  5004               	movf	___lwdiv@divisor+1,w,c
  2142  00EEDC  5802               	subwfb	___lwdiv@dividend+1,w,c
  2143  00EEDE  A0D8               	btfss	16344,0,c
  2144  00EEE0  D005               	goto	l1106
  2145  00EEE2  5003               	movf	___lwdiv@divisor,w,c
  2146  00EEE4  5E01               	subwf	___lwdiv@dividend,f,c
  2147  00EEE6  5004               	movf	___lwdiv@divisor+1,w,c
  2148  00EEE8  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2149  00EEEA  8005               	bsf	___lwdiv@quotient,0,c
  2150  00EEEC                     l1106:
  2151  00EEEC  90D8               	bcf	16344,0,c
  2152  00EEEE  3204               	rrcf	___lwdiv@divisor+1,f,c
  2153  00EEF0  3203               	rrcf	___lwdiv@divisor,f,c
  2154  00EEF2  2E07               	decfsz	___lwdiv@counter,f,c
  2155  00EEF4  D7ED               	goto	u830
  2156  00EEF6                     l1107:
  2157  00EEF6  0060  F014  F001   	movff	___lwdiv@quotient,?___lwdiv
  2158  00EEFC  0060  F018  F002   	movff	___lwdiv@quotient+1,?___lwdiv+1
  2159  00EF02  0012               	return		;funcret
  2160  00EF04                     __end_of___lwdiv:
  2161                           	opt stack 0
  2162                           
  2163 ;; *************** function _memset *****************
  2164 ;; Defined at:
  2165 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  p1              2    0[COMRAM] PTR void 
  2168 ;;		 -> main@uart_data_rx(15), 
  2169 ;;  c               2    2[COMRAM] int 
  2170 ;;  n               2    4[COMRAM] unsigned int 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  p               2    6[COMRAM] PTR unsigned char 
  2173 ;;		 -> main@uart_data_rx(15), 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  2    0[COMRAM] PTR void 
  2176 ;; Registers used:
  2177 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2183 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;Total ram usage:        8 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text9
  2197  00ED14                     __ptext9:
  2198                           	opt stack 0
  2199  00ED14                     _memset:
  2200                           	opt stack 30
  2201                           
  2202                           ;incstack = 0
  2203  00ED14  0060  F004  F007   	movff	memset@p1,memset@p
  2204  00ED1A  0060  F008  F008   	movff	memset@p1+1,memset@p+1
  2205  00ED20  D00B               	goto	l1132
  2206  00ED22                     l2252:
  2207  00ED22  0060  F01F  FFD9   	movff	memset@p,16345
  2208  00ED28  0060  F023  FFDA   	movff	memset@p+1,16346
  2209  00ED2E  0060  F00F  FFDF   	movff	memset@c,16351
  2210  00ED34  4A07               	infsnz	memset@p,f,c
  2211  00ED36  2A08               	incf	memset@p+1,f,c
  2212  00ED38                     l1132:
  2213  00ED38  0605               	decf	memset@n,f,c
  2214  00ED3A  A0D8               	btfss	16344,0,c
  2215  00ED3C  0606               	decf	memset@n+1,f,c
  2216  00ED3E  2805               	incf	memset@n,w,c
  2217  00ED40  E1F0               	bnz	l2252
  2218  00ED42  2806               	incf	memset@n+1,w,c
  2219  00ED44  B4D8               	btfsc	16344,2,c
  2220  00ED46  0012               	return	
  2221  00ED48  D7EC               	goto	l1133
  2222  00ED4A                     __end_of_memset:
  2223                           	opt stack 0
  2224                           
  2225 ;; *************** function _memcpy *****************
  2226 ;; Defined at:
  2227 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  d1              2    0[COMRAM] PTR void 
  2230 ;;		 -> main@can_msg_tx(14), 
  2231 ;;  s1              2    2[COMRAM] PTR const void 
  2232 ;;		 -> main@uart_data_rx(15), 
  2233 ;;  n               2    4[COMRAM] unsigned int 
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;  s               2    8[COMRAM] PTR const unsigned char 
  2236 ;;		 -> main@uart_data_rx(15), 
  2237 ;;  d               2    6[COMRAM] PTR unsigned char 
  2238 ;;		 -> main@can_msg_tx(14), 
  2239 ;;  tmp             1   10[COMRAM] unsigned char 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  2    0[COMRAM] PTR void 
  2242 ;; Registers used:
  2243 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2249 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;Total ram usage:       11 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_main
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text10
  2263  00EE58                     __ptext10:
  2264                           	opt stack 0
  2265  00EE58                     _memcpy:
  2266                           	opt stack 30
  2267                           
  2268                           ;incstack = 0
  2269  00EE58  0060  F00C  F009   	movff	memcpy@s1,memcpy@s
  2270  00EE5E  0060  F010  F00A   	movff	memcpy@s1+1,memcpy@s+1
  2271  00EE64  0060  F004  F007   	movff	memcpy@d1,memcpy@d
  2272  00EE6A  0060  F008  F008   	movff	memcpy@d1+1,memcpy@d+1
  2273  00EE70  D015               	goto	l1126
  2274  00EE72                     l2370:
  2275  00EE72  0060  F027  FFD9   	movff	memcpy@s,16345
  2276  00EE78  0060  F02B  FFDA   	movff	memcpy@s+1,16346
  2277  00EE7E  50DF               	movf	16351,w,c
  2278  00EE80  6E0B               	movwf	memcpy@tmp,c
  2279  00EE82  4A09               	infsnz	memcpy@s,f,c
  2280  00EE84  2A0A               	incf	memcpy@s+1,f,c
  2281  00EE86  0060  F01F  FFD9   	movff	memcpy@d,16345
  2282  00EE8C  0060  F023  FFDA   	movff	memcpy@d+1,16346
  2283  00EE92  0060  F02F  FFDF   	movff	memcpy@tmp,16351
  2284  00EE98  4A07               	infsnz	memcpy@d,f,c
  2285  00EE9A  2A08               	incf	memcpy@d+1,f,c
  2286  00EE9C                     l1126:
  2287  00EE9C  0605               	decf	memcpy@n,f,c
  2288  00EE9E  A0D8               	btfss	16344,0,c
  2289  00EEA0  0606               	decf	memcpy@n+1,f,c
  2290  00EEA2  2805               	incf	memcpy@n,w,c
  2291  00EEA4  E1E6               	bnz	l2370
  2292  00EEA6  2806               	incf	memcpy@n+1,w,c
  2293  00EEA8  B4D8               	btfsc	16344,2,c
  2294  00EEAA  0012               	return	
  2295  00EEAC  D7E2               	goto	l1127
  2296  00EEAE                     __end_of_memcpy:
  2297                           	opt stack 0
  2298                           
  2299 ;; *************** function _led_toggle *****************
  2300 ;; Defined at:
  2301 ;;		line 206 in file "main.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  led_num         1    wreg     unsigned char 
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  led_num         1    1[COMRAM] unsigned char 
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, status,2, status,0
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;Total ram usage:        2 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; This function calls:
  2322 ;;		Nothing
  2323 ;; This function is called by:
  2324 ;;		_main
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text11
  2329  00EE10                     __ptext11:
  2330                           	opt stack 0
  2331  00EE10                     _led_toggle:
  2332                           	opt stack 30
  2333                           
  2334                           ;incstack = 0
  2335                           ;led_toggle@led_num stored from wreg
  2336  00EE10  6E02               	movwf	led_toggle@led_num,c
  2337                           
  2338                           ;main.c: 208: if(led_num == 0)
  2339  00EE12  5002               	movf	led_toggle@led_num,w,c
  2340  00EE14  A4D8               	btfss	16344,2,c
  2341  00EE16  D00E               	goto	l636
  2342                           
  2343                           ;main.c: 209: do { LATAbits.LATA0 = ~LATAbits.LATA0; } while(0);
  2344  00EE18  013F               	movlb	63	; () banked
  2345  00EE1A  A1BA               	btfss	186,0,b	;volatile
  2346  00EE1C  D002               	goto	u490
  2347  00EE1E  0E01               	movlw	1
  2348  00EE20  D001               	goto	u496
  2349  00EE22                     u490:
  2350  00EE22  0E00               	movlw	0
  2351  00EE24                     u496:
  2352  00EE24  0AFF               	xorlw	255
  2353  00EE26  6E01               	movwf	??_led_toggle& (0+255),c
  2354  00EE28  51BA               	movf	186,w,b	;volatile
  2355  00EE2A  1801               	xorwf	??_led_toggle,w,c
  2356  00EE2C  0BFE               	andlw	-2
  2357  00EE2E  1801               	xorwf	??_led_toggle,w,c
  2358  00EE30  6FBA               	movwf	186,b	;volatile
  2359                           
  2360                           ; BSR set to: 63
  2361  00EE32  0012               	return	
  2362  00EE34                     l636:
  2363                           
  2364                           ;main.c: 210: else if (led_num == 1)
  2365                           
  2366                           ; BSR set to: 63
  2367  00EE34  0402               	decf	led_toggle@led_num,w,c
  2368  00EE36  A4D8               	btfss	16344,2,c
  2369  00EE38  0012               	return	
  2370                           
  2371                           ;main.c: 211: do { LATAbits.LATA1 = ~LATAbits.LATA1; } while(0);
  2372  00EE3A  013F               	movlb	63	; () banked
  2373  00EE3C  A3BA               	btfss	186,1,b	;volatile
  2374  00EE3E  D002               	goto	u510
  2375  00EE40  0E01               	movlw	1
  2376  00EE42  D001               	goto	u516
  2377  00EE44                     u510:
  2378  00EE44  0E00               	movlw	0
  2379  00EE46                     u516:
  2380  00EE46  0AFF               	xorlw	255
  2381  00EE48  6E01               	movwf	??_led_toggle& (0+255),c
  2382  00EE4A  4601               	rlncf	??_led_toggle,f,c
  2383  00EE4C  51BA               	movf	186,w,b	;volatile
  2384  00EE4E  1801               	xorwf	??_led_toggle,w,c
  2385  00EE50  0BFD               	andlw	-3
  2386  00EE52  1801               	xorwf	??_led_toggle,w,c
  2387  00EE54  6FBA               	movwf	186,b	;volatile
  2388                           
  2389                           ; BSR set to: 63
  2390                           
  2391                           ; BSR set to: 63
  2392  00EE56  0012               	return	
  2393  00EE58                     __end_of_led_toggle:
  2394                           	opt stack 0
  2395                           
  2396 ;; *************** function _SYSTEM_Initialize *****************
  2397 ;; Defined at:
  2398 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      void 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    1
  2419 ;; This function calls:
  2420 ;;		_ECAN_Initialize
  2421 ;;		_OSCILLATOR_Initialize
  2422 ;;		_PIN_MANAGER_Initialize
  2423 ;;		_PMD_Initialize
  2424 ;;		_UART1_Initialize
  2425 ;;		_UART2_Initialize
  2426 ;; This function is called by:
  2427 ;;		_main
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text12
  2432  00EC96                     __ptext12:
  2433                           	opt stack 0
  2434  00EC96                     _SYSTEM_Initialize:
  2435                           	opt stack 29
  2436                           
  2437                           ;mcc.c: 52: PMD_Initialize();
  2438                           
  2439                           ;incstack = 0
  2440  00EC96  EC78  F076         	call	_PMD_Initialize	;wreg free
  2441                           
  2442                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  2443  00EC9A  EC82  F077         	call	_PIN_MANAGER_Initialize	;wreg free
  2444                           
  2445                           ;mcc.c: 54: OSCILLATOR_Initialize();
  2446  00EC9E  EC32  F076         	call	_OSCILLATOR_Initialize	;wreg free
  2447                           
  2448                           ;mcc.c: 55: UART2_Initialize();
  2449  00ECA2  ECC5  F076         	call	_UART2_Initialize	;wreg free
  2450                           
  2451                           ;mcc.c: 56: UART1_Initialize();
  2452  00ECA6  ECA5  F076         	call	_UART1_Initialize	;wreg free
  2453                           
  2454                           ;mcc.c: 57: ECAN_Initialize();
  2455  00ECAA  EC4C  F078         	call	_ECAN_Initialize	;wreg free
  2456  00ECAE  0012               	return		;funcret
  2457  00ECB0                     __end_of_SYSTEM_Initialize:
  2458                           	opt stack 0
  2459                           
  2460 ;; *************** function _UART2_Initialize *****************
  2461 ;; Defined at:
  2462 ;;		line 58 in file "mcc_generated_files/uart2.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;		None
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;Total ram usage:        0 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_SYSTEM_Initialize
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text13
  2490  00ED8A                     __ptext13:
  2491                           	opt stack 0
  2492  00ED8A                     _UART2_Initialize:
  2493                           	opt stack 29
  2494                           
  2495                           ;uart2.c: 65: U2P1L = 0x00;
  2496                           
  2497                           ;incstack = 0
  2498  00ED8A  0E00               	movlw	0
  2499  00ED8C  013D               	movlb	61	; () banked
  2500  00ED8E  6FD4               	movwf	212,b	;volatile
  2501                           
  2502                           ;uart2.c: 68: U2P1H = 0x00;
  2503  00ED90  0E00               	movlw	0
  2504  00ED92  6FD5               	movwf	213,b	;volatile
  2505                           
  2506                           ;uart2.c: 71: U2P2L = 0x00;
  2507  00ED94  0E00               	movlw	0
  2508  00ED96  6FD6               	movwf	214,b	;volatile
  2509                           
  2510                           ;uart2.c: 74: U2P2H = 0x00;
  2511  00ED98  0E00               	movlw	0
  2512  00ED9A  6FD7               	movwf	215,b	;volatile
  2513                           
  2514                           ;uart2.c: 77: U2P3L = 0x00;
  2515  00ED9C  0E00               	movlw	0
  2516  00ED9E  6FD8               	movwf	216,b	;volatile
  2517                           
  2518                           ;uart2.c: 80: U2P3H = 0x00;
  2519  00EDA0  0E00               	movlw	0
  2520  00EDA2  6FD9               	movwf	217,b	;volatile
  2521                           
  2522                           ;uart2.c: 83: U2CON0 = 0xB0;
  2523  00EDA4  0EB0               	movlw	176
  2524  00EDA6  6FDA               	movwf	218,b	;volatile
  2525                           
  2526                           ;uart2.c: 86: U2CON1 = 0x80;
  2527  00EDA8  0E80               	movlw	128
  2528  00EDAA  6FDB               	movwf	219,b	;volatile
  2529                           
  2530                           ;uart2.c: 89: U2CON2 = 0x00;
  2531  00EDAC  0E00               	movlw	0
  2532  00EDAE  6FDC               	movwf	220,b	;volatile
  2533                           
  2534                           ;uart2.c: 92: U2BRGL = 0x40;
  2535  00EDB0  0E40               	movlw	64
  2536  00EDB2  6FDD               	movwf	221,b	;volatile
  2537                           
  2538                           ;uart2.c: 95: U2BRGH = 0x03;
  2539  00EDB4  0E03               	movlw	3
  2540  00EDB6  6FDE               	movwf	222,b	;volatile
  2541                           
  2542                           ;uart2.c: 98: U2FIFO = 0x00;
  2543  00EDB8  0E00               	movlw	0
  2544  00EDBA  6FDF               	movwf	223,b	;volatile
  2545                           
  2546                           ;uart2.c: 101: U2UIR = 0x00;
  2547  00EDBC  0E00               	movlw	0
  2548  00EDBE  6FE0               	movwf	224,b	;volatile
  2549                           
  2550                           ;uart2.c: 104: U2ERRIR = 0x00;
  2551  00EDC0  0E00               	movlw	0
  2552  00EDC2  6FE1               	movwf	225,b	;volatile
  2553                           
  2554                           ;uart2.c: 107: U2ERRIE = 0x00;
  2555  00EDC4  0E00               	movlw	0
  2556  00EDC6  6FE2               	movwf	226,b	;volatile
  2557                           
  2558                           ; BSR set to: 61
  2559  00EDC8  0012               	return		;funcret
  2560  00EDCA                     __end_of_UART2_Initialize:
  2561                           	opt stack 0
  2562                           
  2563 ;; *************** function _UART1_Initialize *****************
  2564 ;; Defined at:
  2565 ;;		line 58 in file "mcc_generated_files/uart1.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;		None
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;		None
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;Total ram usage:        0 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_SYSTEM_Initialize
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text14
  2593  00ED4A                     __ptext14:
  2594                           	opt stack 0
  2595  00ED4A                     _UART1_Initialize:
  2596                           	opt stack 29
  2597                           
  2598                           ;uart1.c: 65: U1P1L = 0x00;
  2599                           
  2600                           ; BSR set to: 61
  2601                           ;incstack = 0
  2602  00ED4A  0E00               	movlw	0
  2603  00ED4C  013D               	movlb	61	; () banked
  2604  00ED4E  6FEC               	movwf	236,b	;volatile
  2605                           
  2606                           ;uart1.c: 68: U1P1H = 0x00;
  2607  00ED50  0E00               	movlw	0
  2608  00ED52  6FED               	movwf	237,b	;volatile
  2609                           
  2610                           ;uart1.c: 71: U1P2L = 0x00;
  2611  00ED54  0E00               	movlw	0
  2612  00ED56  6FEE               	movwf	238,b	;volatile
  2613                           
  2614                           ;uart1.c: 74: U1P2H = 0x00;
  2615  00ED58  0E00               	movlw	0
  2616  00ED5A  6FEF               	movwf	239,b	;volatile
  2617                           
  2618                           ;uart1.c: 77: U1P3L = 0x00;
  2619  00ED5C  0E00               	movlw	0
  2620  00ED5E  6FF0               	movwf	240,b	;volatile
  2621                           
  2622                           ;uart1.c: 80: U1P3H = 0x00;
  2623  00ED60  0E00               	movlw	0
  2624  00ED62  6FF1               	movwf	241,b	;volatile
  2625                           
  2626                           ;uart1.c: 83: U1CON0 = 0xB0;
  2627  00ED64  0EB0               	movlw	176
  2628  00ED66  6FF2               	movwf	242,b	;volatile
  2629                           
  2630                           ;uart1.c: 86: U1CON1 = 0x80;
  2631  00ED68  0E80               	movlw	128
  2632  00ED6A  6FF3               	movwf	243,b	;volatile
  2633                           
  2634                           ;uart1.c: 89: U1CON2 = 0x00;
  2635  00ED6C  0E00               	movlw	0
  2636  00ED6E  6FF4               	movwf	244,b	;volatile
  2637                           
  2638                           ;uart1.c: 92: U1BRGL = 0x44;
  2639  00ED70  0E44               	movlw	68
  2640  00ED72  6FF5               	movwf	245,b	;volatile
  2641                           
  2642                           ;uart1.c: 95: U1BRGH = 0x00;
  2643  00ED74  0E00               	movlw	0
  2644  00ED76  6FF6               	movwf	246,b	;volatile
  2645                           
  2646                           ;uart1.c: 98: U1FIFO = 0x00;
  2647  00ED78  0E00               	movlw	0
  2648  00ED7A  6FF7               	movwf	247,b	;volatile
  2649                           
  2650                           ;uart1.c: 101: U1UIR = 0x00;
  2651  00ED7C  0E00               	movlw	0
  2652  00ED7E  6FF8               	movwf	248,b	;volatile
  2653                           
  2654                           ;uart1.c: 104: U1ERRIR = 0x00;
  2655  00ED80  0E00               	movlw	0
  2656  00ED82  6FF9               	movwf	249,b	;volatile
  2657                           
  2658                           ;uart1.c: 107: U1ERRIE = 0x00;
  2659  00ED84  0E00               	movlw	0
  2660  00ED86  6FFA               	movwf	250,b	;volatile
  2661                           
  2662                           ; BSR set to: 61
  2663  00ED88  0012               	return		;funcret
  2664  00ED8A                     __end_of_UART1_Initialize:
  2665                           	opt stack 0
  2666                           
  2667 ;; *************** function _PMD_Initialize *****************
  2668 ;; Defined at:
  2669 ;;		line 74 in file "mcc_generated_files/mcc.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;Total ram usage:        0 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_SYSTEM_Initialize
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text15
  2697  00ECF0                     __ptext15:
  2698                           	opt stack 0
  2699  00ECF0                     _PMD_Initialize:
  2700                           	opt stack 29
  2701                           
  2702                           ;mcc.c: 77: PMD0 = 0x00;
  2703                           
  2704                           ; BSR set to: 61
  2705                           ;incstack = 0
  2706  00ECF0  0E00               	movlw	0
  2707  00ECF2  0139               	movlb	57	; () banked
  2708  00ECF4  6FC0               	movwf	192,b	;volatile
  2709                           
  2710                           ;mcc.c: 79: PMD1 = 0x00;
  2711  00ECF6  0E00               	movlw	0
  2712  00ECF8  6FC1               	movwf	193,b	;volatile
  2713                           
  2714                           ;mcc.c: 81: PMD2 = 0x00;
  2715  00ECFA  0E00               	movlw	0
  2716  00ECFC  6FC2               	movwf	194,b	;volatile
  2717                           
  2718                           ;mcc.c: 83: PMD3 = 0x00;
  2719  00ECFE  0E00               	movlw	0
  2720  00ED00  6FC3               	movwf	195,b	;volatile
  2721                           
  2722                           ;mcc.c: 85: PMD4 = 0x00;
  2723  00ED02  0E00               	movlw	0
  2724  00ED04  6FC4               	movwf	196,b	;volatile
  2725                           
  2726                           ;mcc.c: 87: PMD5 = 0x00;
  2727  00ED06  0E00               	movlw	0
  2728  00ED08  6FC5               	movwf	197,b	;volatile
  2729                           
  2730                           ;mcc.c: 89: PMD6 = 0x00;
  2731  00ED0A  0E00               	movlw	0
  2732  00ED0C  6FC6               	movwf	198,b	;volatile
  2733                           
  2734                           ;mcc.c: 91: PMD7 = 0x00;
  2735  00ED0E  0E00               	movlw	0
  2736  00ED10  6FC7               	movwf	199,b	;volatile
  2737                           
  2738                           ; BSR set to: 57
  2739  00ED12  0012               	return		;funcret
  2740  00ED14                     __end_of_PMD_Initialize:
  2741                           	opt stack 0
  2742                           
  2743 ;; *************** function _PIN_MANAGER_Initialize *****************
  2744 ;; Defined at:
  2745 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;Total ram usage:        0 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_SYSTEM_Initialize
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text16
  2773  00EF04                     __ptext16:
  2774                           	opt stack 0
  2775  00EF04                     _PIN_MANAGER_Initialize:
  2776                           	opt stack 29
  2777                           
  2778                           ;pin_manager.c: 62: LATA = 0x00;
  2779                           
  2780                           ; BSR set to: 57
  2781                           ;incstack = 0
  2782  00EF04  0E00               	movlw	0
  2783  00EF06  013F               	movlb	63	; () banked
  2784  00EF08  6FBA               	movwf	186,b	;volatile
  2785                           
  2786                           ;pin_manager.c: 63: LATB = 0x00;
  2787  00EF0A  0E00               	movlw	0
  2788  00EF0C  6FBB               	movwf	187,b	;volatile
  2789                           
  2790                           ;pin_manager.c: 64: LATC = 0x00;
  2791  00EF0E  0E00               	movlw	0
  2792  00EF10  6FBC               	movwf	188,b	;volatile
  2793                           
  2794                           ;pin_manager.c: 69: TRISA = 0xFC;
  2795  00EF12  0EFC               	movlw	252
  2796  00EF14  6FC2               	movwf	194,b	;volatile
  2797                           
  2798                           ;pin_manager.c: 70: TRISB = 0xEE;
  2799  00EF16  0EEE               	movlw	238
  2800  00EF18  6FC3               	movwf	195,b	;volatile
  2801                           
  2802                           ;pin_manager.c: 71: TRISC = 0xBF;
  2803  00EF1A  0EBF               	movlw	191
  2804  00EF1C  6FC4               	movwf	196,b	;volatile
  2805                           
  2806                           ;pin_manager.c: 76: ANSELC = 0x1F;
  2807  00EF1E  0E1F               	movlw	31
  2808  00EF20  013A               	movlb	58	; () banked
  2809  00EF22  6F60               	movwf	96,b	;volatile
  2810                           
  2811                           ;pin_manager.c: 77: ANSELB = 0xE6;
  2812  00EF24  0EE6               	movlw	230
  2813  00EF26  6F50               	movwf	80,b	;volatile
  2814                           
  2815                           ;pin_manager.c: 78: ANSELA = 0xCC;
  2816  00EF28  0ECC               	movlw	204
  2817  00EF2A  6F40               	movwf	64,b	;volatile
  2818                           
  2819                           ;pin_manager.c: 83: WPUE = 0x00;
  2820  00EF2C  0E00               	movlw	0
  2821  00EF2E  6F81               	movwf	129,b	;volatile
  2822                           
  2823                           ;pin_manager.c: 84: WPUB = 0x00;
  2824  00EF30  0E00               	movlw	0
  2825  00EF32  6F51               	movwf	81,b	;volatile
  2826                           
  2827                           ;pin_manager.c: 85: WPUA = 0x30;
  2828  00EF34  0E30               	movlw	48
  2829  00EF36  6F41               	movwf	65,b	;volatile
  2830                           
  2831                           ;pin_manager.c: 86: WPUC = 0x00;
  2832  00EF38  0E00               	movlw	0
  2833  00EF3A  6F61               	movwf	97,b	;volatile
  2834                           
  2835                           ;pin_manager.c: 91: ODCONA = 0x00;
  2836  00EF3C  0E00               	movlw	0
  2837  00EF3E  6F42               	movwf	66,b	;volatile
  2838                           
  2839                           ;pin_manager.c: 92: ODCONB = 0x00;
  2840  00EF40  0E00               	movlw	0
  2841  00EF42  6F52               	movwf	82,b	;volatile
  2842                           
  2843                           ;pin_manager.c: 93: ODCONC = 0x00;
  2844  00EF44  0E00               	movlw	0
  2845  00EF46  6F62               	movwf	98,b	;volatile
  2846                           
  2847                           ; BSR set to: 58
  2848                           ;pin_manager.c: 98: SLRCONA = 0xFF;
  2849  00EF48  6943               	setf	67,b	;volatile
  2850                           
  2851                           ; BSR set to: 58
  2852                           ;pin_manager.c: 99: SLRCONB = 0xFF;
  2853  00EF4A  6953               	setf	83,b	;volatile
  2854                           
  2855                           ; BSR set to: 58
  2856                           ;pin_manager.c: 100: SLRCONC = 0xFF;
  2857  00EF4C  6963               	setf	99,b	;volatile
  2858                           
  2859                           ;pin_manager.c: 109: U2RXPPS = 0x15;
  2860  00EF4E  0E15               	movlw	21
  2861  00EF50  6FEA               	movwf	234,b	;volatile
  2862                           
  2863                           ;pin_manager.c: 110: RB0PPS = 0x16;
  2864  00EF52  0E16               	movlw	22
  2865  00EF54  6F08               	movwf	8,b	;volatile
  2866                           
  2867                           ;pin_manager.c: 111: CANRXPPS = 0x0B;
  2868  00EF56  0E0B               	movlw	11
  2869  00EF58  6FED               	movwf	237,b	;volatile
  2870                           
  2871                           ;pin_manager.c: 112: RB4PPS = 0x33;
  2872  00EF5A  0E33               	movlw	51
  2873  00EF5C  6F0C               	movwf	12,b	;volatile
  2874                           
  2875                           ;pin_manager.c: 113: RC6PPS = 0x13;
  2876  00EF5E  0E13               	movlw	19
  2877  00EF60  6F16               	movwf	22,b	;volatile
  2878                           
  2879                           ;pin_manager.c: 114: U1RXPPS = 0x17;
  2880  00EF62  0E17               	movlw	23
  2881  00EF64  6FE7               	movwf	231,b	;volatile
  2882                           
  2883                           ; BSR set to: 58
  2884  00EF66  0012               	return		;funcret
  2885  00EF68                     __end_of_PIN_MANAGER_Initialize:
  2886                           	opt stack 0
  2887                           
  2888 ;; *************** function _OSCILLATOR_Initialize *****************
  2889 ;; Defined at:
  2890 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, status,2
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;Total ram usage:        0 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_SYSTEM_Initialize
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text17
  2918  00EC64                     __ptext17:
  2919                           	opt stack 0
  2920  00EC64                     _OSCILLATOR_Initialize:
  2921                           	opt stack 29
  2922                           
  2923                           ;mcc.c: 63: OSCCON1 = 0x60;
  2924                           
  2925                           ; BSR set to: 58
  2926                           ;incstack = 0
  2927  00EC64  0E60               	movlw	96
  2928  00EC66  0139               	movlb	57	; () banked
  2929  00EC68  6FD9               	movwf	217,b	;volatile
  2930                           
  2931                           ;mcc.c: 65: OSCCON3 = 0x00;
  2932  00EC6A  0E00               	movlw	0
  2933  00EC6C  6FDB               	movwf	219,b	;volatile
  2934                           
  2935                           ;mcc.c: 67: OSCEN = 0x00;
  2936  00EC6E  0E00               	movlw	0
  2937  00EC70  6FDD               	movwf	221,b	;volatile
  2938                           
  2939                           ;mcc.c: 69: OSCFRQ = 0x06;
  2940  00EC72  0E06               	movlw	6
  2941  00EC74  6FDF               	movwf	223,b	;volatile
  2942                           
  2943                           ;mcc.c: 71: OSCTUNE = 0x00;
  2944  00EC76  0E00               	movlw	0
  2945  00EC78  6FDE               	movwf	222,b	;volatile
  2946                           
  2947                           ; BSR set to: 57
  2948  00EC7A  0012               	return		;funcret
  2949  00EC7C                     __end_of_OSCILLATOR_Initialize:
  2950                           	opt stack 0
  2951                           
  2952 ;; *************** function _ECAN_Initialize *****************
  2953 ;; Defined at:
  2954 ;;		line 61 in file "mcc_generated_files/ecan.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;		None
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;		None
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      void 
  2961 ;; Registers used:
  2962 ;;		wreg, status,2, status,0
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;Total ram usage:        1 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; This function calls:
  2975 ;;		Nothing
  2976 ;; This function is called by:
  2977 ;;		_SYSTEM_Initialize
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           	psect	text18
  2982  00F098                     __ptext18:
  2983                           	opt stack 0
  2984  00F098                     _ECAN_Initialize:
  2985                           	opt stack 29
  2986                           
  2987                           ;ecan.c: 63: CANCON = 0x80;
  2988                           
  2989                           ; BSR set to: 57
  2990                           ;incstack = 0
  2991  00F098  0E80               	movlw	128
  2992  00F09A  013F               	movlb	63	; () banked
  2993  00F09C  6F8F               	movwf	143,b	;volatile
  2994  00F09E                     
  2995                           ; BSR set to: 63
  2996                           
  2997                           ; BSR set to: 63
  2998                           
  2999                           ; BSR set to: 63
  3000  00F09E  518E               	movf	142,w,b	;volatile
  3001  00F0A0  0BE0               	andlw	224
  3002  00F0A2  0A80               	xorlw	128
  3003  00F0A4  A4D8               	btfss	16344,2,c
  3004  00F0A6  D7FB               	goto	l290
  3005                           
  3006                           ; BSR set to: 63
  3007                           ;ecan.c: 69: ECANCON = 0x00;
  3008                           
  3009                           ; BSR set to: 63
  3010  00F0A8  0E00               	movlw	0
  3011  00F0AA  6F91               	movwf	145,b	;volatile
  3012                           
  3013                           ;ecan.c: 74: CIOCON = 0x00;
  3014  00F0AC  0E00               	movlw	0
  3015  00F0AE  0137               	movlb	55	; () banked
  3016  00F0B0  6F00               	movwf	0,b	;volatile
  3017                           
  3018                           ; BSR set to: 55
  3019                           ;ecan.c: 88: RXM0EIDH = 0xFF;
  3020  00F0B2  69BA               	setf	186,b	;volatile
  3021                           
  3022                           ; BSR set to: 55
  3023                           ;ecan.c: 89: RXM0EIDL = 0xFF;
  3024  00F0B4  69BB               	setf	187,b	;volatile
  3025                           
  3026                           ; BSR set to: 55
  3027                           ;ecan.c: 90: RXM0SIDH = 0xFF;
  3028  00F0B6  69B8               	setf	184,b	;volatile
  3029                           
  3030                           ;ecan.c: 91: RXM0SIDL = 0xE3;
  3031  00F0B8  0EE3               	movlw	227
  3032  00F0BA  6FB9               	movwf	185,b	;volatile
  3033                           
  3034                           ; BSR set to: 55
  3035                           ;ecan.c: 92: RXM1EIDH = 0xFF;
  3036  00F0BC  69BE               	setf	190,b	;volatile
  3037                           
  3038                           ; BSR set to: 55
  3039                           ;ecan.c: 93: RXM1EIDL = 0xFF;
  3040  00F0BE  69BF               	setf	191,b	;volatile
  3041                           
  3042                           ; BSR set to: 55
  3043                           ;ecan.c: 94: RXM1SIDH = 0xFF;
  3044  00F0C0  69BC               	setf	188,b	;volatile
  3045                           
  3046                           ;ecan.c: 95: RXM1SIDL = 0xE3;
  3047  00F0C2  0EE3               	movlw	227
  3048  00F0C4  6FBD               	movwf	189,b	;volatile
  3049                           
  3050                           ;ecan.c: 100: RXF0EIDH = 0x00;
  3051  00F0C6  0E00               	movlw	0
  3052  00F0C8  6FA2               	movwf	162,b	;volatile
  3053                           
  3054                           ;ecan.c: 101: RXF0EIDL = 0x00;
  3055  00F0CA  0E00               	movlw	0
  3056  00F0CC  6FA3               	movwf	163,b	;volatile
  3057                           
  3058                           ;ecan.c: 102: RXF0SIDH = 0x24;
  3059  00F0CE  0E24               	movlw	36
  3060  00F0D0  6FA0               	movwf	160,b	;volatile
  3061                           
  3062                           ;ecan.c: 103: RXF0SIDL = 0x60;
  3063  00F0D2  0E60               	movlw	96
  3064  00F0D4  6FA1               	movwf	161,b	;volatile
  3065                           
  3066                           ;ecan.c: 104: RXF1EIDH = 0x00;
  3067  00F0D6  0E00               	movlw	0
  3068  00F0D8  6FA6               	movwf	166,b	;volatile
  3069                           
  3070                           ;ecan.c: 105: RXF1EIDL = 0x00;
  3071  00F0DA  0E00               	movlw	0
  3072  00F0DC  6FA7               	movwf	167,b	;volatile
  3073                           
  3074                           ;ecan.c: 106: RXF1SIDH = 0x00;
  3075  00F0DE  0E00               	movlw	0
  3076  00F0E0  6FA4               	movwf	164,b	;volatile
  3077                           
  3078                           ;ecan.c: 107: RXF1SIDL = 0x00;
  3079  00F0E2  0E00               	movlw	0
  3080  00F0E4  6FA5               	movwf	165,b	;volatile
  3081                           
  3082                           ;ecan.c: 108: RXF2EIDH = 0x00;
  3083  00F0E6  0E00               	movlw	0
  3084  00F0E8  6FAA               	movwf	170,b	;volatile
  3085                           
  3086                           ;ecan.c: 109: RXF2EIDL = 0x00;
  3087  00F0EA  0E00               	movlw	0
  3088  00F0EC  6FAB               	movwf	171,b	;volatile
  3089                           
  3090                           ;ecan.c: 110: RXF2SIDH = 0x00;
  3091  00F0EE  0E00               	movlw	0
  3092  00F0F0  6FA8               	movwf	168,b	;volatile
  3093                           
  3094                           ;ecan.c: 111: RXF2SIDL = 0x00;
  3095  00F0F2  0E00               	movlw	0
  3096  00F0F4  6FA9               	movwf	169,b	;volatile
  3097                           
  3098                           ;ecan.c: 112: RXF3EIDH = 0x00;
  3099  00F0F6  0E00               	movlw	0
  3100  00F0F8  6FAE               	movwf	174,b	;volatile
  3101                           
  3102                           ;ecan.c: 113: RXF3EIDL = 0x00;
  3103  00F0FA  0E00               	movlw	0
  3104  00F0FC  6FAF               	movwf	175,b	;volatile
  3105                           
  3106                           ;ecan.c: 114: RXF3SIDH = 0x00;
  3107  00F0FE  0E00               	movlw	0
  3108  00F100  6FAC               	movwf	172,b	;volatile
  3109                           
  3110                           ;ecan.c: 115: RXF3SIDL = 0x00;
  3111  00F102  0E00               	movlw	0
  3112  00F104  6FAD               	movwf	173,b	;volatile
  3113                           
  3114                           ;ecan.c: 116: RXF4EIDH = 0x00;
  3115  00F106  0E00               	movlw	0
  3116  00F108  6FB2               	movwf	178,b	;volatile
  3117                           
  3118                           ;ecan.c: 117: RXF4EIDL = 0x00;
  3119  00F10A  0E00               	movlw	0
  3120  00F10C  6FB3               	movwf	179,b	;volatile
  3121                           
  3122                           ;ecan.c: 118: RXF4SIDH = 0x00;
  3123  00F10E  0E00               	movlw	0
  3124  00F110  6FB0               	movwf	176,b	;volatile
  3125                           
  3126                           ;ecan.c: 119: RXF4SIDL = 0x00;
  3127  00F112  0E00               	movlw	0
  3128  00F114  6FB1               	movwf	177,b	;volatile
  3129                           
  3130                           ;ecan.c: 120: RXF5EIDH = 0x00;
  3131  00F116  0E00               	movlw	0
  3132  00F118  6FB6               	movwf	182,b	;volatile
  3133                           
  3134                           ;ecan.c: 121: RXF5EIDL = 0x00;
  3135  00F11A  0E00               	movlw	0
  3136  00F11C  6FB7               	movwf	183,b	;volatile
  3137                           
  3138                           ;ecan.c: 122: RXF5SIDH = 0x00;
  3139  00F11E  0E00               	movlw	0
  3140  00F120  6FB4               	movwf	180,b	;volatile
  3141                           
  3142                           ;ecan.c: 123: RXF5SIDL = 0x00;
  3143  00F122  0E00               	movlw	0
  3144  00F124  6FB5               	movwf	181,b	;volatile
  3145                           
  3146                           ;ecan.c: 138: BRGCON1 = 0x0F;
  3147  00F126  0E0F               	movlw	15
  3148  00F128  6F03               	movwf	3,b	;volatile
  3149                           
  3150                           ;ecan.c: 139: BRGCON2 = 0x98;
  3151  00F12A  0E98               	movlw	152
  3152  00F12C  6F04               	movwf	4,b	;volatile
  3153                           
  3154                           ;ecan.c: 140: BRGCON3 = 0x01;
  3155  00F12E  0E01               	movlw	1
  3156  00F130  6F05               	movwf	5,b	;volatile
  3157                           
  3158                           ;ecan.c: 142: CANCON = 0x00;
  3159  00F132  0E00               	movlw	0
  3160  00F134  013F               	movlb	63	; () banked
  3161  00F136  6F8F               	movwf	143,b	;volatile
  3162  00F138                     
  3163                           ; BSR set to: 63
  3164                           
  3165                           ; BSR set to: 63
  3166  00F138  006F FE38  F001    	movff	16270,??_ECAN_Initialize	;volatile
  3167  00F13E  0EE0               	movlw	224
  3168  00F140  1601               	andwf	??_ECAN_Initialize,f,c
  3169  00F142  B4D8               	btfsc	16344,2,c
  3170  00F144  0012               	return	
  3171  00F146  D7F8               	goto	l293
  3172  00F148                     __end_of_ECAN_Initialize:
  3173                           	opt stack 0
  3174                           
  3175 ;; *************** function _CAN_transmit *****************
  3176 ;; Defined at:
  3177 ;;		line 160 in file "mcc_generated_files/ecan.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  tempCanMsg      2   18[COMRAM] PTR struct .
  3180 ;;		 -> main@can_msg_tx(14), 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  tempSIDL        1   24[COMRAM] unsigned char 
  3183 ;;  tempSIDH        1   23[COMRAM] unsigned char 
  3184 ;;  tempEIDL        1   22[COMRAM] unsigned char 
  3185 ;;  tempEIDH        1   21[COMRAM] unsigned char 
  3186 ;;  returnValue     1   20[COMRAM] unsigned char 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      unsigned char 
  3189 ;; Registers used:
  3190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;Total ram usage:        7 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    1
  3203 ;; This function calls:
  3204 ;;		_convertCANid2Reg
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text19
  3211  00FB0E                     __ptext19:
  3212                           	opt stack 0
  3213  00FB0E                     _CAN_transmit:
  3214                           	opt stack 29
  3215                           
  3216                           ;ecan.c: 161: uint8_t tempEIDH = 0;
  3217                           
  3218                           ;incstack = 0
  3219  00FB0E  0E00               	movlw	0
  3220  00FB10  6E16               	movwf	CAN_transmit@tempEIDH,c
  3221                           
  3222                           ;ecan.c: 162: uint8_t tempEIDL = 0;
  3223  00FB12  0E00               	movlw	0
  3224  00FB14  6E17               	movwf	CAN_transmit@tempEIDL,c
  3225                           
  3226                           ;ecan.c: 163: uint8_t tempSIDH = 0;
  3227  00FB16  0E00               	movlw	0
  3228  00FB18  6E18               	movwf	CAN_transmit@tempSIDH,c
  3229                           
  3230                           ;ecan.c: 164: uint8_t tempSIDL = 0;
  3231  00FB1A  0E00               	movlw	0
  3232  00FB1C  6E19               	movwf	CAN_transmit@tempSIDL,c
  3233                           
  3234                           ;ecan.c: 166: uint8_t returnValue = 0;
  3235  00FB1E  0E00               	movlw	0
  3236  00FB20  6E15               	movwf	CAN_transmit@returnValue,c
  3237                           
  3238                           ;ecan.c: 168: if (TXB0CONbits.TXREQ != 1)
  3239  00FB22  0137               	movlb	55	; () banked
  3240  00FB24  B7E0               	btfsc	224,3,b	;volatile
  3241  00FB26  D083               	goto	l304
  3242                           
  3243                           ; BSR set to: 55
  3244                           ;ecan.c: 169: {
  3245                           ;ecan.c: 170: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  3246  00FB28  EE20 F001          	lfsr	2,1
  3247  00FB2C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3248  00FB2E  26D9               	addwf	16345,f,c
  3249  00FB30  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3250  00FB32  22DA               	addwfc	16346,f,c
  3251  00FB34  006F FF78  F001    	movff	16350,convertCANid2Reg@tempPassedInID
  3252  00FB3A  006F FF78  F002    	movff	16350,convertCANid2Reg@tempPassedInID+1
  3253  00FB40  006F FF78  F003    	movff	16350,convertCANid2Reg@tempPassedInID+2
  3254  00FB46  006F FF78  F004    	movff	16350,convertCANid2Reg@tempPassedInID+3
  3255  00FB4C  0060  F04F  FFD9   	movff	CAN_transmit@tempCanMsg,16345
  3256  00FB52  0060  F053  FFDA   	movff	CAN_transmit@tempCanMsg+1,16346
  3257  00FB58  50DF               	movf	16351,w,c
  3258  00FB5A  6E05               	movwf	convertCANid2Reg@canIdType,c
  3259  00FB5C  0E16               	movlw	low CAN_transmit@tempEIDH
  3260  00FB5E  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  3261  00FB60  0E00               	movlw	high CAN_transmit@tempEIDH
  3262  00FB62  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  3263  00FB64  0E17               	movlw	low CAN_transmit@tempEIDL
  3264  00FB66  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  3265  00FB68  0E00               	movlw	high CAN_transmit@tempEIDL
  3266  00FB6A  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  3267  00FB6C  0E18               	movlw	low CAN_transmit@tempSIDH
  3268  00FB6E  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  3269  00FB70  0E00               	movlw	high CAN_transmit@tempSIDH
  3270  00FB72  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  3271  00FB74  0E19               	movlw	low CAN_transmit@tempSIDL
  3272  00FB76  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  3273  00FB78  0E00               	movlw	high CAN_transmit@tempSIDL
  3274  00FB7A  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  3275  00FB7C  EC20  F07B         	call	_convertCANid2Reg	;wreg free
  3276                           
  3277                           ;ecan.c: 172: TXB0EIDH = tempEIDH;
  3278  00FB80  0060  F05B  F7E3   	movff	CAN_transmit@tempEIDH,14307	;volatile
  3279                           
  3280                           ;ecan.c: 173: TXB0EIDL = tempEIDL;
  3281  00FB86  0060  F05F  F7E4   	movff	CAN_transmit@tempEIDL,14308	;volatile
  3282                           
  3283                           ;ecan.c: 174: TXB0SIDH = tempSIDH;
  3284  00FB8C  0060  F063  F7E1   	movff	CAN_transmit@tempSIDH,14305	;volatile
  3285                           
  3286                           ;ecan.c: 175: TXB0SIDL = tempSIDL;
  3287  00FB92  0060  F067  F7E2   	movff	CAN_transmit@tempSIDL,14306	;volatile
  3288                           
  3289                           ;ecan.c: 176: TXB0DLC = tempCanMsg->frame.dlc;
  3290  00FB98  EE20 F005          	lfsr	2,5
  3291  00FB9C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3292  00FB9E  26D9               	addwf	16345,f,c
  3293  00FBA0  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3294  00FBA2  22DA               	addwfc	16346,f,c
  3295  00FBA4  50DF               	movf	16351,w,c
  3296  00FBA6  0137               	movlb	55	; () banked
  3297  00FBA8  6FE5               	movwf	229,b	;volatile
  3298                           
  3299                           ; BSR set to: 55
  3300                           ;ecan.c: 177: TXB0D0 = tempCanMsg->frame.data0;
  3301  00FBAA  EE20 F006          	lfsr	2,6
  3302  00FBAE  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3303  00FBB0  26D9               	addwf	16345,f,c
  3304  00FBB2  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3305  00FBB4  22DA               	addwfc	16346,f,c
  3306  00FBB6  50DF               	movf	16351,w,c
  3307  00FBB8  6FE6               	movwf	230,b	;volatile
  3308                           
  3309                           ; BSR set to: 55
  3310                           ;ecan.c: 178: TXB0D1 = tempCanMsg->frame.data1;
  3311  00FBBA  EE20 F007          	lfsr	2,7
  3312  00FBBE  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3313  00FBC0  26D9               	addwf	16345,f,c
  3314  00FBC2  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3315  00FBC4  22DA               	addwfc	16346,f,c
  3316  00FBC6  50DF               	movf	16351,w,c
  3317  00FBC8  6FE7               	movwf	231,b	;volatile
  3318                           
  3319                           ; BSR set to: 55
  3320                           ;ecan.c: 179: TXB0D2 = tempCanMsg->frame.data2;
  3321  00FBCA  EE20 F008          	lfsr	2,8
  3322  00FBCE  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3323  00FBD0  26D9               	addwf	16345,f,c
  3324  00FBD2  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3325  00FBD4  22DA               	addwfc	16346,f,c
  3326  00FBD6  50DF               	movf	16351,w,c
  3327  00FBD8  6FE8               	movwf	232,b	;volatile
  3328                           
  3329                           ; BSR set to: 55
  3330                           ;ecan.c: 180: TXB0D3 = tempCanMsg->frame.data3;
  3331  00FBDA  EE20 F009          	lfsr	2,9
  3332  00FBDE  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3333  00FBE0  26D9               	addwf	16345,f,c
  3334  00FBE2  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3335  00FBE4  22DA               	addwfc	16346,f,c
  3336  00FBE6  50DF               	movf	16351,w,c
  3337  00FBE8  6FE9               	movwf	233,b	;volatile
  3338                           
  3339                           ; BSR set to: 55
  3340                           ;ecan.c: 181: TXB0D4 = tempCanMsg->frame.data4;
  3341  00FBEA  EE20 F00A          	lfsr	2,10
  3342  00FBEE  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3343  00FBF0  26D9               	addwf	16345,f,c
  3344  00FBF2  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3345  00FBF4  22DA               	addwfc	16346,f,c
  3346  00FBF6  50DF               	movf	16351,w,c
  3347  00FBF8  6FEA               	movwf	234,b	;volatile
  3348                           
  3349                           ; BSR set to: 55
  3350                           ;ecan.c: 182: TXB0D5 = tempCanMsg->frame.data5;
  3351  00FBFA  EE20 F00B          	lfsr	2,11
  3352  00FBFE  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3353  00FC00  26D9               	addwf	16345,f,c
  3354  00FC02  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3355  00FC04  22DA               	addwfc	16346,f,c
  3356  00FC06  50DF               	movf	16351,w,c
  3357  00FC08  6FEB               	movwf	235,b	;volatile
  3358                           
  3359                           ; BSR set to: 55
  3360                           ;ecan.c: 183: TXB0D6 = tempCanMsg->frame.data6;
  3361  00FC0A  EE20 F00C          	lfsr	2,12
  3362  00FC0E  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3363  00FC10  26D9               	addwf	16345,f,c
  3364  00FC12  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3365  00FC14  22DA               	addwfc	16346,f,c
  3366  00FC16  50DF               	movf	16351,w,c
  3367  00FC18  6FEC               	movwf	236,b	;volatile
  3368                           
  3369                           ; BSR set to: 55
  3370                           ;ecan.c: 184: TXB0D7 = tempCanMsg->frame.data7;
  3371  00FC1A  EE20 F00D          	lfsr	2,13
  3372  00FC1E  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3373  00FC20  26D9               	addwf	16345,f,c
  3374  00FC22  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3375  00FC24  22DA               	addwfc	16346,f,c
  3376  00FC26  50DF               	movf	16351,w,c
  3377  00FC28  6FED               	movwf	237,b	;volatile
  3378                           
  3379                           ; BSR set to: 55
  3380                           ;ecan.c: 186: TXB0CONbits.TXREQ = 1;
  3381  00FC2A  87E0               	bsf	224,3,b	;volatile
  3382  00FC2C  D109               	goto	l2172
  3383  00FC2E                     l304:
  3384                           
  3385                           ; BSR set to: 55
  3386                           ;ecan.c: 190: else if (TXB1CONbits.TXREQ != 1)
  3387  00FC2E  B7D0               	btfsc	208,3,b	;volatile
  3388  00FC30  D083               	goto	l306
  3389                           
  3390                           ; BSR set to: 55
  3391                           ;ecan.c: 191: {
  3392                           ;ecan.c: 193: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  3393  00FC32  EE20 F001          	lfsr	2,1
  3394  00FC36  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3395  00FC38  26D9               	addwf	16345,f,c
  3396  00FC3A  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3397  00FC3C  22DA               	addwfc	16346,f,c
  3398  00FC3E  006F FF78  F001    	movff	16350,convertCANid2Reg@tempPassedInID
  3399  00FC44  006F FF78  F002    	movff	16350,convertCANid2Reg@tempPassedInID+1
  3400  00FC4A  006F FF78  F003    	movff	16350,convertCANid2Reg@tempPassedInID+2
  3401  00FC50  006F FF78  F004    	movff	16350,convertCANid2Reg@tempPassedInID+3
  3402  00FC56  0060  F04F  FFD9   	movff	CAN_transmit@tempCanMsg,16345
  3403  00FC5C  0060  F053  FFDA   	movff	CAN_transmit@tempCanMsg+1,16346
  3404  00FC62  50DF               	movf	16351,w,c
  3405  00FC64  6E05               	movwf	convertCANid2Reg@canIdType,c
  3406  00FC66  0E16               	movlw	low CAN_transmit@tempEIDH
  3407  00FC68  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  3408  00FC6A  0E00               	movlw	high CAN_transmit@tempEIDH
  3409  00FC6C  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  3410  00FC6E  0E17               	movlw	low CAN_transmit@tempEIDL
  3411  00FC70  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  3412  00FC72  0E00               	movlw	high CAN_transmit@tempEIDL
  3413  00FC74  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  3414  00FC76  0E18               	movlw	low CAN_transmit@tempSIDH
  3415  00FC78  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  3416  00FC7A  0E00               	movlw	high CAN_transmit@tempSIDH
  3417  00FC7C  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  3418  00FC7E  0E19               	movlw	low CAN_transmit@tempSIDL
  3419  00FC80  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  3420  00FC82  0E00               	movlw	high CAN_transmit@tempSIDL
  3421  00FC84  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  3422  00FC86  EC20  F07B         	call	_convertCANid2Reg	;wreg free
  3423                           
  3424                           ;ecan.c: 195: TXB1EIDH = tempEIDH;
  3425  00FC8A  0060  F05B  F7D3   	movff	CAN_transmit@tempEIDH,14291	;volatile
  3426                           
  3427                           ;ecan.c: 196: TXB1EIDL = tempEIDL;
  3428  00FC90  0060  F05F  F7D4   	movff	CAN_transmit@tempEIDL,14292	;volatile
  3429                           
  3430                           ;ecan.c: 197: TXB1SIDH = tempSIDH;
  3431  00FC96  0060  F063  F7D1   	movff	CAN_transmit@tempSIDH,14289	;volatile
  3432                           
  3433                           ;ecan.c: 198: TXB1SIDL = tempSIDL;
  3434  00FC9C  0060  F067  F7D2   	movff	CAN_transmit@tempSIDL,14290	;volatile
  3435                           
  3436                           ;ecan.c: 199: TXB1DLC = tempCanMsg->frame.dlc;
  3437  00FCA2  EE20 F005          	lfsr	2,5
  3438  00FCA6  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3439  00FCA8  26D9               	addwf	16345,f,c
  3440  00FCAA  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3441  00FCAC  22DA               	addwfc	16346,f,c
  3442  00FCAE  50DF               	movf	16351,w,c
  3443  00FCB0  0137               	movlb	55	; () banked
  3444  00FCB2  6FD5               	movwf	213,b	;volatile
  3445                           
  3446                           ; BSR set to: 55
  3447                           ;ecan.c: 200: TXB1D0 = tempCanMsg->frame.data0;
  3448  00FCB4  EE20 F006          	lfsr	2,6
  3449  00FCB8  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3450  00FCBA  26D9               	addwf	16345,f,c
  3451  00FCBC  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3452  00FCBE  22DA               	addwfc	16346,f,c
  3453  00FCC0  50DF               	movf	16351,w,c
  3454  00FCC2  6FD6               	movwf	214,b	;volatile
  3455                           
  3456                           ; BSR set to: 55
  3457                           ;ecan.c: 201: TXB1D1 = tempCanMsg->frame.data1;
  3458  00FCC4  EE20 F007          	lfsr	2,7
  3459  00FCC8  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3460  00FCCA  26D9               	addwf	16345,f,c
  3461  00FCCC  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3462  00FCCE  22DA               	addwfc	16346,f,c
  3463  00FCD0  50DF               	movf	16351,w,c
  3464  00FCD2  6FD7               	movwf	215,b	;volatile
  3465                           
  3466                           ; BSR set to: 55
  3467                           ;ecan.c: 202: TXB1D2 = tempCanMsg->frame.data2;
  3468  00FCD4  EE20 F008          	lfsr	2,8
  3469  00FCD8  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3470  00FCDA  26D9               	addwf	16345,f,c
  3471  00FCDC  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3472  00FCDE  22DA               	addwfc	16346,f,c
  3473  00FCE0  50DF               	movf	16351,w,c
  3474  00FCE2  6FD8               	movwf	216,b	;volatile
  3475                           
  3476                           ; BSR set to: 55
  3477                           ;ecan.c: 203: TXB1D3 = tempCanMsg->frame.data3;
  3478  00FCE4  EE20 F009          	lfsr	2,9
  3479  00FCE8  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3480  00FCEA  26D9               	addwf	16345,f,c
  3481  00FCEC  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3482  00FCEE  22DA               	addwfc	16346,f,c
  3483  00FCF0  50DF               	movf	16351,w,c
  3484  00FCF2  6FD9               	movwf	217,b	;volatile
  3485                           
  3486                           ; BSR set to: 55
  3487                           ;ecan.c: 204: TXB1D4 = tempCanMsg->frame.data4;
  3488  00FCF4  EE20 F00A          	lfsr	2,10
  3489  00FCF8  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3490  00FCFA  26D9               	addwf	16345,f,c
  3491  00FCFC  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3492  00FCFE  22DA               	addwfc	16346,f,c
  3493  00FD00  50DF               	movf	16351,w,c
  3494  00FD02  6FDA               	movwf	218,b	;volatile
  3495                           
  3496                           ; BSR set to: 55
  3497                           ;ecan.c: 205: TXB1D5 = tempCanMsg->frame.data5;
  3498  00FD04  EE20 F00B          	lfsr	2,11
  3499  00FD08  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3500  00FD0A  26D9               	addwf	16345,f,c
  3501  00FD0C  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3502  00FD0E  22DA               	addwfc	16346,f,c
  3503  00FD10  50DF               	movf	16351,w,c
  3504  00FD12  6FDB               	movwf	219,b	;volatile
  3505                           
  3506                           ; BSR set to: 55
  3507                           ;ecan.c: 206: TXB1D6 = tempCanMsg->frame.data6;
  3508  00FD14  EE20 F00C          	lfsr	2,12
  3509  00FD18  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3510  00FD1A  26D9               	addwf	16345,f,c
  3511  00FD1C  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3512  00FD1E  22DA               	addwfc	16346,f,c
  3513  00FD20  50DF               	movf	16351,w,c
  3514  00FD22  6FDC               	movwf	220,b	;volatile
  3515                           
  3516                           ; BSR set to: 55
  3517                           ;ecan.c: 207: TXB1D7 = tempCanMsg->frame.data7;
  3518  00FD24  EE20 F00D          	lfsr	2,13
  3519  00FD28  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3520  00FD2A  26D9               	addwf	16345,f,c
  3521  00FD2C  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3522  00FD2E  22DA               	addwfc	16346,f,c
  3523  00FD30  50DF               	movf	16351,w,c
  3524  00FD32  6FDD               	movwf	221,b	;volatile
  3525                           
  3526                           ; BSR set to: 55
  3527                           ;ecan.c: 209: TXB1CONbits.TXREQ = 1;
  3528  00FD34  87D0               	bsf	208,3,b	;volatile
  3529  00FD36  D084               	goto	l2172
  3530  00FD38                     l306:
  3531                           
  3532                           ; BSR set to: 55
  3533                           ;ecan.c: 212: else if (TXB2CONbits.TXREQ != 1)
  3534  00FD38  B7C0               	btfsc	192,3,b	;volatile
  3535  00FD3A  D084               	goto	l308
  3536                           
  3537                           ; BSR set to: 55
  3538                           ;ecan.c: 213: {
  3539                           ;ecan.c: 215: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  3540  00FD3C  EE20 F001          	lfsr	2,1
  3541  00FD40  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3542  00FD42  26D9               	addwf	16345,f,c
  3543  00FD44  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3544  00FD46  22DA               	addwfc	16346,f,c
  3545  00FD48  006F FF78  F001    	movff	16350,convertCANid2Reg@tempPassedInID
  3546  00FD4E  006F FF78  F002    	movff	16350,convertCANid2Reg@tempPassedInID+1
  3547  00FD54  006F FF78  F003    	movff	16350,convertCANid2Reg@tempPassedInID+2
  3548  00FD5A  006F FF78  F004    	movff	16350,convertCANid2Reg@tempPassedInID+3
  3549  00FD60  0060  F04F  FFD9   	movff	CAN_transmit@tempCanMsg,16345
  3550  00FD66  0060  F053  FFDA   	movff	CAN_transmit@tempCanMsg+1,16346
  3551  00FD6C  50DF               	movf	16351,w,c
  3552  00FD6E  6E05               	movwf	convertCANid2Reg@canIdType,c
  3553  00FD70  0E16               	movlw	low CAN_transmit@tempEIDH
  3554  00FD72  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  3555  00FD74  0E00               	movlw	high CAN_transmit@tempEIDH
  3556  00FD76  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  3557  00FD78  0E17               	movlw	low CAN_transmit@tempEIDL
  3558  00FD7A  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  3559  00FD7C  0E00               	movlw	high CAN_transmit@tempEIDL
  3560  00FD7E  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  3561  00FD80  0E18               	movlw	low CAN_transmit@tempSIDH
  3562  00FD82  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  3563  00FD84  0E00               	movlw	high CAN_transmit@tempSIDH
  3564  00FD86  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  3565  00FD88  0E19               	movlw	low CAN_transmit@tempSIDL
  3566  00FD8A  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  3567  00FD8C  0E00               	movlw	high CAN_transmit@tempSIDL
  3568  00FD8E  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  3569  00FD90  EC20  F07B         	call	_convertCANid2Reg	;wreg free
  3570                           
  3571                           ;ecan.c: 217: TXB2EIDH = tempEIDH;
  3572  00FD94  0060  F05B  F7C3   	movff	CAN_transmit@tempEIDH,14275	;volatile
  3573                           
  3574                           ;ecan.c: 218: TXB2EIDL = tempEIDL;
  3575  00FD9A  0060  F05F  F7C4   	movff	CAN_transmit@tempEIDL,14276	;volatile
  3576                           
  3577                           ;ecan.c: 219: TXB2SIDH = tempSIDH;
  3578  00FDA0  0060  F063  F7C1   	movff	CAN_transmit@tempSIDH,14273	;volatile
  3579                           
  3580                           ;ecan.c: 220: TXB2SIDL = tempSIDL;
  3581  00FDA6  0060  F067  F7C2   	movff	CAN_transmit@tempSIDL,14274	;volatile
  3582                           
  3583                           ;ecan.c: 221: TXB2DLC = tempCanMsg->frame.dlc;
  3584  00FDAC  EE20 F005          	lfsr	2,5
  3585  00FDB0  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3586  00FDB2  26D9               	addwf	16345,f,c
  3587  00FDB4  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3588  00FDB6  22DA               	addwfc	16346,f,c
  3589  00FDB8  50DF               	movf	16351,w,c
  3590  00FDBA  0137               	movlb	55	; () banked
  3591  00FDBC  6FC5               	movwf	197,b	;volatile
  3592                           
  3593                           ; BSR set to: 55
  3594                           ;ecan.c: 222: TXB2D0 = tempCanMsg->frame.data0;
  3595  00FDBE  EE20 F006          	lfsr	2,6
  3596  00FDC2  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3597  00FDC4  26D9               	addwf	16345,f,c
  3598  00FDC6  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3599  00FDC8  22DA               	addwfc	16346,f,c
  3600  00FDCA  50DF               	movf	16351,w,c
  3601  00FDCC  6FC6               	movwf	198,b	;volatile
  3602                           
  3603                           ; BSR set to: 55
  3604                           ;ecan.c: 223: TXB2D1 = tempCanMsg->frame.data1;
  3605  00FDCE  EE20 F007          	lfsr	2,7
  3606  00FDD2  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3607  00FDD4  26D9               	addwf	16345,f,c
  3608  00FDD6  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3609  00FDD8  22DA               	addwfc	16346,f,c
  3610  00FDDA  50DF               	movf	16351,w,c
  3611  00FDDC  6FC7               	movwf	199,b	;volatile
  3612                           
  3613                           ; BSR set to: 55
  3614                           ;ecan.c: 224: TXB2D2 = tempCanMsg->frame.data2;
  3615  00FDDE  EE20 F008          	lfsr	2,8
  3616  00FDE2  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3617  00FDE4  26D9               	addwf	16345,f,c
  3618  00FDE6  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3619  00FDE8  22DA               	addwfc	16346,f,c
  3620  00FDEA  50DF               	movf	16351,w,c
  3621  00FDEC  6FC8               	movwf	200,b	;volatile
  3622                           
  3623                           ; BSR set to: 55
  3624                           ;ecan.c: 225: TXB2D3 = tempCanMsg->frame.data3;
  3625  00FDEE  EE20 F009          	lfsr	2,9
  3626  00FDF2  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3627  00FDF4  26D9               	addwf	16345,f,c
  3628  00FDF6  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3629  00FDF8  22DA               	addwfc	16346,f,c
  3630  00FDFA  50DF               	movf	16351,w,c
  3631  00FDFC  6FC9               	movwf	201,b	;volatile
  3632                           
  3633                           ; BSR set to: 55
  3634                           ;ecan.c: 226: TXB2D4 = tempCanMsg->frame.data4;
  3635  00FDFE  EE20 F00A          	lfsr	2,10
  3636  00FE02  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3637  00FE04  26D9               	addwf	16345,f,c
  3638  00FE06  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3639  00FE08  22DA               	addwfc	16346,f,c
  3640  00FE0A  50DF               	movf	16351,w,c
  3641  00FE0C  6FCA               	movwf	202,b	;volatile
  3642                           
  3643                           ; BSR set to: 55
  3644                           ;ecan.c: 227: TXB2D5 = tempCanMsg->frame.data5;
  3645  00FE0E  EE20 F00B          	lfsr	2,11
  3646  00FE12  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3647  00FE14  26D9               	addwf	16345,f,c
  3648  00FE16  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3649  00FE18  22DA               	addwfc	16346,f,c
  3650  00FE1A  50DF               	movf	16351,w,c
  3651  00FE1C  6FCB               	movwf	203,b	;volatile
  3652                           
  3653                           ; BSR set to: 55
  3654                           ;ecan.c: 228: TXB2D6 = tempCanMsg->frame.data6;
  3655  00FE1E  EE20 F00C          	lfsr	2,12
  3656  00FE22  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3657  00FE24  26D9               	addwf	16345,f,c
  3658  00FE26  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3659  00FE28  22DA               	addwfc	16346,f,c
  3660  00FE2A  50DF               	movf	16351,w,c
  3661  00FE2C  6FCC               	movwf	204,b	;volatile
  3662                           
  3663                           ; BSR set to: 55
  3664                           ;ecan.c: 229: TXB2D7 = tempCanMsg->frame.data7;
  3665  00FE2E  EE20 F00D          	lfsr	2,13
  3666  00FE32  5013               	movf	CAN_transmit@tempCanMsg,w,c
  3667  00FE34  26D9               	addwf	16345,f,c
  3668  00FE36  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  3669  00FE38  22DA               	addwfc	16346,f,c
  3670  00FE3A  50DF               	movf	16351,w,c
  3671  00FE3C  6FCD               	movwf	205,b	;volatile
  3672                           
  3673                           ; BSR set to: 55
  3674                           ;ecan.c: 231: TXB2CONbits.TXREQ = 1;
  3675  00FE3E  87C0               	bsf	192,3,b	;volatile
  3676  00FE40                     l2172:
  3677                           
  3678                           ; BSR set to: 55
  3679                           ;ecan.c: 232: returnValue = 1;
  3680  00FE40  0E01               	movlw	1
  3681  00FE42  6E15               	movwf	CAN_transmit@returnValue,c
  3682  00FE44                     l308:
  3683                           
  3684                           ; BSR set to: 55
  3685                           ;ecan.c: 233: }
  3686                           ;ecan.c: 235: return (returnValue);
  3687                           
  3688                           ; BSR set to: 55
  3689                           
  3690                           ; BSR set to: 55
  3691                           
  3692                           ; BSR set to: 55
  3693  00FE44  5015               	movf	CAN_transmit@returnValue,w,c
  3694  00FE46  0012               	return	
  3695  00FE48                     __end_of_CAN_transmit:
  3696                           	opt stack 0
  3697                           
  3698 ;; *************** function _convertCANid2Reg *****************
  3699 ;; Defined at:
  3700 ;;		line 397 in file "mcc_generated_files/ecan.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  tempPassedIn    4    0[COMRAM] unsigned long 
  3703 ;;  canIdType       1    4[COMRAM] unsigned char 
  3704 ;;  passedInEIDH    2    5[COMRAM] PTR unsigned char 
  3705 ;;		 -> CAN_transmit@tempEIDH(1), 
  3706 ;;  passedInEIDL    2    7[COMRAM] PTR unsigned char 
  3707 ;;		 -> CAN_transmit@tempEIDL(1), 
  3708 ;;  passedInSIDH    2    9[COMRAM] PTR unsigned char 
  3709 ;;		 -> CAN_transmit@tempSIDH(1), 
  3710 ;;  passedInSIDL    2   11[COMRAM] PTR unsigned char 
  3711 ;;		 -> CAN_transmit@tempSIDL(1), 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;  wipSIDL         1   17[COMRAM] unsigned char 
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      void 
  3716 ;; Registers used:
  3717 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3723 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3725 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;Total ram usage:       18 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_CAN_transmit
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text20
  3737  00F640                     __ptext20:
  3738                           	opt stack 0
  3739  00F640                     _convertCANid2Reg:
  3740                           	opt stack 29
  3741                           
  3742                           ;ecan.c: 399: uint8_t wipSIDL = 0;
  3743                           
  3744                           ; BSR set to: 55
  3745                           ;incstack = 0
  3746  00F640  0E00               	movlw	0
  3747  00F642  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  3748                           
  3749                           ;ecan.c: 401: if (canIdType == 2) {
  3750  00F644  0E02               	movlw	2
  3751  00F646  1805               	xorwf	convertCANid2Reg@canIdType,w,c
  3752  00F648  A4D8               	btfss	16344,2,c
  3753  00F64A  D0B5               	goto	l345
  3754                           
  3755                           ;ecan.c: 404: *passedInEIDL = 0xFF & tempPassedInID;
  3756  00F64C  0060  F023  FFD9   	movff	convertCANid2Reg@passedInEIDL,16345
  3757  00F652  0060  F027  FFDA   	movff	convertCANid2Reg@passedInEIDL+1,16346
  3758  00F658  0060  F007  FFDF   	movff	convertCANid2Reg@tempPassedInID,16351
  3759                           
  3760                           ;ecan.c: 405: tempPassedInID = tempPassedInID >> 8;
  3761  00F65E  0060  F004  F00E   	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3762  00F664  0060  F008  F00F   	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3763  00F66A  0060  F00C  F010   	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3764  00F670  0060  F010  F011   	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3765  00F676  0060  F03C  F00E   	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  3766  00F67C  0060  F040  F00F   	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  3767  00F682  0060  F044  F010   	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  3768  00F688  6A11               	clrf	??_convertCANid2Reg+3,c
  3769  00F68A  0060  F038  F001   	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3770  00F690  0060  F03C  F002   	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3771  00F696  0060  F040  F003   	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3772  00F69C  0060  F044  F004   	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3773                           
  3774                           ;ecan.c: 408: *passedInEIDH = 0xFF & tempPassedInID;
  3775  00F6A2  0060  F01B  FFD9   	movff	convertCANid2Reg@passedInEIDH,16345
  3776  00F6A8  0060  F01F  FFDA   	movff	convertCANid2Reg@passedInEIDH+1,16346
  3777  00F6AE  0060  F007  FFDF   	movff	convertCANid2Reg@tempPassedInID,16351
  3778                           
  3779                           ;ecan.c: 409: tempPassedInID = tempPassedInID >> 8;
  3780  00F6B4  0060  F004  F00E   	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3781  00F6BA  0060  F008  F00F   	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3782  00F6C0  0060  F00C  F010   	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3783  00F6C6  0060  F010  F011   	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3784  00F6CC  0060  F03C  F00E   	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  3785  00F6D2  0060  F040  F00F   	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  3786  00F6D8  0060  F044  F010   	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  3787  00F6DE  6A11               	clrf	??_convertCANid2Reg+3,c
  3788  00F6E0  0060  F038  F001   	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3789  00F6E6  0060  F03C  F002   	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3790  00F6EC  0060  F040  F003   	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3791  00F6F2  0060  F044  F004   	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3792                           
  3793                           ;ecan.c: 413: wipSIDL = 0x03 & tempPassedInID;
  3794  00F6F8  5001               	movf	convertCANid2Reg@tempPassedInID,w,c
  3795  00F6FA  0B03               	andlw	3
  3796  00F6FC  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  3797                           
  3798                           ;ecan.c: 414: tempPassedInID = tempPassedInID << 3;
  3799  00F6FE  0060  F004  F00E   	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3800  00F704  0060  F008  F00F   	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3801  00F70A  0060  F00C  F010   	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3802  00F710  0060  F010  F011   	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3803  00F716  0E03               	movlw	3
  3804  00F718                     u785:
  3805  00F718  90D8               	bcf	16344,0,c
  3806  00F71A  360E               	rlcf	??_convertCANid2Reg,f,c
  3807  00F71C  360F               	rlcf	??_convertCANid2Reg+1,f,c
  3808  00F71E  3610               	rlcf	??_convertCANid2Reg+2,f,c
  3809  00F720  3611               	rlcf	??_convertCANid2Reg+3,f,c
  3810  00F722  2EE8               	decfsz	16360,f,c
  3811  00F724  D7F9               	goto	u785
  3812  00F726  0060  F038  F001   	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3813  00F72C  0060  F03C  F002   	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3814  00F732  0060  F040  F003   	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3815  00F738  0060  F044  F004   	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3816                           
  3817                           ;ecan.c: 415: wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  3818  00F73E  5001               	movf	convertCANid2Reg@tempPassedInID,w,c
  3819  00F740  0BE0               	andlw	224
  3820  00F742  2412               	addwf	convertCANid2Reg@wipSIDL,w,c
  3821  00F744  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  3822                           
  3823                           ;ecan.c: 416: wipSIDL = (uint8_t)(wipSIDL + 0x08);
  3824  00F746  5012               	movf	convertCANid2Reg@wipSIDL,w,c
  3825  00F748  0F08               	addlw	8
  3826  00F74A  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  3827                           
  3828                           ;ecan.c: 417: *passedInSIDL = (uint8_t)(0xEB & wipSIDL);
  3829  00F74C  5012               	movf	convertCANid2Reg@wipSIDL,w,c
  3830  00F74E  0BEB               	andlw	235
  3831  00F750  0060  F033  FFD9   	movff	convertCANid2Reg@passedInSIDL,16345
  3832  00F756  0060  F037  FFDA   	movff	convertCANid2Reg@passedInSIDL+1,16346
  3833  00F75C  6EDF               	movwf	16351,c
  3834                           
  3835                           ;ecan.c: 420: tempPassedInID = tempPassedInID >> 8;
  3836  00F75E  0060  F004  F00E   	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3837  00F764  0060  F008  F00F   	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3838  00F76A  0060  F00C  F010   	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3839  00F770  0060  F010  F011   	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3840  00F776  0060  F03C  F00E   	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  3841  00F77C  0060  F040  F00F   	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  3842  00F782  0060  F044  F010   	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  3843  00F788  6A11               	clrf	??_convertCANid2Reg+3,c
  3844  00F78A  0060  F038  F001   	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3845  00F790  0060  F03C  F002   	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3846  00F796  0060  F040  F003   	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3847  00F79C  0060  F044  F004   	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3848                           
  3849                           ;ecan.c: 421: *passedInSIDH = 0xFF & tempPassedInID;
  3850  00F7A2  0060  F02B  FFD9   	movff	convertCANid2Reg@passedInSIDH,16345
  3851  00F7A8  0060  F02F  FFDA   	movff	convertCANid2Reg@passedInSIDH+1,16346
  3852  00F7AE  0060  F007  FFDF   	movff	convertCANid2Reg@tempPassedInID,16351
  3853                           
  3854                           ;ecan.c: 422: }
  3855  00F7B4  0012               	return	
  3856  00F7B6                     l345:
  3857                           
  3858                           ;ecan.c: 423: else
  3859                           ;ecan.c: 424: {
  3860                           ;ecan.c: 425: *passedInEIDH = 0;
  3861  00F7B6  0060  F01B  FFD9   	movff	convertCANid2Reg@passedInEIDH,16345
  3862  00F7BC  0060  F01F  FFDA   	movff	convertCANid2Reg@passedInEIDH+1,16346
  3863  00F7C2  0E00               	movlw	0
  3864  00F7C4  6EDF               	movwf	16351,c
  3865                           
  3866                           ;ecan.c: 426: *passedInEIDL = 0;
  3867  00F7C6  0060  F023  FFD9   	movff	convertCANid2Reg@passedInEIDL,16345
  3868  00F7CC  0060  F027  FFDA   	movff	convertCANid2Reg@passedInEIDL+1,16346
  3869  00F7D2  0E00               	movlw	0
  3870  00F7D4  6EDF               	movwf	16351,c
  3871                           
  3872                           ;ecan.c: 427: tempPassedInID = tempPassedInID << 5;
  3873  00F7D6  0060  F004  F00E   	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3874  00F7DC  0060  F008  F00F   	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3875  00F7E2  0060  F00C  F010   	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3876  00F7E8  0060  F010  F011   	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3877  00F7EE  0E05               	movlw	5
  3878  00F7F0                     u795:
  3879  00F7F0  90D8               	bcf	16344,0,c
  3880  00F7F2  360E               	rlcf	??_convertCANid2Reg,f,c
  3881  00F7F4  360F               	rlcf	??_convertCANid2Reg+1,f,c
  3882  00F7F6  3610               	rlcf	??_convertCANid2Reg+2,f,c
  3883  00F7F8  3611               	rlcf	??_convertCANid2Reg+3,f,c
  3884  00F7FA  2EE8               	decfsz	16360,f,c
  3885  00F7FC  D7F9               	goto	u795
  3886  00F7FE  0060  F038  F001   	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3887  00F804  0060  F03C  F002   	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3888  00F80A  0060  F040  F003   	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3889  00F810  0060  F044  F004   	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3890                           
  3891                           ;ecan.c: 428: *passedInSIDL = 0xFF & tempPassedInID;
  3892  00F816  0060  F033  FFD9   	movff	convertCANid2Reg@passedInSIDL,16345
  3893  00F81C  0060  F037  FFDA   	movff	convertCANid2Reg@passedInSIDL+1,16346
  3894  00F822  0060  F007  FFDF   	movff	convertCANid2Reg@tempPassedInID,16351
  3895                           
  3896                           ;ecan.c: 429: tempPassedInID = tempPassedInID >> 8;
  3897  00F828  0060  F004  F00E   	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  3898  00F82E  0060  F008  F00F   	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  3899  00F834  0060  F00C  F010   	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  3900  00F83A  0060  F010  F011   	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  3901  00F840  0060  F03C  F00E   	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  3902  00F846  0060  F040  F00F   	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  3903  00F84C  0060  F044  F010   	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  3904  00F852  6A11               	clrf	??_convertCANid2Reg+3,c
  3905  00F854  0060  F038  F001   	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  3906  00F85A  0060  F03C  F002   	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  3907  00F860  0060  F040  F003   	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  3908  00F866  0060  F044  F004   	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  3909                           
  3910                           ;ecan.c: 430: *passedInSIDH = 0xFF & tempPassedInID;
  3911  00F86C  0060  F02B  FFD9   	movff	convertCANid2Reg@passedInSIDH,16345
  3912  00F872  0060  F02F  FFDA   	movff	convertCANid2Reg@passedInSIDH+1,16346
  3913  00F878  0060  F007  FFDF   	movff	convertCANid2Reg@tempPassedInID,16351
  3914  00F87E  0012               	return	
  3915  00F880                     __end_of_convertCANid2Reg:
  3916                           	opt stack 0
  3917                           
  3918 ;; *************** function _CAN_receive *****************
  3919 ;; Defined at:
  3920 ;;		line 238 in file "mcc_generated_files/ecan.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  tempCanMsg      2   19[COMRAM] PTR struct .
  3923 ;;		 -> main@can_msg_rx(14), 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  returnValue     1   21[COMRAM] unsigned char 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      unsigned char 
  3928 ;; Registers used:
  3929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;Total ram usage:        3 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; Hardware stack levels required when called:    1
  3942 ;; This function calls:
  3943 ;;		_convertReg2ExtendedCANid
  3944 ;;		_convertReg2StandardCANid
  3945 ;; This function is called by:
  3946 ;;		_main
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text21
  3951  00F880                     __ptext21:
  3952                           	opt stack 0
  3953  00F880                     _CAN_receive:
  3954                           	opt stack 29
  3955                           
  3956                           ;ecan.c: 240: uint8_t returnValue = 0;
  3957                           
  3958                           ;incstack = 0
  3959  00F880  0E00               	movlw	0
  3960  00F882  6E16               	movwf	CAN_receive@returnValue,c
  3961                           
  3962                           ;ecan.c: 243: if (RXB0CONbits.RXFUL != 0)
  3963  00F884  013F               	movlb	63	; () banked
  3964  00F886  AF80               	btfss	128,7,b	;volatile
  3965  00F888  D09E               	goto	l312
  3966                           
  3967                           ; BSR set to: 63
  3968                           ;ecan.c: 244: {
  3969                           ;ecan.c: 245: if ((RXB0SIDL & 0x08) == 0x08)
  3970  00F88A  A782               	btfss	130,3,b	;volatile
  3971  00F88C  D027               	goto	l313
  3972                           
  3973                           ; BSR set to: 63
  3974                           ;ecan.c: 246: {
  3975                           ;ecan.c: 248: tempCanMsg->frame.idType = (uint8_t) 2;
  3976  00F88E  0060  F053  FFD9   	movff	CAN_receive@tempCanMsg,16345
  3977  00F894  0060  F057  FFDA   	movff	CAN_receive@tempCanMsg+1,16346
  3978  00F89A  0E02               	movlw	2
  3979  00F89C  6EDF               	movwf	16351,c
  3980                           
  3981                           ; BSR set to: 63
  3982                           ;ecan.c: 249: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB0EIDH, RXB0EIDL, RXB0SI
      +                          DH, RXB0SIDL);
  3983  00F89E  006F FE10  F001    	movff	16260,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  3984  00F8A4  006F FE04  F002    	movff	16257,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  3985  00F8AA  006F FE08  F003    	movff	16258,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  3986  00F8B0  5183               	movf	131,w,b	;volatile
  3987  00F8B2  EC63  F079         	call	_convertReg2ExtendedCANid
  3988  00F8B6  EE20 F001          	lfsr	2,1
  3989  00F8BA  5014               	movf	CAN_receive@tempCanMsg,w,c
  3990  00F8BC  26D9               	addwf	16345,f,c
  3991  00F8BE  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3992  00F8C0  22DA               	addwfc	16346,f,c
  3993  00F8C2  0060  F007  FFDE   	movff	?_convertReg2ExtendedCANid,16350
  3994  00F8C8  0060  F00B  FFDE   	movff	?_convertReg2ExtendedCANid+1,16350
  3995  00F8CE  0060  F00F  FFDE   	movff	?_convertReg2ExtendedCANid+2,16350
  3996  00F8D4  0060  F013  FFDE   	movff	?_convertReg2ExtendedCANid+3,16350
  3997                           
  3998                           ;ecan.c: 250: }
  3999  00F8DA  D021               	goto	l314
  4000  00F8DC                     l313:
  4001                           
  4002                           ;ecan.c: 251: else
  4003                           ;ecan.c: 252: {
  4004                           ;ecan.c: 254: tempCanMsg->frame.idType = (uint8_t) 1;
  4005  00F8DC  0060  F053  FFD9   	movff	CAN_receive@tempCanMsg,16345
  4006  00F8E2  0060  F057  FFDA   	movff	CAN_receive@tempCanMsg+1,16346
  4007  00F8E8  0E01               	movlw	1
  4008  00F8EA  6EDF               	movwf	16351,c
  4009                           
  4010                           ;ecan.c: 255: tempCanMsg->frame.id = convertReg2StandardCANid(RXB0SIDH, RXB0SIDL);
  4011  00F8EC  006F FE08  F001    	movff	16258,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  4012  00F8F2  013F               	movlb	63	; () banked
  4013  00F8F4  5181               	movf	129,w,b	;volatile
  4014  00F8F6  ECFE  F077         	call	_convertReg2StandardCANid
  4015  00F8FA  EE20 F001          	lfsr	2,1
  4016  00F8FE  5014               	movf	CAN_receive@tempCanMsg,w,c
  4017  00F900  26D9               	addwf	16345,f,c
  4018  00F902  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4019  00F904  22DA               	addwfc	16346,f,c
  4020  00F906  0060  F007  FFDE   	movff	?_convertReg2StandardCANid,16350
  4021  00F90C  0060  F00B  FFDE   	movff	?_convertReg2StandardCANid+1,16350
  4022  00F912  0060  F00F  FFDE   	movff	?_convertReg2StandardCANid+2,16350
  4023  00F918  0060  F013  FFDE   	movff	?_convertReg2StandardCANid+3,16350
  4024  00F91E                     l314:
  4025                           
  4026                           ;ecan.c: 256: }
  4027                           ;ecan.c: 258: tempCanMsg->frame.dlc = RXB0DLC;
  4028  00F91E  EE20 F005          	lfsr	2,5
  4029  00F922  5014               	movf	CAN_receive@tempCanMsg,w,c
  4030  00F924  26D9               	addwf	16345,f,c
  4031  00F926  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4032  00F928  22DA               	addwfc	16346,f,c
  4033  00F92A  006F FE17 FFDF     	movff	16261,16351	;volatile
  4034                           
  4035                           ;ecan.c: 259: tempCanMsg->frame.data0 = RXB0D0;
  4036  00F930  EE20 F006          	lfsr	2,6
  4037  00F934  5014               	movf	CAN_receive@tempCanMsg,w,c
  4038  00F936  26D9               	addwf	16345,f,c
  4039  00F938  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4040  00F93A  22DA               	addwfc	16346,f,c
  4041  00F93C  006F FE1B FFDF     	movff	16262,16351	;volatile
  4042                           
  4043                           ;ecan.c: 260: tempCanMsg->frame.data1 = RXB0D1;
  4044  00F942  EE20 F007          	lfsr	2,7
  4045  00F946  5014               	movf	CAN_receive@tempCanMsg,w,c
  4046  00F948  26D9               	addwf	16345,f,c
  4047  00F94A  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4048  00F94C  22DA               	addwfc	16346,f,c
  4049  00F94E  006F FE1F FFDF     	movff	16263,16351	;volatile
  4050                           
  4051                           ;ecan.c: 261: tempCanMsg->frame.data2 = RXB0D2;
  4052  00F954  EE20 F008          	lfsr	2,8
  4053  00F958  5014               	movf	CAN_receive@tempCanMsg,w,c
  4054  00F95A  26D9               	addwf	16345,f,c
  4055  00F95C  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4056  00F95E  22DA               	addwfc	16346,f,c
  4057  00F960  006F FE23 FFDF     	movff	16264,16351	;volatile
  4058                           
  4059                           ;ecan.c: 262: tempCanMsg->frame.data3 = RXB0D3;
  4060  00F966  EE20 F009          	lfsr	2,9
  4061  00F96A  5014               	movf	CAN_receive@tempCanMsg,w,c
  4062  00F96C  26D9               	addwf	16345,f,c
  4063  00F96E  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4064  00F970  22DA               	addwfc	16346,f,c
  4065  00F972  006F FE27 FFDF     	movff	16265,16351	;volatile
  4066                           
  4067                           ;ecan.c: 263: tempCanMsg->frame.data4 = RXB0D4;
  4068  00F978  EE20 F00A          	lfsr	2,10
  4069  00F97C  5014               	movf	CAN_receive@tempCanMsg,w,c
  4070  00F97E  26D9               	addwf	16345,f,c
  4071  00F980  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4072  00F982  22DA               	addwfc	16346,f,c
  4073  00F984  006F FE2B FFDF     	movff	16266,16351	;volatile
  4074                           
  4075                           ;ecan.c: 264: tempCanMsg->frame.data5 = RXB0D5;
  4076  00F98A  EE20 F00B          	lfsr	2,11
  4077  00F98E  5014               	movf	CAN_receive@tempCanMsg,w,c
  4078  00F990  26D9               	addwf	16345,f,c
  4079  00F992  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4080  00F994  22DA               	addwfc	16346,f,c
  4081  00F996  006F FE2F FFDF     	movff	16267,16351	;volatile
  4082                           
  4083                           ;ecan.c: 265: tempCanMsg->frame.data6 = RXB0D6;
  4084  00F99C  EE20 F00C          	lfsr	2,12
  4085  00F9A0  5014               	movf	CAN_receive@tempCanMsg,w,c
  4086  00F9A2  26D9               	addwf	16345,f,c
  4087  00F9A4  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4088  00F9A6  22DA               	addwfc	16346,f,c
  4089  00F9A8  006F FE33 FFDF     	movff	16268,16351	;volatile
  4090                           
  4091                           ;ecan.c: 266: tempCanMsg->frame.data7 = RXB0D7;
  4092  00F9AE  EE20 F00D          	lfsr	2,13
  4093  00F9B2  5014               	movf	CAN_receive@tempCanMsg,w,c
  4094  00F9B4  26D9               	addwf	16345,f,c
  4095  00F9B6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4096  00F9B8  22DA               	addwfc	16346,f,c
  4097  00F9BA  006F FE37 FFDF     	movff	16269,16351	;volatile
  4098                           
  4099                           ;ecan.c: 267: RXB0CONbits.RXFUL = 0;
  4100  00F9C0  013F               	movlb	63	; () banked
  4101  00F9C2  9F80               	bcf	128,7,b	;volatile
  4102  00F9C4  D0A0               	goto	l2244
  4103  00F9C6                     l312:
  4104                           
  4105                           ; BSR set to: 63
  4106                           ;ecan.c: 270: else if (RXB1CONbits.RXFUL != 0)
  4107  00F9C6  0137               	movlb	55	; () banked
  4108  00F9C8  AFF0               	btfss	240,7,b	;volatile
  4109  00F9CA  D09F               	goto	l316
  4110                           
  4111                           ; BSR set to: 55
  4112                           ;ecan.c: 271: {
  4113                           ;ecan.c: 272: if ((RXB1SIDL & 0x08) == 0x08)
  4114  00F9CC  A7F2               	btfss	242,3,b	;volatile
  4115  00F9CE  D027               	goto	l317
  4116                           
  4117                           ; BSR set to: 55
  4118                           ;ecan.c: 273: {
  4119                           ;ecan.c: 275: tempCanMsg->frame.idType = (uint8_t) 2;
  4120  00F9D0  0060  F053  FFD9   	movff	CAN_receive@tempCanMsg,16345
  4121  00F9D6  0060  F057  FFDA   	movff	CAN_receive@tempCanMsg+1,16346
  4122  00F9DC  0E02               	movlw	2
  4123  00F9DE  6EDF               	movwf	16351,c
  4124                           
  4125                           ; BSR set to: 55
  4126                           ;ecan.c: 276: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB1EIDH, RXB1EIDL, RXB1SI
      +                          DH, RXB1SIDL);
  4127  00F9E0  006D FFD0  F001    	movff	14324,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  4128  00F9E6  006D FFC4  F002    	movff	14321,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  4129  00F9EC  006D FFC8  F003    	movff	14322,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  4130  00F9F2  51F3               	movf	243,w,b	;volatile
  4131  00F9F4  EC63  F079         	call	_convertReg2ExtendedCANid
  4132  00F9F8  EE20 F001          	lfsr	2,1
  4133  00F9FC  5014               	movf	CAN_receive@tempCanMsg,w,c
  4134  00F9FE  26D9               	addwf	16345,f,c
  4135  00FA00  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4136  00FA02  22DA               	addwfc	16346,f,c
  4137  00FA04  0060  F007  FFDE   	movff	?_convertReg2ExtendedCANid,16350
  4138  00FA0A  0060  F00B  FFDE   	movff	?_convertReg2ExtendedCANid+1,16350
  4139  00FA10  0060  F00F  FFDE   	movff	?_convertReg2ExtendedCANid+2,16350
  4140  00FA16  0060  F013  FFDE   	movff	?_convertReg2ExtendedCANid+3,16350
  4141                           
  4142                           ;ecan.c: 277: }
  4143  00FA1C  D021               	goto	l318
  4144  00FA1E                     l317:
  4145                           
  4146                           ;ecan.c: 278: else
  4147                           ;ecan.c: 279: {
  4148                           ;ecan.c: 281: tempCanMsg->frame.idType = (uint8_t) 1;
  4149  00FA1E  0060  F053  FFD9   	movff	CAN_receive@tempCanMsg,16345
  4150  00FA24  0060  F057  FFDA   	movff	CAN_receive@tempCanMsg+1,16346
  4151  00FA2A  0E01               	movlw	1
  4152  00FA2C  6EDF               	movwf	16351,c
  4153                           
  4154                           ;ecan.c: 282: tempCanMsg->frame.id = convertReg2StandardCANid(RXB1SIDH, RXB1SIDL);
  4155  00FA2E  006D FFC8  F001    	movff	14322,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  4156  00FA34  0137               	movlb	55	; () banked
  4157  00FA36  51F1               	movf	241,w,b	;volatile
  4158  00FA38  ECFE  F077         	call	_convertReg2StandardCANid
  4159  00FA3C  EE20 F001          	lfsr	2,1
  4160  00FA40  5014               	movf	CAN_receive@tempCanMsg,w,c
  4161  00FA42  26D9               	addwf	16345,f,c
  4162  00FA44  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4163  00FA46  22DA               	addwfc	16346,f,c
  4164  00FA48  0060  F007  FFDE   	movff	?_convertReg2StandardCANid,16350
  4165  00FA4E  0060  F00B  FFDE   	movff	?_convertReg2StandardCANid+1,16350
  4166  00FA54  0060  F00F  FFDE   	movff	?_convertReg2StandardCANid+2,16350
  4167  00FA5A  0060  F013  FFDE   	movff	?_convertReg2StandardCANid+3,16350
  4168  00FA60                     l318:
  4169                           
  4170                           ;ecan.c: 283: }
  4171                           ;ecan.c: 285: tempCanMsg->frame.dlc = RXB1DLC;
  4172  00FA60  EE20 F005          	lfsr	2,5
  4173  00FA64  5014               	movf	CAN_receive@tempCanMsg,w,c
  4174  00FA66  26D9               	addwf	16345,f,c
  4175  00FA68  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4176  00FA6A  22DA               	addwfc	16346,f,c
  4177  00FA6C  006D FFD7 FFDF     	movff	14325,16351	;volatile
  4178                           
  4179                           ;ecan.c: 286: tempCanMsg->frame.data0 = RXB1D0;
  4180  00FA72  EE20 F006          	lfsr	2,6
  4181  00FA76  5014               	movf	CAN_receive@tempCanMsg,w,c
  4182  00FA78  26D9               	addwf	16345,f,c
  4183  00FA7A  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4184  00FA7C  22DA               	addwfc	16346,f,c
  4185  00FA7E  006D FFDB FFDF     	movff	14326,16351	;volatile
  4186                           
  4187                           ;ecan.c: 287: tempCanMsg->frame.data1 = RXB1D1;
  4188  00FA84  EE20 F007          	lfsr	2,7
  4189  00FA88  5014               	movf	CAN_receive@tempCanMsg,w,c
  4190  00FA8A  26D9               	addwf	16345,f,c
  4191  00FA8C  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4192  00FA8E  22DA               	addwfc	16346,f,c
  4193  00FA90  006D FFDF FFDF     	movff	14327,16351	;volatile
  4194                           
  4195                           ;ecan.c: 288: tempCanMsg->frame.data2 = RXB1D2;
  4196  00FA96  EE20 F008          	lfsr	2,8
  4197  00FA9A  5014               	movf	CAN_receive@tempCanMsg,w,c
  4198  00FA9C  26D9               	addwf	16345,f,c
  4199  00FA9E  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4200  00FAA0  22DA               	addwfc	16346,f,c
  4201  00FAA2  006D FFE3 FFDF     	movff	14328,16351	;volatile
  4202                           
  4203                           ;ecan.c: 289: tempCanMsg->frame.data3 = RXB1D3;
  4204  00FAA8  EE20 F009          	lfsr	2,9
  4205  00FAAC  5014               	movf	CAN_receive@tempCanMsg,w,c
  4206  00FAAE  26D9               	addwf	16345,f,c
  4207  00FAB0  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4208  00FAB2  22DA               	addwfc	16346,f,c
  4209  00FAB4  006D FFE7 FFDF     	movff	14329,16351	;volatile
  4210                           
  4211                           ;ecan.c: 290: tempCanMsg->frame.data4 = RXB1D4;
  4212  00FABA  EE20 F00A          	lfsr	2,10
  4213  00FABE  5014               	movf	CAN_receive@tempCanMsg,w,c
  4214  00FAC0  26D9               	addwf	16345,f,c
  4215  00FAC2  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4216  00FAC4  22DA               	addwfc	16346,f,c
  4217  00FAC6  006D FFEB FFDF     	movff	14330,16351	;volatile
  4218                           
  4219                           ;ecan.c: 291: tempCanMsg->frame.data5 = RXB1D5;
  4220  00FACC  EE20 F00B          	lfsr	2,11
  4221  00FAD0  5014               	movf	CAN_receive@tempCanMsg,w,c
  4222  00FAD2  26D9               	addwf	16345,f,c
  4223  00FAD4  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4224  00FAD6  22DA               	addwfc	16346,f,c
  4225  00FAD8  006D FFEF FFDF     	movff	14331,16351	;volatile
  4226                           
  4227                           ;ecan.c: 292: tempCanMsg->frame.data6 = RXB1D6;
  4228  00FADE  EE20 F00C          	lfsr	2,12
  4229  00FAE2  5014               	movf	CAN_receive@tempCanMsg,w,c
  4230  00FAE4  26D9               	addwf	16345,f,c
  4231  00FAE6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4232  00FAE8  22DA               	addwfc	16346,f,c
  4233  00FAEA  006D FFF3 FFDF     	movff	14332,16351	;volatile
  4234                           
  4235                           ;ecan.c: 293: tempCanMsg->frame.data7 = RXB1D7;
  4236  00FAF0  EE20 F00D          	lfsr	2,13
  4237  00FAF4  5014               	movf	CAN_receive@tempCanMsg,w,c
  4238  00FAF6  26D9               	addwf	16345,f,c
  4239  00FAF8  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  4240  00FAFA  22DA               	addwfc	16346,f,c
  4241  00FAFC  006D FFF7 FFDF     	movff	14333,16351	;volatile
  4242                           
  4243                           ;ecan.c: 294: RXB1CONbits.RXFUL = 0;
  4244  00FB02  0137               	movlb	55	; () banked
  4245  00FB04  9FF0               	bcf	240,7,b	;volatile
  4246  00FB06                     l2244:
  4247                           
  4248                           ; BSR set to: 55
  4249                           ;ecan.c: 295: returnValue = 1;
  4250  00FB06  0E01               	movlw	1
  4251  00FB08  6E16               	movwf	CAN_receive@returnValue,c
  4252  00FB0A                     l316:
  4253                           
  4254                           ;ecan.c: 296: }
  4255                           ;ecan.c: 297: return (returnValue);
  4256                           
  4257                           ; BSR set to: 55
  4258                           
  4259                           ; BSR set to: 55
  4260  00FB0A  5016               	movf	CAN_receive@returnValue,w,c
  4261  00FB0C  0012               	return	
  4262  00FB0E                     __end_of_CAN_receive:
  4263                           	opt stack 0
  4264                           
  4265 ;; *************** function _convertReg2StandardCANid *****************
  4266 ;; Defined at:
  4267 ;;		line 384 in file "mcc_generated_files/ecan.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  tempRXBn_SID    1    wreg     unsigned char 
  4270 ;;  tempRXBn_SID    1    0[COMRAM] unsigned char 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  tempRXBn_SID    1    6[COMRAM] unsigned char 
  4273 ;;  ConvertedID     4   11[COMRAM] unsigned long 
  4274 ;;  returnValue     4    7[COMRAM] unsigned long 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  4    0[COMRAM] unsigned long 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, status,0
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4284 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;Total ram usage:       15 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_CAN_receive
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text22
  4298  00EFFC                     __ptext22:
  4299                           	opt stack 0
  4300  00EFFC                     _convertReg2StandardCANid:
  4301                           	opt stack 29
  4302                           
  4303                           ;incstack = 0
  4304                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  4305  00EFFC  6E07               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
  4306                           
  4307                           ;ecan.c: 386: uint32_t returnValue = 0;
  4308  00EFFE  0E00               	movlw	0
  4309  00F000  6E08               	movwf	convertReg2StandardCANid@returnValue,c
  4310  00F002  0E00               	movlw	0
  4311  00F004  6E09               	movwf	convertReg2StandardCANid@returnValue+1,c
  4312  00F006  0E00               	movlw	0
  4313  00F008  6E0A               	movwf	convertReg2StandardCANid@returnValue+2,c
  4314  00F00A  0E00               	movlw	0
  4315  00F00C  6E0B               	movwf	convertReg2StandardCANid@returnValue+3,c
  4316                           
  4317                           ;ecan.c: 387: uint32_t ConvertedID;
  4318                           ;ecan.c: 391: ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  4319  00F00E  5007               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
  4320  00F010  6E05               	movwf	??_convertReg2StandardCANid& (0+255),c
  4321  00F012  6A06               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
  4322  00F014  90D8               	bcf	16344,0,c
  4323  00F016  3605               	rlcf	??_convertReg2StandardCANid,f,c
  4324  00F018  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  4325  00F01A  90D8               	bcf	16344,0,c
  4326  00F01C  3605               	rlcf	??_convertReg2StandardCANid,f,c
  4327  00F01E  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  4328  00F020  90D8               	bcf	16344,0,c
  4329  00F022  3605               	rlcf	??_convertReg2StandardCANid,f,c
  4330  00F024  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  4331  00F026  0060  F014  F00C   	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  4332  00F02C  0060  F018  F00D   	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  4333  00F032  0E00               	movlw	0
  4334  00F034  BE0D               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
  4335  00F036  0EFF               	movlw	-1
  4336  00F038  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  4337  00F03A  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  4338                           
  4339                           ;ecan.c: 392: ConvertedID = ConvertedID + (uint32_t)(tempRXBn_SIDL >> 5);
  4340  00F03C  0060  F004  F005   	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  4341  00F042  0E05               	movlw	5
  4342  00F044  6E06               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
  4343  00F046                     u815:
  4344  00F046  90D8               	bcf	16344,0,c
  4345  00F048  3205               	rrcf	??_convertReg2StandardCANid,f,c
  4346  00F04A  2E06               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
  4347  00F04C  D7FC               	goto	u815
  4348  00F04E  5005               	movf	??_convertReg2StandardCANid,w,c
  4349  00F050  240C               	addwf	convertReg2StandardCANid@ConvertedID,w,c
  4350  00F052  6E0C               	movwf	convertReg2StandardCANid@ConvertedID,c
  4351  00F054  0E00               	movlw	0
  4352  00F056  200D               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
  4353  00F058  6E0D               	movwf	convertReg2StandardCANid@ConvertedID+1,c
  4354  00F05A  0E00               	movlw	0
  4355  00F05C  200E               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
  4356  00F05E  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  4357  00F060  0E00               	movlw	0
  4358  00F062  200F               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
  4359  00F064  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  4360                           
  4361                           ;ecan.c: 393: returnValue = ConvertedID;
  4362  00F066  0060  F030  F008   	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  4363  00F06C  0060  F034  F009   	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  4364  00F072  0060  F038  F00A   	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  4365  00F078  0060  F03C  F00B   	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  4366                           
  4367                           ;ecan.c: 394: return (returnValue);
  4368  00F07E  0060  F020  F001   	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  4369  00F084  0060  F024  F002   	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  4370  00F08A  0060  F028  F003   	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  4371  00F090  0060  F02C  F004   	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  4372  00F096  0012               	return	
  4373  00F098                     __end_of_convertReg2StandardCANid:
  4374                           	opt stack 0
  4375                           
  4376 ;; *************** function _convertReg2ExtendedCANid *****************
  4377 ;; Defined at:
  4378 ;;		line 363 in file "mcc_generated_files/ecan.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  tempRXBn_EID    1    wreg     unsigned char 
  4381 ;;  tempRXBn_EID    1    0[COMRAM] unsigned char 
  4382 ;;  tempRXBn_SID    1    1[COMRAM] unsigned char 
  4383 ;;  tempRXBn_SID    1    2[COMRAM] unsigned char 
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;  tempRXBn_EID    1    8[COMRAM] unsigned char 
  4386 ;;  ConvertedID     4   15[COMRAM] unsigned long 
  4387 ;;  returnValue     4    9[COMRAM] unsigned long 
  4388 ;;  CAN_standard    1   14[COMRAM] unsigned char 
  4389 ;;  CAN_standard    1   13[COMRAM] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  4    0[COMRAM] unsigned long 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4399 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4400 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;Total ram usage:       19 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; This function calls:
  4406 ;;		Nothing
  4407 ;; This function is called by:
  4408 ;;		_CAN_receive
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           	psect	text23
  4413  00F2C6                     __ptext23:
  4414                           	opt stack 0
  4415  00F2C6                     _convertReg2ExtendedCANid:
  4416                           	opt stack 29
  4417                           
  4418                           ;incstack = 0
  4419                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  4420  00F2C6  6E09               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
  4421                           
  4422                           ;ecan.c: 365: uint32_t returnValue = 0;
  4423  00F2C8  0E00               	movlw	0
  4424  00F2CA  6E0A               	movwf	convertReg2ExtendedCANid@returnValue,c
  4425  00F2CC  0E00               	movlw	0
  4426  00F2CE  6E0B               	movwf	convertReg2ExtendedCANid@returnValue+1,c
  4427  00F2D0  0E00               	movlw	0
  4428  00F2D2  6E0C               	movwf	convertReg2ExtendedCANid@returnValue+2,c
  4429  00F2D4  0E00               	movlw	0
  4430  00F2D6  6E0D               	movwf	convertReg2ExtendedCANid@returnValue+3,c
  4431                           
  4432                           ;ecan.c: 366: uint32_t ConvertedID = 0;
  4433  00F2D8  0E00               	movlw	0
  4434  00F2DA  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  4435  00F2DC  0E00               	movlw	0
  4436  00F2DE  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  4437  00F2E0  0E00               	movlw	0
  4438  00F2E2  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  4439  00F2E4  0E00               	movlw	0
  4440  00F2E6  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  4441                           
  4442                           ;ecan.c: 367: uint8_t CAN_standardLo_ID_lo2bits;
  4443                           ;ecan.c: 368: uint8_t CAN_standardLo_ID_hi3bits;
  4444                           ;ecan.c: 370: CAN_standardLo_ID_lo2bits = (uint8_t)(tempRXBn_SIDL & 0x03);
  4445  00F2E8  5003               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  4446  00F2EA  0B03               	andlw	3
  4447  00F2EC  6E0E               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
  4448                           
  4449                           ;ecan.c: 371: CAN_standardLo_ID_hi3bits = (uint8_t)(tempRXBn_SIDL >> 5);
  4450  00F2EE  3803               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  4451  00F2F0  42E8               	rrncf	16360,f,c
  4452  00F2F2  0B07               	andlw	7
  4453  00F2F4  6E0F               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
  4454                           
  4455                           ;ecan.c: 372: ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  4456  00F2F6  5002               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
  4457  00F2F8  6E05               	movwf	??_convertReg2ExtendedCANid& (0+255),c
  4458  00F2FA  6A06               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
  4459  00F2FC  90D8               	bcf	16344,0,c
  4460  00F2FE  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  4461  00F300  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  4462  00F302  90D8               	bcf	16344,0,c
  4463  00F304  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  4464  00F306  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  4465  00F308  90D8               	bcf	16344,0,c
  4466  00F30A  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  4467  00F30C  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  4468  00F30E  0060  F014  F010   	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  4469  00F314  0060  F018  F011   	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  4470  00F31A  0E00               	movlw	0
  4471  00F31C  BE11               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
  4472  00F31E  0EFF               	movlw	-1
  4473  00F320  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  4474  00F322  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  4475                           
  4476                           ;ecan.c: 373: ConvertedID = ConvertedID + CAN_standardLo_ID_hi3bits;
  4477  00F324  500F               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
  4478  00F326  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  4479  00F328  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  4480  00F32A  0E00               	movlw	0
  4481  00F32C  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  4482  00F32E  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  4483  00F330  0E00               	movlw	0
  4484  00F332  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  4485  00F334  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  4486  00F336  0E00               	movlw	0
  4487  00F338  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  4488  00F33A  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  4489                           
  4490                           ;ecan.c: 374: ConvertedID = (ConvertedID << 2);
  4491  00F33C  0060  F040  F005   	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  4492  00F342  0060  F044  F006   	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  4493  00F348  0060  F048  F007   	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  4494  00F34E  0060  F04C  F008   	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  4495  00F354  0E02               	movlw	2
  4496  00F356                     u805:
  4497  00F356  90D8               	bcf	16344,0,c
  4498  00F358  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  4499  00F35A  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  4500  00F35C  3607               	rlcf	??_convertReg2ExtendedCANid+2,f,c
  4501  00F35E  3608               	rlcf	??_convertReg2ExtendedCANid+3,f,c
  4502  00F360  2EE8               	decfsz	16360,f,c
  4503  00F362  D7F9               	goto	u805
  4504  00F364  0060  F014  F010   	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  4505  00F36A  0060  F018  F011   	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  4506  00F370  0060  F01C  F012   	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  4507  00F376  0060  F020  F013   	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  4508                           
  4509                           ;ecan.c: 375: ConvertedID = ConvertedID + CAN_standardLo_ID_lo2bits;
  4510  00F37C  500E               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
  4511  00F37E  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  4512  00F380  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  4513  00F382  0E00               	movlw	0
  4514  00F384  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  4515  00F386  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  4516  00F388  0E00               	movlw	0
  4517  00F38A  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  4518  00F38C  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  4519  00F38E  0E00               	movlw	0
  4520  00F390  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  4521  00F392  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  4522                           
  4523                           ;ecan.c: 376: ConvertedID = (ConvertedID << 8);
  4524  00F394  0060  F040  F006   	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  4525  00F39A  0060  F044  F007   	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  4526  00F3A0  0060  F048  F008   	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  4527  00F3A6  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  4528  00F3A8  0060  F014  F010   	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  4529  00F3AE  0060  F018  F011   	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  4530  00F3B4  0060  F01C  F012   	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  4531  00F3BA  0060  F020  F013   	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  4532                           
  4533                           ;ecan.c: 377: ConvertedID = ConvertedID + tempRXBn_EIDH;
  4534  00F3C0  5009               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
  4535  00F3C2  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  4536  00F3C4  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  4537  00F3C6  0E00               	movlw	0
  4538  00F3C8  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  4539  00F3CA  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  4540  00F3CC  0E00               	movlw	0
  4541  00F3CE  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  4542  00F3D0  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  4543  00F3D2  0E00               	movlw	0
  4544  00F3D4  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  4545  00F3D6  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  4546                           
  4547                           ;ecan.c: 378: ConvertedID = (ConvertedID << 8);
  4548  00F3D8  0060  F040  F006   	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  4549  00F3DE  0060  F044  F007   	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  4550  00F3E4  0060  F048  F008   	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  4551  00F3EA  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  4552  00F3EC  0060  F014  F010   	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  4553  00F3F2  0060  F018  F011   	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  4554  00F3F8  0060  F01C  F012   	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  4555  00F3FE  0060  F020  F013   	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  4556                           
  4557                           ;ecan.c: 379: ConvertedID = ConvertedID + tempRXBn_EIDL;
  4558  00F404  5001               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
  4559  00F406  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  4560  00F408  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  4561  00F40A  0E00               	movlw	0
  4562  00F40C  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  4563  00F40E  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  4564  00F410  0E00               	movlw	0
  4565  00F412  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  4566  00F414  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  4567  00F416  0E00               	movlw	0
  4568  00F418  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  4569  00F41A  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  4570                           
  4571                           ;ecan.c: 380: returnValue = ConvertedID;
  4572  00F41C  0060  F040  F00A   	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  4573  00F422  0060  F044  F00B   	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  4574  00F428  0060  F048  F00C   	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  4575  00F42E  0060  F04C  F00D   	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  4576                           
  4577                           ;ecan.c: 381: return (returnValue);
  4578  00F434  0060  F028  F001   	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  4579  00F43A  0060  F02C  F002   	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  4580  00F440  0060  F030  F003   	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  4581  00F446  0060  F034  F004   	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  4582  00F44C  0012               	return	
  4583  00F44E                     __end_of_convertReg2ExtendedCANid:
  4584                           	opt stack 0
  4585                           
  4586 ;; *************** function _APP_Initialize *****************
  4587 ;; Defined at:
  4588 ;;		line 24 in file "main.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;		None
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;		None
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      void 
  4595 ;; Registers used:
  4596 ;;		wreg, status,2, status,0, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4606 ;;Total ram usage:        0 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:    1
  4609 ;; This function calls:
  4610 ;;		_btn_init
  4611 ;;		_led_init
  4612 ;; This function is called by:
  4613 ;;		_main
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           	psect	text24
  4618  00EC7C                     __ptext24:
  4619                           	opt stack 0
  4620  00EC7C                     _APP_Initialize:
  4621                           	opt stack 29
  4622                           
  4623                           ;main.c: 27: led_init(0);
  4624                           
  4625                           ;incstack = 0
  4626  00EC7C  0E00               	movlw	0
  4627  00EC7E  EC58  F076         	call	_led_init
  4628                           
  4629                           ;main.c: 28: led_init(1);
  4630  00EC82  0E01               	movlw	1
  4631  00EC84  EC58  F076         	call	_led_init
  4632                           
  4633                           ;main.c: 29: btn_init(0);
  4634  00EC88  0E00               	movlw	0
  4635  00EC8A  EC67  F076         	call	_btn_init
  4636                           
  4637                           ;main.c: 30: btn_init(1);
  4638  00EC8E  0E01               	movlw	1
  4639  00EC90  EC67  F076         	call	_btn_init
  4640  00EC94  0012               	return		;funcret
  4641  00EC96                     __end_of_APP_Initialize:
  4642                           	opt stack 0
  4643                           
  4644 ;; *************** function _led_init *****************
  4645 ;; Defined at:
  4646 ;;		line 176 in file "main.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  led_num         1    wreg     unsigned char 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  led_num         1    0[COMRAM] unsigned char 
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;Total ram usage:        1 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_APP_Initialize
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text25
  4674  00ECB0                     __ptext25:
  4675                           	opt stack 0
  4676  00ECB0                     _led_init:
  4677                           	opt stack 29
  4678                           
  4679                           ;incstack = 0
  4680                           ;led_init@led_num stored from wreg
  4681  00ECB0  6E01               	movwf	led_init@led_num,c
  4682                           
  4683                           ;main.c: 178: if(led_num == 0)
  4684  00ECB2  5001               	movf	led_init@led_num,w,c
  4685  00ECB4  A4D8               	btfss	16344,2,c
  4686  00ECB6  D004               	goto	l602
  4687                           
  4688                           ;main.c: 179: {
  4689                           ;main.c: 180: do { TRISAbits.TRISA0 = 0; } while(0);
  4690  00ECB8  013F               	movlb	63	; () banked
  4691  00ECBA  91C2               	bcf	194,0,b	;volatile
  4692                           
  4693                           ; BSR set to: 63
  4694                           
  4695                           ; BSR set to: 63
  4696                           ;main.c: 181: do { LATAbits.LATA0 = 1; } while(0);
  4697  00ECBC  81BA               	bsf	186,0,b	;volatile
  4698                           
  4699                           ; BSR set to: 63
  4700                           ;main.c: 182: }
  4701  00ECBE  0012               	return	
  4702  00ECC0                     l602:
  4703                           
  4704                           ;main.c: 183: else if(led_num == 1)
  4705                           
  4706                           ; BSR set to: 63
  4707  00ECC0  0401               	decf	led_init@led_num,w,c
  4708  00ECC2  A4D8               	btfss	16344,2,c
  4709  00ECC4  0012               	return	
  4710                           
  4711                           ;main.c: 184: {
  4712                           ;main.c: 185: do { TRISAbits.TRISA1 = 0; } while(0);
  4713  00ECC6  013F               	movlb	63	; () banked
  4714  00ECC8  93C2               	bcf	194,1,b	;volatile
  4715                           
  4716                           ; BSR set to: 63
  4717                           
  4718                           ; BSR set to: 63
  4719                           ;main.c: 186: do { LATAbits.LATA1 = 1; } while(0);
  4720  00ECCA  83BA               	bsf	186,1,b	;volatile
  4721                           
  4722                           ; BSR set to: 63
  4723                           
  4724                           ; BSR set to: 63
  4725  00ECCC  0012               	return	
  4726  00ECCE                     __end_of_led_init:
  4727                           	opt stack 0
  4728                           
  4729 ;; *************** function _btn_init *****************
  4730 ;; Defined at:
  4731 ;;		line 214 in file "main.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  btn_num         1    wreg     unsigned char 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  btn_num         1    0[COMRAM] unsigned char 
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      void 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2, status,0
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;Total ram usage:        1 bytes
  4750 ;; Hardware stack levels used:    1
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_APP_Initialize
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text26
  4759  00ECCE                     __ptext26:
  4760                           	opt stack 0
  4761  00ECCE                     _btn_init:
  4762                           	opt stack 29
  4763                           
  4764                           ;incstack = 0
  4765                           ;btn_init@btn_num stored from wreg
  4766  00ECCE  6E01               	movwf	btn_init@btn_num,c
  4767                           
  4768                           ;main.c: 216: if(btn_num == 0)
  4769  00ECD0  5001               	movf	btn_init@btn_num,w,c
  4770  00ECD2  A4D8               	btfss	16344,2,c
  4771  00ECD4  D005               	goto	l646
  4772                           
  4773                           ;main.c: 217: {
  4774                           ;main.c: 218: do { TRISAbits.TRISA4 = 1; } while(0);
  4775  00ECD6  013F               	movlb	63	; () banked
  4776  00ECD8  89C2               	bsf	194,4,b	;volatile
  4777                           
  4778                           ; BSR set to: 63
  4779                           
  4780                           ; BSR set to: 63
  4781                           ;main.c: 219: do { WPUAbits.WPUA4 = 1; } while(0);
  4782  00ECDA  013A               	movlb	58	; () banked
  4783  00ECDC  8941               	bsf	65,4,b	;volatile
  4784                           
  4785                           ; BSR set to: 58
  4786                           ;main.c: 220: }
  4787  00ECDE  0012               	return	
  4788  00ECE0                     l646:
  4789                           
  4790                           ;main.c: 221: else if (btn_num == 1)
  4791                           
  4792                           ; BSR set to: 58
  4793  00ECE0  0401               	decf	btn_init@btn_num,w,c
  4794  00ECE2  A4D8               	btfss	16344,2,c
  4795  00ECE4  0012               	return	
  4796                           
  4797                           ;main.c: 222: {
  4798                           ;main.c: 223: do { TRISAbits.TRISA5 = 1; } while(0);
  4799  00ECE6  013F               	movlb	63	; () banked
  4800  00ECE8  8BC2               	bsf	194,5,b	;volatile
  4801                           
  4802                           ; BSR set to: 63
  4803                           
  4804                           ; BSR set to: 63
  4805                           ;main.c: 224: do { WPUAbits.WPUA5 = 1; } while(0);
  4806  00ECEA  013A               	movlb	58	; () banked
  4807  00ECEC  8B41               	bsf	65,5,b	;volatile
  4808                           
  4809                           ; BSR set to: 58
  4810                           
  4811                           ; BSR set to: 58
  4812  00ECEE  0012               	return	
  4813  00ECF0                     __end_of_btn_init:
  4814                           	opt stack 0
  4815                           
  4816                           	psect	rparam


Data Sizes:
    Strings     424
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     81      82
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 15
		 -> main@uart_data_rx(COMRAM[15]), 

    memset@p	PTR unsigned char  size(2) Largest target is 15
		 -> main@uart_data_rx(COMRAM[15]), 

    memcpy@d1	PTR void  size(2) Largest target is 14
		 -> main@can_msg_tx(COMRAM[14]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 14
		 -> main@can_msg_tx(COMRAM[14]), 

    memcpy@s1	PTR const void  size(2) Largest target is 15
		 -> main@uart_data_rx(COMRAM[15]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 15
		 -> main@uart_data_rx(COMRAM[15]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 84
		 -> STR_13(CODE[32]), STR_12(CODE[32]), STR_11(CODE[31]), STR_10(CODE[32]), 
		 -> STR_9(CODE[34]), STR_8(CODE[24]), STR_7(CODE[48]), STR_6(CODE[32]), 
		 -> STR_5(CODE[26]), STR_4(CODE[84]), STR_3(CODE[20]), STR_2(CODE[19]), 
		 -> STR_1(CODE[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_14(CODE[7]), main@uart_data_rx(COMRAM[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    uart_command_received@command_read	PTR unsigned char  size(2) Largest target is 15
		 -> main@uart_data_rx(COMRAM[15]), 

    sp__memcpy	PTR void  size(2) Largest target is 14
		 -> main@can_msg_tx(COMRAM[14]), 

    sp__memset	PTR void  size(2) Largest target is 15
		 -> main@uart_data_rx(COMRAM[15]), 

    convertCANid2Reg@passedInSIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(COMRAM[1]), 

    convertCANid2Reg@passedInSIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(COMRAM[1]), 

    convertCANid2Reg@passedInEIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(COMRAM[1]), 

    convertCANid2Reg@passedInEIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(COMRAM[1]), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> main@can_msg_rx(COMRAM[14]), 

    CAN_transmit@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> main@can_msg_tx(COMRAM[14]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    _putch->_UART2_Write
    ___lwmod->___lwdiv
    _SYSTEM_Initialize->_ECAN_Initialize
    _CAN_transmit->_convertCANid2Reg
    _CAN_receive->_convertReg2ExtendedCANid
    _APP_Initialize->_btn_init
    _APP_Initialize->_led_init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                43    43      0    8817
                                             38 COMRAM    43    43      0
                     _APP_Initialize
                        _CAN_receive
                       _CAN_transmit
                  _SYSTEM_Initialize
                         _led_toggle
                             _memcpy
                             _memset
                             _printf
              _uart_command_received
 ---------------------------------------------------------------------------------
 (1) _uart_command_received                                4     2      2     255
                                              0 COMRAM     4     2      2
                         _UART2_Read
                  _UART2_is_rx_ready
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              32    16     16    2121
                                             12 COMRAM    26    10     16
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      30
                                              1 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     552
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _led_toggle                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ECAN_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_transmit                                         7     5      2    3304
                                             18 COMRAM     7     5      2
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (2) _convertCANid2Reg                                    18     5     13    1928
                                              0 COMRAM    18     5     13
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    1760
                                             19 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     266
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4     821
                                              0 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 (1) _APP_Initialize                                       0     0      0      60
                           _btn_init
                           _led_init
 ---------------------------------------------------------------------------------
 (2) _led_init                                             1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _btn_init                                             1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_Initialize
     _btn_init
     _led_init
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _CAN_transmit
     _convertCANid2Reg
   _SYSTEM_Initialize
     _ECAN_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _UART1_Initialize
     _UART2_Initialize
   _led_toggle
   _memcpy
   _memset
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _UART2_Write
   _uart_command_received
     _UART2_Read
     _UART2_is_rx_ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     51      52       1       86.3%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      52       6        0.0%
DATA                 0      0      52       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Oct 03 09:36:50 2018

                        __end_of_UART2_is_rx_ready EC40                                        __CFG_CP$OFF 000000  
                                               u90 EC3C                           __size_of_ECAN_Initialize 00B0  
                                      __CFG_LVP$ON 000000                                                l312 F9C6  
                                              l304 FC2E                                                l313 F8DC  
                                              l314 F91E                                                l306 FD38  
                                              l316 FB0A                                                l308 FE44  
                                              l317 FA1E                                                l318 FA60  
                                              l345 F7B6                                                l602 ECC0  
                                              l290 F09E                                                l293 F138  
                                              l525 EC60                                                l636 EE34  
                                              l580 F204                                                l581 F210  
                                              l646 ECE0                                                l583 F298  
                                              l593 EFE0                                                l682 F53A  
                                              l594 EFC4                                                l578 F19C  
                                              l683 F46E                                                l675 F458  
                                              l595 EF94                                                l579 F22C  
                                              l676 F468                                                l693 F5B4  
                                              l677 F504                                                l685 F4D2  
                                              l694 F616                                                l686 F4A0  
                                              l695 F5BC                                                l599 EFF8  
                                              l689 F56A                                                u510 EE44  
                                              u516 EE46                                                u490 EE22  
                                              u805 F356                                                u830 EED0  
                                              u815 F046                                                u496 EE24  
                                              u860 EDE4                                                u785 F718  
                                              u795 F7F0                                                u980 F4CA  
                                              u990 F4FC                                                u987 F4BC  
                                              u997 F4EE                            __size_of_PMD_Initialize 0024  
                                              wreg 003FE8                                      __CFG_BBEN$OFF 000000  
                       ??_convertReg2StandardCANid 0005                                       __CFG_ZCD$OFF 000000  
                                             l1102 EECC                                               l1103 EEC4  
                                             l1112 EDE0                                               l1113 EDD8  
                                             l1106 EEEC                                               l1107 EEF6  
                                             l1132 ED38                                               l1116 EDF8  
                                             l1133 ED22                                               l1117 EE02  
                                             l1126 EE9C                                               l1127 EE72  
                                             l1332 EC42                                               l2244 FB06  
                                             l2172 FE40                                               l2252 ED22  
                                             l2332 EF8C                                               l2370 EE72  
                                             l2296 F56E                                               STR_1 FFF8  
                                             STR_2 FFDE                                               STR_3 FFCA  
                                             STR_4 FE53                                               STR_5 FF98  
                                             STR_6 FF39                                               STR_7 FEA7  
                                             STR_8 FFB2                                               STR_9 FED7  
                                             u1040 F5A0                                               u1120 EFAC  
                                             u1060 F61E                                               u1181 F288  
                                             _LATA 003FBA                                               _LATB 003FBB  
                                             u1191 F2B6                                               _LATC 003FBC  
                                             _PMD0 0039C0                                               _PMD1 0039C1  
                                             _PMD2 0039C2                                               _PMD3 0039C3  
                                             _PMD4 0039C4                                               _PMD5 0039C5  
                                             _PMD6 0039C6                                               _PMD7 0039C7  
                                             _WPUA 003A41                                               _WPUB 003A51  
                                             _WPUC 003A61                                               _WPUE 003A81  
                                    __CFG_FCMEN$ON 000000                                               _main F148  
                     convertCANid2Reg@passedInEIDH 0006                       convertCANid2Reg@passedInEIDL 0008  
                                             fsr1h 003FE2                                               fsr2h 003FDA  
                                             indf1 003FE7                                               indf2 003FDF  
                                             fsr1l 003FE1                                               fsr2l 003FD9  
                     convertCANid2Reg@passedInSIDH 000A                       convertCANid2Reg@passedInSIDL 000C  
                          CAN_transmit@returnValue 0015                                               prodh 003FF4  
                                             prodl 003FF3                                               start FFFC  
                                    __CFG_CSWEN$ON 000000                                       ___param_bank 000000  
                                      ?_UART2_Read 0001                     __size_of_OSCILLATOR_Initialize 0018  
                    __end_of_OSCILLATOR_Initialize EC7C                                              ?_main 0001  
                                            STR_10 FF19                                              STR_11 FF79  
                                            STR_12 FEF9                                              STR_13 FF59  
                                            STR_14 FFF1                                      __CFG_WDTE$OFF 000000  
                                            _U1P1H 003DED                                              _U1P2H 003DEF  
                                            _U1P1L 003DEC                                              _U1P3H 003DF1  
                                            _U1P2L 003DEE                                              _U1P3L 003DF0  
                                            _U2P1H 003DD5                                              _U2P2H 003DD7  
                                            _U2P1L 003DD4                                              _U2P3H 003DD9  
                                            _U2P2L 003DD6                                              _U2P3L 003DD8  
                                   __CFG_DEBUG$OFF 000000                                    __end_of___lwdiv EF04  
                                            _U1UIR 003DF8                                              _U1RXB 003DE8  
                                            _U2UIR 003DE0                                    __end_of___lwmod EE10  
                                            _U1TXB 003DEA                                              _U2RXB 003DD0  
                                            _U2TXB 003DD2                                              _OSCEN 0039DD  
                                            _TRISA 003FC2                                              _TRISB 003FC3  
                                            _TRISC 003FC4                              CAN_receive@tempCanMsg 0014  
                                    __CFG_WRTB$OFF 000000                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                               __end_of_CAN_transmit FE48  
                                  __end_of_dpowers FE53                                 __CFG_MCLRE$EXTMCLR 000000  
                                            _putch EC28                                              tablat 003FF5  
                                            plusw1 003FE3                                              plusw2 003FDB  
              convertReg2ExtendedCANid@ConvertedID 0010                                              status 003FD8  
                             CAN_transmit@tempEIDH 0016                               CAN_transmit@tempEIDL 0017  
                             CAN_transmit@tempSIDH 0018                               CAN_transmit@tempSIDL 0019  
                                  __initialization EC20                               __size_of_CAN_receive 028E  
                            _uart_command_received EF68                                       __end_of_main F2C6  
                       __size_of_UART2_is_rx_ready 000E                                     __CFG_SAFEN$OFF 000000  
                                     ?_UART2_Write 0001                                             ??_main 0027  
                                   __CFG_PR1WAY$ON 000000                                      __activetblptr 000003  
                                 _UART1_Initialize ED4A                                  ??_ECAN_Initialize 0001  
                                           _CANCON 003F8F                                             _CIOCON 003700  
                                           _ANSELA 003A40                                             ?_putch 0001  
                                           _ANSELB 003A50                                             _ANSELC 003A60  
                                           _U1CON0 003DF2                                             _U1CON1 003DF3  
                                           _U1CON2 003DF4                                             _U1BRGH 003DF6  
                                           _U1FIFO 003DF7                                             _U2CON0 003DDA  
                                           _U2CON1 003DDB                                             _U1BRGL 003DF5  
                                           _U2CON2 003DDC                                             _U2BRGH 003DDE  
                                           _U2FIFO 003DDF                                             _U2BRGL 003DDD  
                              __size_of_UART2_Read 0014                                             _RB0PPS 003A08  
                                           _RB4PPS 003A0C                                             _ODCONA 003A42  
                                           _ODCONB 003A52                                             _ODCONC 003A62  
                                           _RC6PPS 003A16                                     __CFG_WDTCCS$SC 000000  
                                 ??_APP_Initialize 0002                                             _OSCFRQ 0039DF  
                                           _RXB0D0 003F86                                             _RXB0D1 003F87  
                                           _RXB0D2 003F88                                             _RXB0D3 003F89  
                                           _RXB0D4 003F8A                                             _RXB1D0 0037F6  
                                           _RXB0D5 003F8B                                             _RXB1D1 0037F7  
                                           _RXB0D6 003F8C                                             _RXB1D2 0037F8  
                                           _RXB0D7 003F8D                                             _RXB1D3 0037F9  
                                           _RXB1D4 0037FA                                             _RXB1D5 0037FB  
                                           _RXB1D6 0037FC                                             _RXB1D7 0037FD  
                                           _TXB0D0 0037E6                                             _TXB0D1 0037E7  
                                           _TXB0D2 0037E8                                             _TXB0D3 0037E9  
                                           _TXB0D4 0037EA                                             _TXB1D0 0037D6  
                                           _TXB0D5 0037EB                                             _TXB1D1 0037D7  
                                           _TXB0D6 0037EC                                             _TXB1D2 0037D8  
                                           _TXB0D7 0037ED                                             _TXB1D3 0037D9  
                                           _TXB1D4 0037DA                                             _TXB2D0 0037C6  
                                           _TXB1D5 0037DB                                             _TXB2D1 0037C7  
                                           _TXB1D6 0037DC                                             _TXB2D2 0037C8  
                                           _TXB1D7 0037DD                                             _TXB2D3 0037C9  
                                           _TXB2D4 0037CA                                             _TXB2D5 0037CB  
                                           _TXB2D6 0037CC                                             _TXB2D7 0037CD  
                                   __CFG_XINST$OFF 000000                                   _UART2_Initialize ED8A  
                                 __end_of_btn_init ECF0                                   __end_of_led_init ECCE  
                                   __CFG_STVREN$ON 000000                                          ??___lwdiv 0005  
                                        ??___lwmod 000C                                             _memcpy EE58  
                                           _memset ED14                                             _printf F44E  
                                   _PMD_Initialize ECF0                                       __mediumconst FE48  
                        __size_of_convertCANid2Reg 0240                   __end_of_convertReg2StandardCANid F098  
                                           tblptrh 003FF7                                             tblptrl 003FF6  
                                           tblptru 003FF8                                  _SYSTEM_Initialize EC96  
                                       __accesstop 0060                            __end_of__initialization EC22  
                               ?_SYSTEM_Initialize 0001                           _convertReg2ExtendedCANid F2C6  
                           CAN_receive@returnValue 0016                                      ___rparam_used 000001  
                           ?_uart_command_received 0001                                     __pcstackCOMRAM 0001  
                                   main@can_msg_rx 0044                                     main@can_msg_tx 0036  
                              ??_SYSTEM_Initialize 0002                                      __end_of_putch EC32  
                           __end_of_PMD_Initialize ED14                              __size_of_CAN_transmit 033A  
            convertReg2StandardCANid@tempRXBn_SIDH 0007              convertReg2StandardCANid@tempRXBn_SIDL 0001  
                        __end_of_SYSTEM_Initialize ECB0                                    __CFG_IVT1WAY$ON 000000  
                                          ??_putch 0002                                    __CFG_MVECEN$OFF 000000  
                                     _CAN_transmit FB0E                                       ??_UART2_Read 0001  
                                  __CFG_PPS1WAY$ON 000000                                            ?_memcpy 0001  
                                          _ECANCON 003F91                                            ?_memset 0001  
                                          _CANSTAT 003F8E                                            ?_printf 000D  
                                  ?_PMD_Initialize 0001                                            _BRGCON1 003703  
                                          _BRGCON2 003704                                            _BRGCON3 003705  
                                          _U1ERRIE 003DFA                                            _U1ERRIR 003DF9  
                                          _U2ERRIE 003DE2                                            _U2ERRIR 003DE1  
                              __CFG_PWRTS$PWRT_OFF 000000                               __size_of_UART2_Write 0010  
                                          _U1RXPPS 003AE7                                            _U2RXPPS 003AEA  
                                          _OSCCON1 0039D9                                            _OSCCON3 0039DB  
                                          _RXB0DLC 003F85                                            _RXB1DLC 0037F5  
                                          _OSCTUNE 0039DE                                            _TXB0DLC 0037E5  
                                          _SLRCONA 003A43                                            _SLRCONB 003A53  
                                          _SLRCONC 003A63                                            _TXB1DLC 0037D5  
                                          _TXB2DLC 0037C5                                          ?_btn_init 0001  
                                        ?_led_init 0001                                         _led_toggle EE10  
                               __end_of_UART2_Read EC64                                            __Hparam 0000  
                                          __Lparam 0000                           __end_of_UART1_Initialize ED8A  
                __size_of_convertReg2StandardCANid 009C                         __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                        ?_convertReg2StandardCANid 0001                                    _ECAN_Initialize F098  
                                          ___lwdiv EEAE                                            ___lwmod EDCA  
                                          __pcinit EC20                                    __size_of_memcpy 0056  
                                  __size_of_memset 0036                                            __ramtop 1000  
                                          __ptext0 F148                                            __ptext1 EF68  
                                          __ptext2 EC32                                            __ptext3 EC50  
                                          __ptext4 F44E                                            __ptext5 EC28  
                                          __ptext6 EC40                                            __ptext7 EDCA  
                                          __ptext8 EEAE                                            __ptext9 ED14  
                                  __size_of_printf 01F2                                    __CFG_WRTAPP$OFF 000000  
                                          _dpowers FE49                              _OSCILLATOR_Initialize EC64  
                                 _convertCANid2Reg F640                           ??_PIN_MANAGER_Initialize 0001  
                                  __CFG_WRTSAF$OFF 000000                           __end_of_UART2_Initialize EDCA  
                       __size_of_SYSTEM_Initialize 001A                                         ??_btn_init 0001  
                                       ??_led_init 0001                               end_of_initialization EC22  
                                          memcpy@d 0007                                            memcpy@n 0005  
                                          memcpy@s 0009                                            memset@c 0003  
                                          memset@n 0005                                            memset@p 0007  
                                    ??_CAN_receive 0016                                            printf@c 0026  
                                          printf@f 000D                                            postdec2 003FDD  
                                          postinc2 003FDE                                  led_toggle@led_num 0002  
                            __CFG_WDTCPS$WDTCPS_31 000000                                          _PORTAbits 003FCA  
                                        _TRISAbits 003FC2                             CAN_transmit@tempCanMsg 0013  
                       ??_convertReg2ExtendedCANid 0005                                   __CFG_FEXTOSC$OFF 000000  
                                      ?_led_toggle 0001                            ??_uart_command_received 0003  
                          __end_of_ECAN_Initialize F148                                __end_of_CAN_receive FB0E  
                                   __end_of_memcpy EEAE                             ?_OSCILLATOR_Initialize 0001  
                                   __end_of_memset ED4A                                     __end_of_printf F640  
                              start_initialization EC20                    __size_of_PIN_MANAGER_Initialize 0064  
                                      putch@txData 0002                convertReg2StandardCANid@returnValue 0008  
                uart_command_received@command_read 0001                                   __CFG_LPBOREN$OFF 000000  
                                 ??_PMD_Initialize 0001                            __size_of_APP_Initialize 001A  
                                         ??_memcpy 0007                                           ??_memset 0007  
                                UART2_Write@txData 0001                                __size_of_led_toggle 0048  
                                         ??_printf 001D                                        __pbssCOMRAM 0052  
                                __size_of_btn_init 0022                                  __size_of_led_init 001E  
                                      _CAN_receive F880                                   ?_ECAN_Initialize 0001  
                                 ___lwdiv@dividend 0001                             _PIN_MANAGER_Initialize EF04  
                         __end_of_convertCANid2Reg F880                                  ?_UART1_Initialize 0001  
                                    __pmediumconst FE48                                           ?___lwdiv 0001  
                               ??_UART1_Initialize 0001                                           ?___lwmod 0008  
                   uart_command_received@uart_char 0003                                      ??_UART2_Write 0001  
                           __CFG_BBSIZE$BBSIZE_512 000000                                        _COMSTATbits 003F90  
                                         _CANRXPPS 003AED                   __end_of_convertReg2ExtendedCANid F44E  
                   convertCANid2Reg@tempPassedInID 0001                                  ?_UART2_Initialize 0001  
                                 ___lwdiv@quotient 0005                                        _U1ERRIRbits 003DF9  
                               ??_UART2_Initialize 0001                                     __size_of_putch 000A  
                                      _U2ERRIRbits 003DE1                                           _LATAbits 003FBA  
                                         _PIE5bits 003995                                __CFG_BORV$VBOR_2P45 000000  
                                         _PIR3bits 0039A3                                           _PIR5bits 0039A5  
                                         _PIR7bits 0039A7                                           _RXB0EIDH 003F83  
                                         _RXB0EIDL 003F84                                           _RXB1EIDH 0037F3  
                                         _RXB1EIDL 0037F4                                           _RXB0SIDH 003F81  
                                         _RXB0SIDL 003F82                                           _RXF0EIDH 0037A2  
                                         _RXB1SIDH 0037F1                                           _RXF0EIDL 0037A3  
                                         _RXB1SIDL 0037F2                                           _RXF1EIDH 0037A6  
                                         _RXF1EIDL 0037A7                                           _RXF2EIDH 0037AA  
                                         _RXF2EIDL 0037AB                                           _RXF3EIDH 0037AE  
                                         _RXF3EIDL 0037AF                                           _RXF4EIDH 0037B2  
                                         _RXF4EIDL 0037B3                                           _RXF5EIDH 0037B6  
                                         _RXF5EIDL 0037B7                                           _RXF0SIDH 0037A0  
                                         _RXF0SIDL 0037A1                                           _RXF1SIDH 0037A4  
                                         _TXB0EIDH 0037E3                                           _RXF1SIDL 0037A5  
                                         _TXB0EIDL 0037E4                                           _RXF2SIDH 0037A8  
                                         _TXB1EIDH 0037D3                                           _RXF2SIDL 0037A9  
                                         _TXB1EIDL 0037D4                                           _RXF3SIDH 0037AC  
                                         _TXB2EIDH 0037C3                                           _RXF3SIDL 0037AD  
                                         _TXB2EIDL 0037C4                                           _RXF4SIDH 0037B0  
                                         _RXF4SIDL 0037B1                                           _RXF5SIDH 0037B4  
                                         _RXF5SIDL 0037B5                                           _RXM0EIDH 0037BA  
                                         _RXM0EIDL 0037BB                                           _RXM1EIDH 0037BE  
                                         _TXB0SIDH 0037E1                                           _RXM1EIDL 0037BF  
                                         _TXB0SIDL 0037E2                                           _TXB1SIDH 0037D1  
                                         _TXB1SIDL 0037D2                                           _TXB2SIDH 0037C1  
                                         _TXB2SIDL 0037C2                                           _RXM0SIDH 0037B8  
                                         _RXM0SIDL 0037B9                                           _RXM1SIDH 0037BC  
                                         _RXM1SIDL 0037BD                                         printf@flag 001E  
                                         _WPUAbits 003A41                                         printf@prec 001F  
                              __end_of_UART2_Write EC50                                   main@uart_data_rx 0027  
                                     ??_led_toggle 0001                           _convertReg2StandardCANid EFFC  
            convertReg2ExtendedCANid@tempRXBn_EIDH 0009              convertReg2ExtendedCANid@tempRXBn_EIDL 0001  
                   __size_of_uart_command_received 0094              convertReg2ExtendedCANid@tempRXBn_SIDH 0002  
            convertReg2ExtendedCANid@tempRXBn_SIDL 0003                      __end_of_uart_command_received EFFC  
                                         __Hrparam 0000                                          memcpy@tmp 000B  
                                         __Lrparam 0000                                 __CFG_BOREN$SBORDIS 000000  
                                   _APP_Initialize EC7C                          convertCANid2Reg@canIdType 0005  
                          ??_OSCILLATOR_Initialize 0001                                   __size_of___lwdiv 0056  
                                 __size_of___lwmod 0046  convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 000F  
                               __end_of_led_toggle EE58                             uart_command_received@i 0004  
convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 000E                            convertCANid2Reg@wipSIDL 0012  
                                  ___lwdiv@divisor 0003                                    ___lwdiv@counter 0007  
                                         __ptext10 EE58                                           __ptext11 EE10  
                                         __ptext20 F640                                           __ptext12 EC96  
                                         __ptext21 F880                                           __ptext13 ED8A  
                                         __ptext22 EFFC                                           __ptext14 ED4A  
                                         __ptext23 F2C6                                           __ptext15 ECF0  
                                         __ptext24 EC7C                                           __ptext16 EF04  
                                         __ptext25 ECB0                                           __ptext17 EC64  
                                         __ptext26 ECCE                                           __ptext18 F098  
                                         __ptext19 FB0E                                         _U1CON0bits 003DF2  
                                       _U1CON1bits 003DF3                                           _led_init ECB0  
                                         _btn_init ECCE                                         _U2CON0bits 003DDA  
                                       _U2CON1bits 003DDB                convertReg2StandardCANid@ConvertedID 000C  
                                    __size_of_main 017E                convertReg2ExtendedCANid@returnValue 000A  
                             __CFG_WDTCWS$WDTCWS_7 000000                             __end_of_APP_Initialize EC96  
                __size_of_convertReg2ExtendedCANid 0188                          ?_convertReg2ExtendedCANid 0001  
                                    ?_CAN_transmit 0013                                          printf@val 0024  
                                      _UART2_Write EC40                                        _RXB0CONbits 003F80  
                                      _RXB1CONbits 0037F0                                           memcpy@d1 0001  
                                         memcpy@s1 0003                                           memset@p1 0001  
              uart_command_received@uart_read_byte 0052                                   ___lwmod@dividend 0008  
                          ?_PIN_MANAGER_Initialize 0001                                  __CFG_CLKOUTEN$OFF 000000  
                                      _TXB0CONbits 0037E0                                       ?_CAN_receive 0014  
                                      _TXB1CONbits 0037D0                                        _TXB2CONbits 0037C0  
                                  ?_APP_Initialize 0001                                     ??_CAN_transmit 0015  
                                ?_convertCANid2Reg 0001                                           printf@ap 0020  
                                         printf@cp 0022                                         _UART2_Read EC50  
                               ??_convertCANid2Reg 000E                                  _UART2_is_rx_ready EC32  
                               ?_UART2_is_rx_ready 0001                                    ___lwmod@divisor 000A  
                                  ___lwmod@counter 000C                          __size_of_UART1_Initialize 0040  
                              ??_UART2_is_rx_ready 0001                     __end_of_PIN_MANAGER_Initialize EF68  
                                  btn_init@btn_num 0001                                    led_init@led_num 0001  
                        __size_of_UART2_Initialize 0040  
